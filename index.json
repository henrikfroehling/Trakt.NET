{
  "api/TraktNet.Core.TraktConfiguration.html": {
    "href": "api/TraktNet.Core.TraktConfiguration.html",
    "title": "Class TraktConfiguration | Trakt.NET",
    "keywords": "Class TraktConfiguration Namespace TraktNet.Core Assembly Trakt.NET.dll Provides global client settings. public class TraktConfiguration Inheritance object TraktConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApiVersion Gets or sets the Trakt API version. See \"Trakt API Doc - Required Headers\" for more information. public int ApiVersion { get; set; } Property Value int BaseUrl Returns the Trakt API base URL based on, whether UseSandboxEnvironment is false or true. public string BaseUrl { get; } Property Value string ForceAuthorization Gets or sets, whether authorization should be enforced, even if it is optional. This is disabled by default. public bool ForceAuthorization { get; set; } Property Value bool ThrowResponseExceptions Gets or sets, whether responses should throw exceptions on failure. public bool ThrowResponseExceptions { get; set; } Property Value bool UseSandboxEnvironment Gets or sets, whether the Trakt API staging environment should be used. This is disabled by default. See \"Trakt API Doc - API URL\" for more information. public bool UseSandboxEnvironment { get; set; } Property Value bool"
  },
  "api/TraktNet.Core.html": {
    "href": "api/TraktNet.Core.html",
    "title": "Namespace TraktNet.Core | Trakt.NET",
    "keywords": "Namespace TraktNet.Core Classes TraktConfiguration Provides global client settings."
  },
  "api/TraktNet.Enums.TraktAccessScope.html": {
    "href": "api/TraktNet.Enums.TraktAccessScope.html",
    "title": "Class TraktAccessScope | Trakt.NET",
    "keywords": "Class TraktAccessScope Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the access authorization for different resources. public sealed class TraktAccessScope : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktAccessScope Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktAccessScope() Initializes a new instance of the TraktAccessScope class. The initialized TraktAccessScope is invalid. public TraktAccessScope() Properties Friends A resource can only be accessed by friends of an user. public static TraktAccessScope Friends { get; } Property Value TraktAccessScope Private A resource can only be accessed by the user. public static TraktAccessScope Private { get; } Property Value TraktAccessScope Public A resource can be accessed by all. public static TraktAccessScope Public { get; } Property Value TraktAccessScope Unspecified An invalid access scope. public static TraktAccessScope Unspecified { get; } Property Value TraktAccessScope"
  },
  "api/TraktNet.Enums.TraktAccessTokenGrantType.html": {
    "href": "api/TraktNet.Enums.TraktAccessTokenGrantType.html",
    "title": "Class TraktAccessTokenGrantType | Trakt.NET",
    "keywords": "Class TraktAccessTokenGrantType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the grant type to specify how an access tokenshould be retrieved during authentication. public sealed class TraktAccessTokenGrantType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktAccessTokenGrantType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktAccessTokenGrantType() Initializes a new instance of the TraktAccessTokenGrantType class. The initialized TraktAccessTokenGrantType is invalid. public TraktAccessTokenGrantType() Properties AuthorizationCode The grant type to specify the retrieving of an access token with an user code. public static TraktAccessTokenGrantType AuthorizationCode { get; } Property Value TraktAccessTokenGrantType RefreshToken The grant type to specify the retrieving of an access token with a refresh token. public static TraktAccessTokenGrantType RefreshToken { get; } Property Value TraktAccessTokenGrantType Unspecified An invalid access token grant type. public static TraktAccessTokenGrantType Unspecified { get; } Property Value TraktAccessTokenGrantType"
  },
  "api/TraktNet.Enums.TraktAccessTokenType.html": {
    "href": "api/TraktNet.Enums.TraktAccessTokenType.html",
    "title": "Class TraktAccessTokenType | Trakt.NET",
    "keywords": "Class TraktAccessTokenType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an access token. public sealed class TraktAccessTokenType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktAccessTokenType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktAccessTokenType() Initializes a new instance of the TraktAccessTokenType class. The initialized TraktAccessTokenType is invalid. public TraktAccessTokenType() Properties Bearer The access token type for Bearer tokens. public static TraktAccessTokenType Bearer { get; } Property Value TraktAccessTokenType Unspecified An invalid access token type. public static TraktAccessTokenType Unspecified { get; } Property Value TraktAccessTokenType"
  },
  "api/TraktNet.Enums.TraktCommentSortOrder.html": {
    "href": "api/TraktNet.Enums.TraktCommentSortOrder.html",
    "title": "Class TraktCommentSortOrder | Trakt.NET",
    "keywords": "Class TraktCommentSortOrder Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the sort order for comments. public sealed class TraktCommentSortOrder : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktCommentSortOrder Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktCommentSortOrder() Initializes a new instance of the TraktCommentSortOrder class. The initialized TraktCommentSortOrder is invalid. public TraktCommentSortOrder() Properties Likes Comments will be sorted by the number of likes first. public static TraktCommentSortOrder Likes { get; } Property Value TraktCommentSortOrder Newest Comments will be sorted by newest comments first. public static TraktCommentSortOrder Newest { get; } Property Value TraktCommentSortOrder Oldest Comments will be sorted by oldest comments first. public static TraktCommentSortOrder Oldest { get; } Property Value TraktCommentSortOrder Replies Comments will be sorted by the number of replies first. public static TraktCommentSortOrder Replies { get; } Property Value TraktCommentSortOrder Unspecified An invalid sort order. public static TraktCommentSortOrder Unspecified { get; } Property Value TraktCommentSortOrder"
  },
  "api/TraktNet.Enums.TraktCommentType.html": {
    "href": "api/TraktNet.Enums.TraktCommentType.html",
    "title": "Class TraktCommentType | Trakt.NET",
    "keywords": "Class TraktCommentType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the comment type. public sealed class TraktCommentType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktCommentType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktCommentType() Initializes a new instance of the TraktCommentType class. The initialized TraktCommentType is invalid. public TraktCommentType() Properties All The comment type for both reviews and shouts. public static TraktCommentType All { get; } Property Value TraktCommentType Review The comment type for reviews. public static TraktCommentType Review { get; } Property Value TraktCommentType Shout The comment type for shouts. public static TraktCommentType Shout { get; } Property Value TraktCommentType Unspecified An invalid comment type. public static TraktCommentType Unspecified { get; } Property Value TraktCommentType"
  },
  "api/TraktNet.Enums.TraktDateFormat.html": {
    "href": "api/TraktNet.Enums.TraktDateFormat.html",
    "title": "Class TraktDateFormat | Trakt.NET",
    "keywords": "Class TraktDateFormat Namespace TraktNet.Enums Assembly Trakt.NET.dll public sealed class TraktDateFormat : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktDateFormat Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktDateFormat() Initializes a new instance of the TraktDateFormat class. The initialized TraktDateFormat is invalid. public TraktDateFormat() Properties DayMonthYear The date format for Day Month Year. public static TraktDateFormat DayMonthYear { get; } Property Value TraktDateFormat MonthDayYear The date format for Month Day Year. public static TraktDateFormat MonthDayYear { get; } Property Value TraktDateFormat Unspecified An invalid date format. public static TraktDateFormat Unspecified { get; } Property Value TraktDateFormat YearDayMonth The date format for Year Day Month. public static TraktDateFormat YearDayMonth { get; } Property Value TraktDateFormat YearMonthDay The date format for Year Month Day. public static TraktDateFormat YearMonthDay { get; } Property Value TraktDateFormat"
  },
  "api/TraktNet.Enums.TraktEnumeration.html": {
    "href": "api/TraktNet.Enums.TraktEnumeration.html",
    "title": "Class TraktEnumeration | Trakt.NET",
    "keywords": "Class TraktEnumeration Namespace TraktNet.Enums Assembly Trakt.NET.dll public abstract class TraktEnumeration : IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Derived TraktAccessScope TraktAccessTokenGrantType TraktAccessTokenType TraktCommentSortOrder TraktCommentType TraktDateFormat TraktEpisodeType TraktExtendedCommentSortOrder TraktFavoriteObjectType TraktFilterSection TraktGender TraktGenreType TraktHiddenItemType TraktHiddenItemsSection TraktHistoryActionType TraktKnownForDepartment TraktLastActivity TraktListItemType TraktListPrivacy TraktListSortOrder TraktListType TraktMediaAudio TraktMediaAudioChannel TraktMediaHDR TraktMediaResolution TraktMediaType TraktMovieStatus TraktNotesObjectType TraktObjectType TraktRatingsItemType TraktReleaseType TraktScrobbleActionType TraktSearchField TraktSearchIdType TraktSearchResultType TraktShowStatus TraktShowsCommentSortOrder TraktSortBy TraktSortHow TraktSyncItemType TraktSyncType TraktTimePeriod TraktUserLikeType TraktWatchlistSortOrder Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktEnumeration() protected TraktEnumeration() TraktEnumeration(int, string, string, string) protected TraktEnumeration(int value, string objectName, string uriName, string displayName) Parameters value int objectName string uriName string displayName string Fields DISPLAY_NAME_UNSPECIFIED protected const string DISPLAY_NAME_UNSPECIFIED = \"Unspecified\" Field Value string Properties DisplayName Returns the human readable name of the enumeration. See also ToString(). public string DisplayName { get; } Property Value string ObjectName Returns the enumeration name for object properties. public string ObjectName { get; } Property Value string UriName Returns the enumeration name for URI path parameters. public string UriName { get; } Property Value string Value Returns the numeric value of the enumeration. public int Value { get; } Property Value int Methods AbsoluteDifference(TraktEnumeration, TraktEnumeration) Calculates the absolute difference of the Value for two enumerations. public static int AbsoluteDifference(TraktEnumeration first, TraktEnumeration second) Parameters first TraktEnumeration The first enumeration. second TraktEnumeration The second enumeration. Returns int The absolute difference of the Value for two enumerations. CompareTo(TraktEnumeration) Compares the Value of this enumeration with the value of another enumeration. public int CompareTo(TraktEnumeration other) Parameters other TraktEnumeration The other enumeration to compare with. Returns int An indication of their relative values. Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(TraktEnumeration) Returns, whether this enumeration instance is equal to another enumeration instance. public bool Equals(TraktEnumeration other) Parameters other TraktEnumeration The other enumeration instance to compare with. Returns bool True, if both enumeration instances are equal, otherwise false. Equals(TraktEnumeration, TraktEnumeration) public bool Equals(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool FromDisplayName<T>(string) Creates an enumeration of type T from the given display name. public static T FromDisplayName<T>(string displayName) where T : TraktEnumeration, new() Parameters displayName string The display name from which the enumeration should be created. Returns T An enumeration of type T or null, if the value could not be found in the available values for the enumeration. Type Parameters T The type of the enumeration, which should be created. FromObjectName<T>(string) Creates an enumeration of type T from the given object name. public static T FromObjectName<T>(string objectName) where T : TraktEnumeration, new() Parameters objectName string The object name from which the enumeration should be created. Returns T An enumeration of type T or null, if the value could not be found in the available values for the enumeration. Type Parameters T The type of the enumeration, which should be created. FromUriName<T>(string) Creates an enumeration of type T from the given URI name. public static T FromUriName<T>(string uriName) where T : TraktEnumeration, new() Parameters uriName string The URI name from which the enumeration should be created. Returns T An enumeration of type T or null, if the value could not be found in the available values for the enumeration. Type Parameters T The type of the enumeration, which should be created. FromValue<T>(int) Creates an enumeration of type T from the given value. public static T FromValue<T>(int value) where T : TraktEnumeration, new() Parameters value int The value from which the enumeration should be created. Returns T An enumeration of type T or null, if the value could not be found in the available values for the enumeration. Type Parameters T The type of the enumeration, which should be created. GetAll<T>() Returns a list of all enumerations of an enumeration of type T. public static IEnumerable<T> GetAll<T>() where T : TraktEnumeration, new() Returns IEnumerable<T> A list of all enumerations of an enumeration of type T. Type Parameters T The enumeration, of which a list of all enumerations should be returned. GetHashCode() Returns the hash code of this enumeration. public override int GetHashCode() Returns int An hash code of this enumeration. GetHashCode(TraktEnumeration) public int GetHashCode(TraktEnumeration obj) Parameters obj TraktEnumeration Returns int ToString() Returns the human readable name of the enumeration. See also DisplayName. public override string ToString() Returns string Operators operator ==(TraktEnumeration, TraktEnumeration) public static bool operator ==(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool operator >(TraktEnumeration, TraktEnumeration) public static bool operator >(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool operator >=(TraktEnumeration, TraktEnumeration) public static bool operator >=(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool operator !=(TraktEnumeration, TraktEnumeration) public static bool operator !=(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool operator <(TraktEnumeration, TraktEnumeration) public static bool operator <(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool operator <=(TraktEnumeration, TraktEnumeration) public static bool operator <=(TraktEnumeration left, TraktEnumeration right) Parameters left TraktEnumeration right TraktEnumeration Returns bool"
  },
  "api/TraktNet.Enums.TraktEpisodeType.html": {
    "href": "api/TraktNet.Enums.TraktEpisodeType.html",
    "title": "Class TraktEpisodeType | Trakt.NET",
    "keywords": "Class TraktEpisodeType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an episode. public sealed class TraktEpisodeType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktEpisodeType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktEpisodeType() Initializes a new instance of the TraktEpisodeType class. The initialized TraktEpisodeType is invalid. public TraktEpisodeType() Properties MidSeasonFinale The type for a mid season finale episode. public static TraktEpisodeType MidSeasonFinale { get; } Property Value TraktEpisodeType MidSeasonPremiere The type for a mid season premiere episode (the next episode after the mid season finale). public static TraktEpisodeType MidSeasonPremiere { get; } Property Value TraktEpisodeType SeasonFinale The type for a season finale episode. public static TraktEpisodeType SeasonFinale { get; } Property Value TraktEpisodeType SeasonPremiere The type for a season premiere episode (episode 1). public static TraktEpisodeType SeasonPremiere { get; } Property Value TraktEpisodeType SeriesFinale The type for a series finale episode (last episode to air for an ended show). public static TraktEpisodeType SeriesFinale { get; } Property Value TraktEpisodeType SeriesPremiere The type for a series premiere episode (season 1, episode 1). public static TraktEpisodeType SeriesPremiere { get; } Property Value TraktEpisodeType Standard The type for a standard episode. public static TraktEpisodeType Standard { get; } Property Value TraktEpisodeType Unspecified An invalid episode type. public static TraktEpisodeType Unspecified { get; } Property Value TraktEpisodeType"
  },
  "api/TraktNet.Enums.TraktExtendedCommentSortOrder.html": {
    "href": "api/TraktNet.Enums.TraktExtendedCommentSortOrder.html",
    "title": "Class TraktExtendedCommentSortOrder | Trakt.NET",
    "keywords": "Class TraktExtendedCommentSortOrder Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the sort order for comments. public sealed class TraktExtendedCommentSortOrder : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktExtendedCommentSortOrder Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktExtendedCommentSortOrder() Initializes a new instance of the TraktExtendedCommentSortOrder class. The initialized TraktExtendedCommentSortOrder is invalid. public TraktExtendedCommentSortOrder() TraktExtendedCommentSortOrder(int, string, string, string) public TraktExtendedCommentSortOrder(int value, string objectName, string uriName, string displayName) Parameters value int objectName string uriName string displayName string Properties Highest Comments will be sorted by highest comments first. public static TraktExtendedCommentSortOrder Highest { get; } Property Value TraktExtendedCommentSortOrder Likes Comments will be sorted by the number of likes first. public static TraktExtendedCommentSortOrder Likes { get; } Property Value TraktExtendedCommentSortOrder Lowest Comments will be sorted by lowest comments first. public static TraktExtendedCommentSortOrder Lowest { get; } Property Value TraktExtendedCommentSortOrder Newest Comments will be sorted by newest comments first. public static TraktExtendedCommentSortOrder Newest { get; } Property Value TraktExtendedCommentSortOrder Oldest Comments will be sorted by oldest comments first. public static TraktExtendedCommentSortOrder Oldest { get; } Property Value TraktExtendedCommentSortOrder Plays Comments will be sorted by the number of plays first. public static TraktExtendedCommentSortOrder Plays { get; } Property Value TraktExtendedCommentSortOrder Replies Comments will be sorted by the number of replies first. public static TraktExtendedCommentSortOrder Replies { get; } Property Value TraktExtendedCommentSortOrder Unspecified An invalid sort order. public static TraktExtendedCommentSortOrder Unspecified { get; } Property Value TraktExtendedCommentSortOrder"
  },
  "api/TraktNet.Enums.TraktFavoriteObjectType.html": {
    "href": "api/TraktNet.Enums.TraktFavoriteObjectType.html",
    "title": "Class TraktFavoriteObjectType | Trakt.NET",
    "keywords": "Class TraktFavoriteObjectType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a favorite item. public sealed class TraktFavoriteObjectType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktFavoriteObjectType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktFavoriteObjectType() Initializes a new instance of the TraktFavoriteObjectType class. The initialized TraktFavoriteObjectType is invalid. public TraktFavoriteObjectType() Properties Movie The recommendation contains a movie. public static TraktFavoriteObjectType Movie { get; } Property Value TraktFavoriteObjectType Show The recommendation contains a show. public static TraktFavoriteObjectType Show { get; } Property Value TraktFavoriteObjectType Unspecified An invalid object type. public static TraktFavoriteObjectType Unspecified { get; } Property Value TraktFavoriteObjectType"
  },
  "api/TraktNet.Enums.TraktFilterSection.html": {
    "href": "api/TraktNet.Enums.TraktFilterSection.html",
    "title": "Class TraktFilterSection | Trakt.NET",
    "keywords": "Class TraktFilterSection Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the filter section of saved filters. public sealed class TraktFilterSection : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktFilterSection Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktFilterSection() Initializes a new instance of the TraktFilterSection class. The initialized TraktFilterSection is invalid. public TraktFilterSection() Properties Calendars The filter section for calendars. public static TraktFilterSection Calendars { get; } Property Value TraktFilterSection Movies The filter section for movies. public static TraktFilterSection Movies { get; } Property Value TraktFilterSection Search The filter section for search. public static TraktFilterSection Search { get; } Property Value TraktFilterSection Shows The filter section for shows. public static TraktFilterSection Shows { get; } Property Value TraktFilterSection Unspecified An invalid filter section. public static TraktFilterSection Unspecified { get; } Property Value TraktFilterSection"
  },
  "api/TraktNet.Enums.TraktGender.html": {
    "href": "api/TraktNet.Enums.TraktGender.html",
    "title": "Class TraktGender | Trakt.NET",
    "keywords": "Class TraktGender Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the gender of a person. public sealed class TraktGender : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktGender Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktGender() Initializes a new instance of the TraktGender class. The initialized TraktGender is invalid. public TraktGender() Properties Female The female gender. public static TraktGender Female { get; } Property Value TraktGender Male The male gender. public static TraktGender Male { get; } Property Value TraktGender NonBinary The non binary gender. public static TraktGender NonBinary { get; } Property Value TraktGender Unspecified An invalid gender type. public static TraktGender Unspecified { get; } Property Value TraktGender"
  },
  "api/TraktNet.Enums.TraktGenreType.html": {
    "href": "api/TraktNet.Enums.TraktGenreType.html",
    "title": "Class TraktGenreType | Trakt.NET",
    "keywords": "Class TraktGenreType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the genre type of movie and show genres. public sealed class TraktGenreType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktGenreType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktGenreType() Initializes a new instance of the TraktGenreType class. The initialized TraktGenreType is invalid. public TraktGenreType() Properties Movies The genre type for movies. public static TraktGenreType Movies { get; } Property Value TraktGenreType Shows The genre type for shows. public static TraktGenreType Shows { get; } Property Value TraktGenreType Unspecified An invalid genre type. public static TraktGenreType Unspecified { get; } Property Value TraktGenreType"
  },
  "api/TraktNet.Enums.TraktHiddenItemType.html": {
    "href": "api/TraktNet.Enums.TraktHiddenItemType.html",
    "title": "Class TraktHiddenItemType | Trakt.NET",
    "keywords": "Class TraktHiddenItemType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in an hidden item. public sealed class TraktHiddenItemType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktHiddenItemType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktHiddenItemType() Initializes a new instance of the TraktHiddenItemType class. The initialized TraktHiddenItemType is invalid. public TraktHiddenItemType() Properties Movie The hidden item contains a movie. public static TraktHiddenItemType Movie { get; } Property Value TraktHiddenItemType Season The hidden item contains a season. public static TraktHiddenItemType Season { get; } Property Value TraktHiddenItemType Show The listhidden item contains a show. public static TraktHiddenItemType Show { get; } Property Value TraktHiddenItemType Unspecified An invalid object type. public static TraktHiddenItemType Unspecified { get; } Property Value TraktHiddenItemType User The hidden item contains a user. public static TraktHiddenItemType User { get; } Property Value TraktHiddenItemType"
  },
  "api/TraktNet.Enums.TraktHiddenItemsSection.html": {
    "href": "api/TraktNet.Enums.TraktHiddenItemsSection.html",
    "title": "Class TraktHiddenItemsSection | Trakt.NET",
    "keywords": "Class TraktHiddenItemsSection Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the section, from which hidden items should be requested. public sealed class TraktHiddenItemsSection : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktHiddenItemsSection Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktHiddenItemsSection() Initializes a new instance of the TraktHiddenItemsSection class. The initialized TraktHiddenItemsSection is invalid. public TraktHiddenItemsSection() Properties Calendar The section for calendars. public static TraktHiddenItemsSection Calendar { get; } Property Value TraktHiddenItemsSection Comments The section for watched reset progress. public static TraktHiddenItemsSection Comments { get; } Property Value TraktHiddenItemsSection ProgressCollected The section for collected progress. public static TraktHiddenItemsSection ProgressCollected { get; } Property Value TraktHiddenItemsSection ProgressWatched The section for watched progress. public static TraktHiddenItemsSection ProgressWatched { get; } Property Value TraktHiddenItemsSection ProgressWatchedReset The section for watched reset progress. public static TraktHiddenItemsSection ProgressWatchedReset { get; } Property Value TraktHiddenItemsSection Recommendations The section for recommendations. public static TraktHiddenItemsSection Recommendations { get; } Property Value TraktHiddenItemsSection Unspecified An invalid section. public static TraktHiddenItemsSection Unspecified { get; } Property Value TraktHiddenItemsSection"
  },
  "api/TraktNet.Enums.TraktHistoryActionType.html": {
    "href": "api/TraktNet.Enums.TraktHistoryActionType.html",
    "title": "Class TraktHistoryActionType | Trakt.NET",
    "keywords": "Class TraktHistoryActionType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the action type of an history item. public sealed class TraktHistoryActionType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktHistoryActionType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktHistoryActionType() Initializes a new instance of the TraktHistoryActionType class. The initialized TraktHistoryActionType is invalid. public TraktHistoryActionType() Properties Checkin The history item is / was checked in. public static TraktHistoryActionType Checkin { get; } Property Value TraktHistoryActionType Scrobble The history item is / was scrobbled. public static TraktHistoryActionType Scrobble { get; } Property Value TraktHistoryActionType Unspecified An invalid action type. public static TraktHistoryActionType Unspecified { get; } Property Value TraktHistoryActionType Watch The history item is / was watched. public static TraktHistoryActionType Watch { get; } Property Value TraktHistoryActionType"
  },
  "api/TraktNet.Enums.TraktKnownForDepartment.html": {
    "href": "api/TraktNet.Enums.TraktKnownForDepartment.html",
    "title": "Class TraktKnownForDepartment | Trakt.NET",
    "keywords": "Class TraktKnownForDepartment Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the department of a person. public sealed class TraktKnownForDepartment : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktKnownForDepartment Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktKnownForDepartment() Initializes a new instance of the TraktKnownForDepartment class. The initialized TraktKnownForDepartment is invalid. public TraktKnownForDepartment() Properties Acting The acting department. public static TraktKnownForDepartment Acting { get; } Property Value TraktKnownForDepartment Art The art department. public static TraktKnownForDepartment Art { get; } Property Value TraktKnownForDepartment Camera The camera department. public static TraktKnownForDepartment Camera { get; } Property Value TraktKnownForDepartment CostumeAndMakeUp The costume and make-up department. public static TraktKnownForDepartment CostumeAndMakeUp { get; } Property Value TraktKnownForDepartment Crew The crew department. public static TraktKnownForDepartment Crew { get; } Property Value TraktKnownForDepartment Directing The directing department. public static TraktKnownForDepartment Directing { get; } Property Value TraktKnownForDepartment Editing The editing department. public static TraktKnownForDepartment Editing { get; } Property Value TraktKnownForDepartment Lighting The lighting department. public static TraktKnownForDepartment Lighting { get; } Property Value TraktKnownForDepartment Production The production department. public static TraktKnownForDepartment Production { get; } Property Value TraktKnownForDepartment Sound The sound department. public static TraktKnownForDepartment Sound { get; } Property Value TraktKnownForDepartment Unspecified An invalid department type. public static TraktKnownForDepartment Unspecified { get; } Property Value TraktKnownForDepartment VisualEffects The visual effects department. public static TraktKnownForDepartment VisualEffects { get; } Property Value TraktKnownForDepartment Writing The writing department. public static TraktKnownForDepartment Writing { get; } Property Value TraktKnownForDepartment"
  },
  "api/TraktNet.Enums.TraktLastActivity.html": {
    "href": "api/TraktNet.Enums.TraktLastActivity.html",
    "title": "Class TraktLastActivity | Trakt.NET",
    "keywords": "Class TraktLastActivity Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the last activity type of a collection or watched progress. public sealed class TraktLastActivity : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktLastActivity Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktLastActivity() Initializes a new instance of the TraktLastActivity class. The initialized TraktLastActivity is invalid. public TraktLastActivity() Properties Aired Use last aired episodes while calculating collection or watched progress. public static TraktLastActivity Aired { get; } Property Value TraktLastActivity Collected Use last collected episodes while calculating collection or watched progress. public static TraktLastActivity Collected { get; } Property Value TraktLastActivity Unspecified An invalid last activity type. public static TraktLastActivity Unspecified { get; } Property Value TraktLastActivity Watched Use last watched episodes while calculating collection or watched progress. public static TraktLastActivity Watched { get; } Property Value TraktLastActivity"
  },
  "api/TraktNet.Enums.TraktListItemType.html": {
    "href": "api/TraktNet.Enums.TraktListItemType.html",
    "title": "Class TraktListItemType | Trakt.NET",
    "keywords": "Class TraktListItemType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a list item. public sealed class TraktListItemType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktListItemType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktListItemType() Initializes a new instance of the TraktListItemType class. The initialized TraktListItemType is invalid. public TraktListItemType() Properties Episode The list item contains an episode. public static TraktListItemType Episode { get; } Property Value TraktListItemType Movie The list item contains a movie. public static TraktListItemType Movie { get; } Property Value TraktListItemType Person The list item contains a person. public static TraktListItemType Person { get; } Property Value TraktListItemType Season The list item contains a season. public static TraktListItemType Season { get; } Property Value TraktListItemType Show The list item contains a show. public static TraktListItemType Show { get; } Property Value TraktListItemType Unspecified An invalid object type. public static TraktListItemType Unspecified { get; } Property Value TraktListItemType Operators operator |(TraktListItemType, TraktListItemType) Combines two TraktListItemType enumerations to one enumeration. Usage: TraktListItemType.Movie | TraktListItemType.Show public static TraktListItemType operator |(TraktListItemType first, TraktListItemType second) Parameters first TraktListItemType The first enumeration. second TraktListItemType The second enumeration. Returns TraktListItemType A binary combination of both given enumerations or null, if at least on of the given enumerations is null or unspecified."
  },
  "api/TraktNet.Enums.TraktListPrivacy.html": {
    "href": "api/TraktNet.Enums.TraktListPrivacy.html",
    "title": "Class TraktListPrivacy | Trakt.NET",
    "keywords": "Class TraktListPrivacy Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the privacy of a list. public sealed class TraktListPrivacy : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktListPrivacy Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktListPrivacy() Initializes a new instance of the TraktListPrivacy class. The initialized TraktListPrivacy is invalid. public TraktListPrivacy() Properties Friends The list can only be seen by friends. public static TraktListPrivacy Friends { get; } Property Value TraktListPrivacy Link The list is only viewable by a shared link. public static TraktListPrivacy Link { get; } Property Value TraktListPrivacy Private The list is private. Only the user who created the list can see it. public static TraktListPrivacy Private { get; } Property Value TraktListPrivacy Public The list is public and anyone can see it. public static TraktListPrivacy Public { get; } Property Value TraktListPrivacy Unspecified An invalid privacy type. public static TraktListPrivacy Unspecified { get; } Property Value TraktListPrivacy"
  },
  "api/TraktNet.Enums.TraktListSortOrder.html": {
    "href": "api/TraktNet.Enums.TraktListSortOrder.html",
    "title": "Class TraktListSortOrder | Trakt.NET",
    "keywords": "Class TraktListSortOrder Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the sort order for lists of ITraktList. public sealed class TraktListSortOrder : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktListSortOrder Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktListSortOrder() Initializes a new instance of the TraktListSortOrder class. The initialized TraktListSortOrder is invalid. public TraktListSortOrder() Properties Added Lists will be sorted by CreatedAt first. public static TraktListSortOrder Added { get; } Property Value TraktListSortOrder Comments Lists will be sorted by the number of comments first. public static TraktListSortOrder Comments { get; } Property Value TraktListSortOrder Items Lists will be sorted by the number of items first. public static TraktListSortOrder Items { get; } Property Value TraktListSortOrder Likes Lists will be sorted by the number of likes first. public static TraktListSortOrder Likes { get; } Property Value TraktListSortOrder Popular Lists will be sorted by the most popular first. public static TraktListSortOrder Popular { get; } Property Value TraktListSortOrder Unspecified An invalid sort order. public static TraktListSortOrder Unspecified { get; } Property Value TraktListSortOrder Updated Lists will be sorted by UpdatedAt first. public static TraktListSortOrder Updated { get; } Property Value TraktListSortOrder"
  },
  "api/TraktNet.Enums.TraktListType.html": {
    "href": "api/TraktNet.Enums.TraktListType.html",
    "title": "Class TraktListType | Trakt.NET",
    "keywords": "Class TraktListType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the list type. public sealed class TraktListType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktListType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktListType() Initializes a new instance of the TraktListType class. The initialized TraktListType is invalid. public TraktListType() Properties All The list type for personal, official lists, watchlists and recommendations together. public static TraktListType All { get; } Property Value TraktListType Official The list type for official lists. public static TraktListType Official { get; } Property Value TraktListType Personal The list type for personal lists. public static TraktListType Personal { get; } Property Value TraktListType Recommendations The list type for recommendations. public static TraktListType Recommendations { get; } Property Value TraktListType Unspecified An invalid list type. public static TraktListType Unspecified { get; } Property Value TraktListType Watchlist The list type for watchlists. public static TraktListType Watchlist { get; } Property Value TraktListType"
  },
  "api/TraktNet.Enums.TraktMediaAudio.html": {
    "href": "api/TraktNet.Enums.TraktMediaAudio.html",
    "title": "Class TraktMediaAudio | Trakt.NET",
    "keywords": "Class TraktMediaAudio Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the audio type in a collection item's metadata. public sealed class TraktMediaAudio : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMediaAudio Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMediaAudio() Initializes a new instance of the TraktMediaAudio class. The initialized TraktMediaAudio is invalid. public TraktMediaAudio() Properties AAC The collection item has AAC audio. public static TraktMediaAudio AAC { get; } Property Value TraktMediaAudio AURO_3D The collection item has AURO 3D audio. public static TraktMediaAudio AURO_3D { get; } Property Value TraktMediaAudio DTS The collection item has DTS audio. public static TraktMediaAudio DTS { get; } Property Value TraktMediaAudio DTS_HR The collection item has DTS HR audio. public static TraktMediaAudio DTS_HR { get; } Property Value TraktMediaAudio DTS_MA The collection item has DTS Master Audio. public static TraktMediaAudio DTS_MA { get; } Property Value TraktMediaAudio DTS_X The collection item has DTS X Audio. public static TraktMediaAudio DTS_X { get; } Property Value TraktMediaAudio DolbyAtmos The collection item has Dolby Atmos audio. public static TraktMediaAudio DolbyAtmos { get; } Property Value TraktMediaAudio DolbyDigital The collection item has Dolby Digital audio. public static TraktMediaAudio DolbyDigital { get; } Property Value TraktMediaAudio DolbyDigitalPlus The collection item has Dolby Digital Plus audio. public static TraktMediaAudio DolbyDigitalPlus { get; } Property Value TraktMediaAudio DolbyPrologic The collection item has Dolby Prologic audio. public static TraktMediaAudio DolbyPrologic { get; } Property Value TraktMediaAudio DolbyTrueHD The collection item has Dolby True HD audio. public static TraktMediaAudio DolbyTrueHD { get; } Property Value TraktMediaAudio LPCM The collection item has LPCM audio. public static TraktMediaAudio LPCM { get; } Property Value TraktMediaAudio MP3 The collection item has MP3 audio. public static TraktMediaAudio MP3 { get; } Property Value TraktMediaAudio OGG The collection item has OGG audio. public static TraktMediaAudio OGG { get; } Property Value TraktMediaAudio Unspecified An invalid audio type. public static TraktMediaAudio Unspecified { get; } Property Value TraktMediaAudio WMA The collection item has WMA audio. public static TraktMediaAudio WMA { get; } Property Value TraktMediaAudio"
  },
  "api/TraktNet.Enums.TraktMediaAudioChannel.html": {
    "href": "api/TraktNet.Enums.TraktMediaAudioChannel.html",
    "title": "Class TraktMediaAudioChannel | Trakt.NET",
    "keywords": "Class TraktMediaAudioChannel Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the audio channel type in a collection item's metadata. public sealed class TraktMediaAudioChannel : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMediaAudioChannel Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMediaAudioChannel() Initializes a new instance of the TraktMediaAudioChannel class. The initialized TraktMediaAudioChannel is invalid. public TraktMediaAudioChannel() Properties Channels_10_1 The collection item has 10.1 audio channels. public static TraktMediaAudioChannel Channels_10_1 { get; } Property Value TraktMediaAudioChannel Channels_1_0 The collection item has 1.0 audio channels. public static TraktMediaAudioChannel Channels_1_0 { get; } Property Value TraktMediaAudioChannel Channels_2_0 The collection item has 2.0 audio channels. public static TraktMediaAudioChannel Channels_2_0 { get; } Property Value TraktMediaAudioChannel Channels_2_1 The collection item has 2.1 audio channels. public static TraktMediaAudioChannel Channels_2_1 { get; } Property Value TraktMediaAudioChannel Channels_3_0 The collection item has 3.0 audio channels. public static TraktMediaAudioChannel Channels_3_0 { get; } Property Value TraktMediaAudioChannel Channels_3_1 The collection item has 3.1 audio channels. public static TraktMediaAudioChannel Channels_3_1 { get; } Property Value TraktMediaAudioChannel Channels_4_0 The collection item has 4.0 audio channels. public static TraktMediaAudioChannel Channels_4_0 { get; } Property Value TraktMediaAudioChannel Channels_4_1 The collection item has 4.1 audio channels. public static TraktMediaAudioChannel Channels_4_1 { get; } Property Value TraktMediaAudioChannel Channels_5_0 The collection item has 5.0 audio channels. public static TraktMediaAudioChannel Channels_5_0 { get; } Property Value TraktMediaAudioChannel Channels_5_1 The collection item has 5.1 audio channels. public static TraktMediaAudioChannel Channels_5_1 { get; } Property Value TraktMediaAudioChannel Channels_5_1_2 The collection item has 5.1.2 audio channels. public static TraktMediaAudioChannel Channels_5_1_2 { get; } Property Value TraktMediaAudioChannel Channels_5_1_4 The collection item has 5.1.4 audio channels. public static TraktMediaAudioChannel Channels_5_1_4 { get; } Property Value TraktMediaAudioChannel Channels_6_1 The collection item has 6.1 audio channels. public static TraktMediaAudioChannel Channels_6_1 { get; } Property Value TraktMediaAudioChannel Channels_7_1 The collection item has 7.1 audio channels. public static TraktMediaAudioChannel Channels_7_1 { get; } Property Value TraktMediaAudioChannel Channels_7_1_2 The collection item has 7.1.2 audio channels. public static TraktMediaAudioChannel Channels_7_1_2 { get; } Property Value TraktMediaAudioChannel Channels_7_1_4 The collection item has 7.1.4 audio channels. public static TraktMediaAudioChannel Channels_7_1_4 { get; } Property Value TraktMediaAudioChannel Channels_9_1 The collection item has 9.1 audio channels. public static TraktMediaAudioChannel Channels_9_1 { get; } Property Value TraktMediaAudioChannel Unspecified An invalid audio channel type. public static TraktMediaAudioChannel Unspecified { get; } Property Value TraktMediaAudioChannel"
  },
  "api/TraktNet.Enums.TraktMediaHDR.html": {
    "href": "api/TraktNet.Enums.TraktMediaHDR.html",
    "title": "Class TraktMediaHDR | Trakt.NET",
    "keywords": "Class TraktMediaHDR Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the HDR type in a collection item's metadata. public sealed class TraktMediaHDR : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMediaHDR Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMediaHDR() Initializes a new instance of the TraktMediaHDR class. The initialized TraktMediaHDR is invalid. public TraktMediaHDR() Properties DolbyVision The collection item supports DolbyVision. public static TraktMediaHDR DolbyVision { get; } Property Value TraktMediaHDR HDR_10 The collection item supports HDR10. public static TraktMediaHDR HDR_10 { get; } Property Value TraktMediaHDR HDR_10_Plus The collection item supports HDR10 Plus. public static TraktMediaHDR HDR_10_Plus { get; } Property Value TraktMediaHDR HLG The collection item supports HLG. public static TraktMediaHDR HLG { get; } Property Value TraktMediaHDR Unspecified An invalid HDR type. public static TraktMediaHDR Unspecified { get; } Property Value TraktMediaHDR"
  },
  "api/TraktNet.Enums.TraktMediaResolution.html": {
    "href": "api/TraktNet.Enums.TraktMediaResolution.html",
    "title": "Class TraktMediaResolution | Trakt.NET",
    "keywords": "Class TraktMediaResolution Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the video resolution type in a collection item's metadata. public sealed class TraktMediaResolution : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMediaResolution Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMediaResolution() Initializes a new instance of the TraktMediaResolution class. The initialized TraktMediaResolution is invalid. public TraktMediaResolution() Properties HD_1080i The collection item has HD 1080i video resolution. public static TraktMediaResolution HD_1080i { get; } Property Value TraktMediaResolution HD_1080p The collection item has HD 1080p video resolution. public static TraktMediaResolution HD_1080p { get; } Property Value TraktMediaResolution HD_720p The collection item has HD 720p video resolution. public static TraktMediaResolution HD_720p { get; } Property Value TraktMediaResolution SD_480i The collection item has SD 480i video resolution. public static TraktMediaResolution SD_480i { get; } Property Value TraktMediaResolution SD_480p The collection item has SD 480p video resolution. public static TraktMediaResolution SD_480p { get; } Property Value TraktMediaResolution SD_576i The collection item has SD 576i video resolution. public static TraktMediaResolution SD_576i { get; } Property Value TraktMediaResolution SD_576p The collection item has SD 576p video resolution. public static TraktMediaResolution SD_576p { get; } Property Value TraktMediaResolution UHD_4k The collection item has UHD 4k video resolution. public static TraktMediaResolution UHD_4k { get; } Property Value TraktMediaResolution Unspecified An invalid video resolution type. public static TraktMediaResolution Unspecified { get; } Property Value TraktMediaResolution"
  },
  "api/TraktNet.Enums.TraktMediaType.html": {
    "href": "api/TraktNet.Enums.TraktMediaType.html",
    "title": "Class TraktMediaType | Trakt.NET",
    "keywords": "Class TraktMediaType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the media type in a collection item's metadata. public sealed class TraktMediaType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMediaType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMediaType() Initializes a new instance of the TraktMediaType class. The initialized TraktMediaType is invalid. public TraktMediaType() Properties BetaMax The collection item has Betamax media. public static TraktMediaType BetaMax { get; } Property Value TraktMediaType Bluray The collection item has Bluray media. public static TraktMediaType Bluray { get; } Property Value TraktMediaType DVD The collection item has DVD media. public static TraktMediaType DVD { get; } Property Value TraktMediaType Digital The collection item has Digital media. public static TraktMediaType Digital { get; } Property Value TraktMediaType HD_DVD The collection item has HD DVD media. public static TraktMediaType HD_DVD { get; } Property Value TraktMediaType LaserDisc The collection item has Laserdisc media. public static TraktMediaType LaserDisc { get; } Property Value TraktMediaType Unspecified An invalid media type. public static TraktMediaType Unspecified { get; } Property Value TraktMediaType VCD The collection item has VCD media. public static TraktMediaType VCD { get; } Property Value TraktMediaType VHS The collection item has VHS media. public static TraktMediaType VHS { get; } Property Value TraktMediaType"
  },
  "api/TraktNet.Enums.TraktMovieStatus.html": {
    "href": "api/TraktNet.Enums.TraktMovieStatus.html",
    "title": "Class TraktMovieStatus | Trakt.NET",
    "keywords": "Class TraktMovieStatus Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the status of a movie. public sealed class TraktMovieStatus : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktMovieStatus Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktMovieStatus() Initializes a new instance of the TraktMovieStatus class. The initialized TraktMovieStatus is invalid. public TraktMovieStatus() Properties Canceled The status for a movie, which is canceled. public static TraktMovieStatus Canceled { get; } Property Value TraktMovieStatus InProduction The status for a movie, which is in production. public static TraktMovieStatus InProduction { get; } Property Value TraktMovieStatus Planned The status for a movie, which is planned. public static TraktMovieStatus Planned { get; } Property Value TraktMovieStatus PostProduction The status for a movie, which is in post production. public static TraktMovieStatus PostProduction { get; } Property Value TraktMovieStatus Released The status for a movie, which is released. public static TraktMovieStatus Released { get; } Property Value TraktMovieStatus Rumored The status for a movie, which is rumored. public static TraktMovieStatus Rumored { get; } Property Value TraktMovieStatus Unspecified An invalid status. public static TraktMovieStatus Unspecified { get; } Property Value TraktMovieStatus"
  },
  "api/TraktNet.Enums.TraktNotesObjectType.html": {
    "href": "api/TraktNet.Enums.TraktNotesObjectType.html",
    "title": "Class TraktNotesObjectType | Trakt.NET",
    "keywords": "Class TraktNotesObjectType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an media object to which a note is attached. public sealed class TraktNotesObjectType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktNotesObjectType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktNotesObjectType() Initializes a new instance of the TraktNotesObjectType class. The initialized TraktNotesObjectType is invalid. public TraktNotesObjectType() Properties All A note is attached to any kind of media object. public static TraktNotesObjectType All { get; } Property Value TraktNotesObjectType Collection A note is attached to a collection. public static TraktNotesObjectType Collection { get; } Property Value TraktNotesObjectType Episode A note is attached to an episode. public static TraktNotesObjectType Episode { get; } Property Value TraktNotesObjectType History A note is attached to an history item. public static TraktNotesObjectType History { get; } Property Value TraktNotesObjectType Movie A note is attached to a movie. public static TraktNotesObjectType Movie { get; } Property Value TraktNotesObjectType Person A note is attached to a person. public static TraktNotesObjectType Person { get; } Property Value TraktNotesObjectType Rating A note is attached to a rating. public static TraktNotesObjectType Rating { get; } Property Value TraktNotesObjectType Season A note is attached to a season. public static TraktNotesObjectType Season { get; } Property Value TraktNotesObjectType Show A note is attached to a show. public static TraktNotesObjectType Show { get; } Property Value TraktNotesObjectType Unspecified An invalid media object type. public static TraktNotesObjectType Unspecified { get; } Property Value TraktNotesObjectType"
  },
  "api/TraktNet.Enums.TraktObjectType.html": {
    "href": "api/TraktNet.Enums.TraktObjectType.html",
    "title": "Class TraktObjectType | Trakt.NET",
    "keywords": "Class TraktObjectType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a comment. public sealed class TraktObjectType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktObjectType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktObjectType() Initializes a new instance of the TraktObjectType class. The initialized TraktObjectType is invalid. public TraktObjectType() Properties All The comment contains a movie, show, season, list or an episode. public static TraktObjectType All { get; } Property Value TraktObjectType Episode The comment contains an episode. public static TraktObjectType Episode { get; } Property Value TraktObjectType List The comment contains a list. public static TraktObjectType List { get; } Property Value TraktObjectType Movie The comment contains a movie. public static TraktObjectType Movie { get; } Property Value TraktObjectType Season The comment contains a season. public static TraktObjectType Season { get; } Property Value TraktObjectType Show The comment contains a show. public static TraktObjectType Show { get; } Property Value TraktObjectType Unspecified An invalid object type. public static TraktObjectType Unspecified { get; } Property Value TraktObjectType"
  },
  "api/TraktNet.Enums.TraktRatingsItemType.html": {
    "href": "api/TraktNet.Enums.TraktRatingsItemType.html",
    "title": "Class TraktRatingsItemType | Trakt.NET",
    "keywords": "Class TraktRatingsItemType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a rating item. public sealed class TraktRatingsItemType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktRatingsItemType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktRatingsItemType() Initializes a new instance of the TraktRatingsItemType class. The initialized TraktRatingsItemType is invalid. public TraktRatingsItemType() Properties All The rating item contains a movie, show, season or an episode. public static TraktRatingsItemType All { get; } Property Value TraktRatingsItemType Episode The rating item contains an episode. public static TraktRatingsItemType Episode { get; } Property Value TraktRatingsItemType Movie The rating item contains a movie. public static TraktRatingsItemType Movie { get; } Property Value TraktRatingsItemType Season The rating item contains a season. public static TraktRatingsItemType Season { get; } Property Value TraktRatingsItemType Show The ratingv item contains a show. public static TraktRatingsItemType Show { get; } Property Value TraktRatingsItemType Unspecified An invalid object type. public static TraktRatingsItemType Unspecified { get; } Property Value TraktRatingsItemType"
  },
  "api/TraktNet.Enums.TraktReleaseType.html": {
    "href": "api/TraktNet.Enums.TraktReleaseType.html",
    "title": "Class TraktReleaseType | Trakt.NET",
    "keywords": "Class TraktReleaseType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines, how a movie was released. public sealed class TraktReleaseType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktReleaseType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktReleaseType() Initializes a new instance of the TraktReleaseType class. The initialized TraktReleaseType is invalid. public TraktReleaseType() Properties Digital The release was digital. public static TraktReleaseType Digital { get; } Property Value TraktReleaseType Limited The release was limited. public static TraktReleaseType Limited { get; } Property Value TraktReleaseType Physical The release was physical. public static TraktReleaseType Physical { get; } Property Value TraktReleaseType Premiere The release was a premiere. public static TraktReleaseType Premiere { get; } Property Value TraktReleaseType TV The release was in TV. public static TraktReleaseType TV { get; } Property Value TraktReleaseType Theatrical The release was theatrical. public static TraktReleaseType Theatrical { get; } Property Value TraktReleaseType Unknown An unknown release type. public static TraktReleaseType Unknown { get; } Property Value TraktReleaseType Unspecified An invalid release type. public static TraktReleaseType Unspecified { get; } Property Value TraktReleaseType"
  },
  "api/TraktNet.Enums.TraktScrobbleActionType.html": {
    "href": "api/TraktNet.Enums.TraktScrobbleActionType.html",
    "title": "Class TraktScrobbleActionType | Trakt.NET",
    "keywords": "Class TraktScrobbleActionType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the action type for a scroblle post. public sealed class TraktScrobbleActionType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktScrobbleActionType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktScrobbleActionType() Initializes a new instance of the TraktScrobbleActionType class. The initialized TraktScrobbleActionType is invalid. public TraktScrobbleActionType() Properties Pause The scrobble paused. public static TraktScrobbleActionType Pause { get; } Property Value TraktScrobbleActionType Start The scrobble started. public static TraktScrobbleActionType Start { get; } Property Value TraktScrobbleActionType Stop The scrobble stopped. public static TraktScrobbleActionType Stop { get; } Property Value TraktScrobbleActionType Unspecified An invalid action type. public static TraktScrobbleActionType Unspecified { get; } Property Value TraktScrobbleActionType"
  },
  "api/TraktNet.Enums.TraktSearchField.html": {
    "href": "api/TraktNet.Enums.TraktSearchField.html",
    "title": "Class TraktSearchField | Trakt.NET",
    "keywords": "Class TraktSearchField Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the field hint in a search query. public sealed class TraktSearchField : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSearchField Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSearchField() Initializes a new instance of the TraktSearchField class. The initialized TraktSearchField is invalid. public TraktSearchField() Properties Aliases The hint to search in movie or show aliases. public static TraktSearchField Aliases { get; } Property Value TraktSearchField Biography The hint to search in person biographies. public static TraktSearchField Biography { get; } Property Value TraktSearchField Description The hint to search in list descriptions. public static TraktSearchField Description { get; } Property Value TraktSearchField Name The hint to search in person or list names. public static TraktSearchField Name { get; } Property Value TraktSearchField Overview The hint to search in movie, show or episode overviews. public static TraktSearchField Overview { get; } Property Value TraktSearchField People The hint to search in movie or show people. public static TraktSearchField People { get; } Property Value TraktSearchField Tagline The hint to search in movie taglines. public static TraktSearchField Tagline { get; } Property Value TraktSearchField Title The hint to search in movie, show or episode titles. public static TraktSearchField Title { get; } Property Value TraktSearchField Translations The hint to search in movie or show translations. public static TraktSearchField Translations { get; } Property Value TraktSearchField Unspecified An invalid field hint. public static TraktSearchField Unspecified { get; } Property Value TraktSearchField Operators operator |(TraktSearchField, TraktSearchField) Combines two TraktSearchField enumerations to one enumeration. Usage: TraktSearchField.Title | TraktSearchField.Tagline public static TraktSearchField operator |(TraktSearchField first, TraktSearchField second) Parameters first TraktSearchField The first enumeration. second TraktSearchField The second enumeration. Returns TraktSearchField A binary combination of both given enumerations or null, if at least on of the given enumerations is null or unspecified."
  },
  "api/TraktNet.Enums.TraktSearchIdType.html": {
    "href": "api/TraktNet.Enums.TraktSearchIdType.html",
    "title": "Class TraktSearchIdType | Trakt.NET",
    "keywords": "Class TraktSearchIdType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the id type, for which should be searched in an id lookup request. public sealed class TraktSearchIdType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSearchIdType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSearchIdType() Initializes a new instance of the TraktSearchIdType class. The initialized TraktSearchIdType is invalid. public TraktSearchIdType() Properties ImDB Search for ImDB ids. public static TraktSearchIdType ImDB { get; } Property Value TraktSearchIdType TVRage Search for TVRage ids. public static TraktSearchIdType TVRage { get; } Property Value TraktSearchIdType TmDB Search for TmDB ids. public static TraktSearchIdType TmDB { get; } Property Value TraktSearchIdType Trakt Search for Trakt ids. public static TraktSearchIdType Trakt { get; } Property Value TraktSearchIdType TvDB Search for TvDB ids. public static TraktSearchIdType TvDB { get; } Property Value TraktSearchIdType Unspecified An invalid id type. public static TraktSearchIdType Unspecified { get; } Property Value TraktSearchIdType"
  },
  "api/TraktNet.Enums.TraktSearchResultType.html": {
    "href": "api/TraktNet.Enums.TraktSearchResultType.html",
    "title": "Class TraktSearchResultType | Trakt.NET",
    "keywords": "Class TraktSearchResultType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a search result. public sealed class TraktSearchResultType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSearchResultType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSearchResultType() Initializes a new instance of the TraktSearchResultType class. The initialized TraktSearchResultType is invalid. public TraktSearchResultType() Properties Episode The search result contains an episode. public static TraktSearchResultType Episode { get; } Property Value TraktSearchResultType List The search result contains a list. public static TraktSearchResultType List { get; } Property Value TraktSearchResultType Movie The search result contains a movie. public static TraktSearchResultType Movie { get; } Property Value TraktSearchResultType Person The search result contains a person. public static TraktSearchResultType Person { get; } Property Value TraktSearchResultType Show The search result contains a show. public static TraktSearchResultType Show { get; } Property Value TraktSearchResultType Unspecified An invalid object type. public static TraktSearchResultType Unspecified { get; } Property Value TraktSearchResultType Operators operator |(TraktSearchResultType, TraktSearchResultType) Combines two TraktSearchResultType enumerations to one enumeration. Usage: TraktSearchResultType.Movie | TraktSearchResultType.Show public static TraktSearchResultType operator |(TraktSearchResultType first, TraktSearchResultType second) Parameters first TraktSearchResultType The first enumeration. second TraktSearchResultType The second enumeration. Returns TraktSearchResultType A binary combination of both given enumerations or null, if at least on of the given enumerations is null or unspecified."
  },
  "api/TraktNet.Enums.TraktShowStatus.html": {
    "href": "api/TraktNet.Enums.TraktShowStatus.html",
    "title": "Class TraktShowStatus | Trakt.NET",
    "keywords": "Class TraktShowStatus Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the status of a show. public sealed class TraktShowStatus : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktShowStatus Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktShowStatus() Initializes a new instance of the TraktShowStatus class. The initialized TraktShowStatus is invalid. public TraktShowStatus() Properties Canceled The status for a show, which was canceled. public static TraktShowStatus Canceled { get; } Property Value TraktShowStatus Continuing The status for a show, which is upcoming. public static TraktShowStatus Continuing { get; } Property Value TraktShowStatus Ended The status for a show, which has ended. public static TraktShowStatus Ended { get; } Property Value TraktShowStatus InProduction The status for a show, which is in production. public static TraktShowStatus InProduction { get; } Property Value TraktShowStatus Pilot The status for a show, which is planned. public static TraktShowStatus Pilot { get; } Property Value TraktShowStatus Planned The status for a show, which is planned. public static TraktShowStatus Planned { get; } Property Value TraktShowStatus ReturningSeries The status for a show, which continues. public static TraktShowStatus ReturningSeries { get; } Property Value TraktShowStatus Unspecified An invalid status. public static TraktShowStatus Unspecified { get; } Property Value TraktShowStatus Upcoming The status for a show, which is upcoming. public static TraktShowStatus Upcoming { get; } Property Value TraktShowStatus"
  },
  "api/TraktNet.Enums.TraktShowsCommentSortOrder.html": {
    "href": "api/TraktNet.Enums.TraktShowsCommentSortOrder.html",
    "title": "Class TraktShowsCommentSortOrder | Trakt.NET",
    "keywords": "Class TraktShowsCommentSortOrder Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the sort order for comments. public sealed class TraktShowsCommentSortOrder : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktShowsCommentSortOrder Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktShowsCommentSortOrder() Initializes a new instance of the TraktShowsCommentSortOrder class. The initialized TraktShowsCommentSortOrder is invalid. public TraktShowsCommentSortOrder() TraktShowsCommentSortOrder(int, string, string, string) public TraktShowsCommentSortOrder(int value, string objectName, string uriName, string displayName) Parameters value int objectName string uriName string displayName string Properties Highest Comments will be sorted by highest comments first. public static TraktShowsCommentSortOrder Highest { get; } Property Value TraktShowsCommentSortOrder Likes Comments will be sorted by the number of likes first. public static TraktShowsCommentSortOrder Likes { get; } Property Value TraktShowsCommentSortOrder Lowest Comments will be sorted by lowest comments first. public static TraktShowsCommentSortOrder Lowest { get; } Property Value TraktShowsCommentSortOrder Newest Comments will be sorted by newest comments first. public static TraktShowsCommentSortOrder Newest { get; } Property Value TraktShowsCommentSortOrder Oldest Comments will be sorted by oldest comments first. public static TraktShowsCommentSortOrder Oldest { get; } Property Value TraktShowsCommentSortOrder Plays Comments will be sorted by the number of plays first. public static TraktShowsCommentSortOrder Plays { get; } Property Value TraktShowsCommentSortOrder Replies Comments will be sorted by the number of replies first. public static TraktShowsCommentSortOrder Replies { get; } Property Value TraktShowsCommentSortOrder Unspecified An invalid sort order. public static TraktShowsCommentSortOrder Unspecified { get; } Property Value TraktShowsCommentSortOrder Watched Comments will be sorted by most watched first. public static TraktShowsCommentSortOrder Watched { get; } Property Value TraktShowsCommentSortOrder"
  },
  "api/TraktNet.Enums.TraktSortBy.html": {
    "href": "api/TraktNet.Enums.TraktSortBy.html",
    "title": "Class TraktSortBy | Trakt.NET",
    "keywords": "Class TraktSortBy Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines how items are ordered. public sealed class TraktSortBy : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSortBy Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSortBy() Initializes a new instance of the TraktSortBy class. The initialized TraktSortBy is invalid. public TraktSortBy() Properties Added Items are ordered by added timestamp. public static TraktSortBy Added { get; } Property Value TraktSortBy Collected Items are ordered by collected timestamp. public static TraktSortBy Collected { get; } Property Value TraktSortBy MyRating Items are ordered by own user rating. public static TraktSortBy MyRating { get; } Property Value TraktSortBy Percentage Items are ordered by percentage. public static TraktSortBy Percentage { get; } Property Value TraktSortBy Popularity Items are ordered by popularity. public static TraktSortBy Popularity { get; } Property Value TraktSortBy Random Items are ordered by random. public static TraktSortBy Random { get; } Property Value TraktSortBy Rank Items are ordered by rank. public static TraktSortBy Rank { get; } Property Value TraktSortBy Released Items are ordered by released timestamp. public static TraktSortBy Released { get; } Property Value TraktSortBy Runtime Items are ordered by runtime. public static TraktSortBy Runtime { get; } Property Value TraktSortBy Title Items are ordered by title. public static TraktSortBy Title { get; } Property Value TraktSortBy Unspecified An invalid sort-by type. public static TraktSortBy Unspecified { get; } Property Value TraktSortBy Votes Items are ordered by votes. public static TraktSortBy Votes { get; } Property Value TraktSortBy Watched Items are ordered by watched timestamp. public static TraktSortBy Watched { get; } Property Value TraktSortBy"
  },
  "api/TraktNet.Enums.TraktSortHow.html": {
    "href": "api/TraktNet.Enums.TraktSortHow.html",
    "title": "Class TraktSortHow | Trakt.NET",
    "keywords": "Class TraktSortHow Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines how items are ordered. public sealed class TraktSortHow : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSortHow Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSortHow() Initializes a new instance of the TraktSortHow class. The initialized TraktSortHow is invalid. public TraktSortHow() Properties Ascending Items are ordered in ascending order. public static TraktSortHow Ascending { get; } Property Value TraktSortHow Descending Items are ordered in descending order. public static TraktSortHow Descending { get; } Property Value TraktSortHow Unspecified An invalid sort-how type. public static TraktSortHow Unspecified { get; } Property Value TraktSortHow"
  },
  "api/TraktNet.Enums.TraktSyncItemType.html": {
    "href": "api/TraktNet.Enums.TraktSyncItemType.html",
    "title": "Class TraktSyncItemType | Trakt.NET",
    "keywords": "Class TraktSyncItemType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in an history item or in a watchlist item, . public sealed class TraktSyncItemType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSyncItemType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSyncItemType() Initializes a new instance of the TraktSyncItemType class. The initialized TraktSyncItemType is invalid. public TraktSyncItemType() Properties Episode The history or watchlist item contains an episode. public static TraktSyncItemType Episode { get; } Property Value TraktSyncItemType Movie The history or watchlist item contains a movie. public static TraktSyncItemType Movie { get; } Property Value TraktSyncItemType Season The history or watchlist item contains a season. public static TraktSyncItemType Season { get; } Property Value TraktSyncItemType Show The history or watchlist item contains a show. public static TraktSyncItemType Show { get; } Property Value TraktSyncItemType Unspecified An invalid object type. public static TraktSyncItemType Unspecified { get; } Property Value TraktSyncItemType"
  },
  "api/TraktNet.Enums.TraktSyncType.html": {
    "href": "api/TraktNet.Enums.TraktSyncType.html",
    "title": "Class TraktSyncType | Trakt.NET",
    "keywords": "Class TraktSyncType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in a playback progress item. public sealed class TraktSyncType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktSyncType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSyncType() Initializes a new instance of the TraktSyncType class. The initialized TraktSyncType is invalid. public TraktSyncType() Properties Episode The playback progress item contains an episode. public static TraktSyncType Episode { get; } Property Value TraktSyncType Movie The playback progress item contains a movie. public static TraktSyncType Movie { get; } Property Value TraktSyncType Unspecified An invalid object type. public static TraktSyncType Unspecified { get; } Property Value TraktSyncType"
  },
  "api/TraktNet.Enums.TraktTimePeriod.html": {
    "href": "api/TraktNet.Enums.TraktTimePeriod.html",
    "title": "Class TraktTimePeriod | Trakt.NET",
    "keywords": "Class TraktTimePeriod Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the time period for most played, most watched and most collected movie and show requests. public sealed class TraktTimePeriod : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktTimePeriod Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktTimePeriod() Initializes a new instance of the TraktTimePeriod class. The initialized TraktTimePeriod is invalid. public TraktTimePeriod() Properties All An overall time period. public static TraktTimePeriod All { get; } Property Value TraktTimePeriod Daily A daily time period. public static TraktTimePeriod Daily { get; } Property Value TraktTimePeriod Monthly A monthly time period. public static TraktTimePeriod Monthly { get; } Property Value TraktTimePeriod Unspecified An invalid time period. public static TraktTimePeriod Unspecified { get; } Property Value TraktTimePeriod Weekly A weekly time period. public static TraktTimePeriod Weekly { get; } Property Value TraktTimePeriod Yearly An yearly time period. public static TraktTimePeriod Yearly { get; } Property Value TraktTimePeriod"
  },
  "api/TraktNet.Enums.TraktUserLikeType.html": {
    "href": "api/TraktNet.Enums.TraktUserLikeType.html",
    "title": "Class TraktUserLikeType | Trakt.NET",
    "keywords": "Class TraktUserLikeType Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the type of an object in an user like item. public sealed class TraktUserLikeType : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktUserLikeType Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktUserLikeType() Initializes a new instance of the TraktUserLikeType class. The initialized TraktUserLikeType is invalid. public TraktUserLikeType() Properties Comment The user like item contains a comment. public static TraktUserLikeType Comment { get; } Property Value TraktUserLikeType List The user like item contains a list. public static TraktUserLikeType List { get; } Property Value TraktUserLikeType Unspecified An invalid object type. public static TraktUserLikeType Unspecified { get; } Property Value TraktUserLikeType"
  },
  "api/TraktNet.Enums.TraktWatchlistSortOrder.html": {
    "href": "api/TraktNet.Enums.TraktWatchlistSortOrder.html",
    "title": "Class TraktWatchlistSortOrder | Trakt.NET",
    "keywords": "Class TraktWatchlistSortOrder Namespace TraktNet.Enums Assembly Trakt.NET.dll Determines the sort order for watchlists. public sealed class TraktWatchlistSortOrder : TraktEnumeration, IComparable<TraktEnumeration>, IEquatable<TraktEnumeration>, IEqualityComparer<TraktEnumeration> Inheritance object TraktEnumeration TraktWatchlistSortOrder Implements IComparable<TraktEnumeration> IEquatable<TraktEnumeration> IEqualityComparer<TraktEnumeration> Inherited Members TraktEnumeration.Value TraktEnumeration.ObjectName TraktEnumeration.UriName TraktEnumeration.DisplayName TraktEnumeration.ToString() TraktEnumeration.CompareTo(TraktEnumeration) TraktEnumeration.Equals(TraktEnumeration) TraktEnumeration.Equals(object) TraktEnumeration.GetHashCode() TraktEnumeration.Equals(TraktEnumeration, TraktEnumeration) TraktEnumeration.GetHashCode(TraktEnumeration) TraktEnumeration.GetAll<T>() TraktEnumeration.AbsoluteDifference(TraktEnumeration, TraktEnumeration) TraktEnumeration.FromValue<T>(int) TraktEnumeration.FromObjectName<T>(string) TraktEnumeration.FromUriName<T>(string) TraktEnumeration.FromDisplayName<T>(string) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktWatchlistSortOrder() Initializes a new instance of the TraktListSortOrder class. The initialized TraktWatchlistSortOrder is invalid. public TraktWatchlistSortOrder() Properties Added Watchlists will be sorted by recently added items first. public static TraktWatchlistSortOrder Added { get; } Property Value TraktWatchlistSortOrder Rank Watchlists will be sorted by rank. public static TraktWatchlistSortOrder Rank { get; } Property Value TraktWatchlistSortOrder Released Watchlists will be sorted by recently released items first. public static TraktWatchlistSortOrder Released { get; } Property Value TraktWatchlistSortOrder Title Watchlists will be sorted by title. public static TraktWatchlistSortOrder Title { get; } Property Value TraktWatchlistSortOrder Unspecified An invalid sort order. public static TraktWatchlistSortOrder Unspecified { get; } Property Value TraktWatchlistSortOrder"
  },
  "api/TraktNet.Enums.html": {
    "href": "api/TraktNet.Enums.html",
    "title": "Namespace TraktNet.Enums | Trakt.NET",
    "keywords": "Namespace TraktNet.Enums Classes TraktAccessScope Determines the access authorization for different resources. TraktAccessTokenGrantType Determines the grant type to specify how an access tokenshould be retrieved during authentication. TraktAccessTokenType Determines the type of an access token. TraktCommentSortOrder Determines the sort order for comments. TraktCommentType Determines the comment type. TraktDateFormat TraktEnumeration TraktEpisodeType Determines the type of an episode. TraktExtendedCommentSortOrder Determines the sort order for comments. TraktFavoriteObjectType Determines the type of an object in a favorite item. TraktFilterSection Determines the filter section of saved filters. TraktGender Determines the gender of a person. TraktGenreType Determines the genre type of movie and show genres. TraktHiddenItemType Determines the type of an object in an hidden item. TraktHiddenItemsSection Determines the section, from which hidden items should be requested. TraktHistoryActionType Determines the action type of an history item. TraktKnownForDepartment Determines the department of a person. TraktLastActivity Determines the last activity type of a collection or watched progress. TraktListItemType Determines the type of an object in a list item. TraktListPrivacy Determines the privacy of a list. TraktListSortOrder Determines the sort order for lists of ITraktList. TraktListType Determines the list type. TraktMediaAudio Determines the audio type in a collection item's metadata. TraktMediaAudioChannel Determines the audio channel type in a collection item's metadata. TraktMediaHDR Determines the HDR type in a collection item's metadata. TraktMediaResolution Determines the video resolution type in a collection item's metadata. TraktMediaType Determines the media type in a collection item's metadata. TraktMovieStatus Determines the status of a movie. TraktNotesObjectType Determines the type of an media object to which a note is attached. TraktObjectType Determines the type of an object in a comment. TraktRatingsItemType Determines the type of an object in a rating item. TraktReleaseType Determines, how a movie was released. TraktScrobbleActionType Determines the action type for a scroblle post. TraktSearchField Determines the field hint in a search query. TraktSearchIdType Determines the id type, for which should be searched in an id lookup request. TraktSearchResultType Determines the type of an object in a search result. TraktShowStatus Determines the status of a show. TraktShowsCommentSortOrder Determines the sort order for comments. TraktSortBy Determines how items are ordered. TraktSortHow Determines how items are ordered. TraktSyncItemType Determines the type of an object in an history item or in a watchlist item, . TraktSyncType Determines the type of an object in a playback progress item. TraktTimePeriod Determines the time period for most played, most watched and most collected movie and show requests. TraktUserLikeType Determines the type of an object in an user like item. TraktWatchlistSortOrder Determines the sort order for watchlists."
  },
  "api/TraktNet.Exceptions.TraktAuthenticationDeviceException.html": {
    "href": "api/TraktNet.Exceptions.TraktAuthenticationDeviceException.html",
    "title": "Class TraktAuthenticationDeviceException | Trakt.NET",
    "keywords": "Class TraktAuthenticationDeviceException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is an error during Device authentication. public class TraktAuthenticationDeviceException : TraktException, ISerializable Inheritance object Exception TraktException TraktAuthenticationDeviceException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktAuthenticationDeviceException(string) Initializes a new instance of the TraktAuthenticationDeviceException class with a custom message. public TraktAuthenticationDeviceException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktAuthenticationException.html": {
    "href": "api/TraktNet.Exceptions.TraktAuthenticationException.html",
    "title": "Class TraktAuthenticationException | Trakt.NET",
    "keywords": "Class TraktAuthenticationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is an error during authentication. public class TraktAuthenticationException : TraktException, ISerializable Inheritance object Exception TraktException TraktAuthenticationException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktAuthenticationException(string) Initializes a new instance of the TraktAuthenticationException class with a custom message. public TraktAuthenticationException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktAuthenticationOAuthException.html": {
    "href": "api/TraktNet.Exceptions.TraktAuthenticationOAuthException.html",
    "title": "Class TraktAuthenticationOAuthException | Trakt.NET",
    "keywords": "Class TraktAuthenticationOAuthException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is an error during OAuth authentication. public class TraktAuthenticationOAuthException : TraktException, ISerializable Inheritance object Exception TraktException TraktAuthenticationOAuthException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktAuthenticationOAuthException(string) Initializes a new instance of the TraktAuthenticationOAuthException class with a custom message. public TraktAuthenticationOAuthException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktAuthorizationException.html": {
    "href": "api/TraktNet.Exceptions.TraktAuthorizationException.html",
    "title": "Class TraktAuthorizationException | Trakt.NET",
    "keywords": "Class TraktAuthorizationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if an access token is required, but was not provided. public class TraktAuthorizationException : TraktException, ISerializable Inheritance object Exception TraktException TraktAuthorizationException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktAuthorizationException() Initializes a new instance of the TraktAuthorizationException class with a default exception message. public TraktAuthorizationException() TraktAuthorizationException(string) Initializes a new instance of the TraktAuthorizationException class with a custom message. public TraktAuthorizationException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktBadGatewayException.html": {
    "href": "api/TraktNet.Exceptions.TraktBadGatewayException.html",
    "title": "Class TraktBadGatewayException | Trakt.NET",
    "keywords": "Class TraktBadGatewayException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is a bad response at an intermediate proxy server. public class TraktBadGatewayException : TraktException, ISerializable Inheritance object Exception TraktException TraktBadGatewayException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktBadGatewayException() Initializes a new instance of the TraktBadGatewayException class with a default exception message. public TraktBadGatewayException() TraktBadGatewayException(string) Initializes a new instance of the TraktBadGatewayException class with a custom message. public TraktBadGatewayException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktBadRequestException.html": {
    "href": "api/TraktNet.Exceptions.TraktBadRequestException.html",
    "title": "Class TraktBadRequestException | Trakt.NET",
    "keywords": "Class TraktBadRequestException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is an unknown error for the request. public class TraktBadRequestException : TraktException, ISerializable Inheritance object Exception TraktException TraktBadRequestException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktBadRequestException() Initializes a new instance of the TraktBadRequestException class with a default exception message. public TraktBadRequestException() TraktBadRequestException(string) Initializes a new instance of the TraktBadRequestException class with a custom message. public TraktBadRequestException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktCheckinException.html": {
    "href": "api/TraktNet.Exceptions.TraktCheckinException.html",
    "title": "Class TraktCheckinException | Trakt.NET",
    "keywords": "Class TraktCheckinException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a checkin is already in progress. public class TraktCheckinException : TraktException, ISerializable Inheritance object Exception TraktException TraktCheckinException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktCheckinException(string) Initializes a new instance of the TraktCheckinException class with a custom message. public TraktCheckinException(string message) Parameters message string A custom exception message. Properties ExpiresAt Gets or sets the UTC datetime, when the current checkin expires and a new checkin can be requested. public DateTime? ExpiresAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Exceptions.TraktCommentNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktCommentNotFoundException.html",
    "title": "Class TraktCommentNotFoundException | Trakt.NET",
    "keywords": "Class TraktCommentNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a comment was not found. Contains, additional to the basic information, the comment id of the comment, which was not found. public class TraktCommentNotFoundException : TraktObjectNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktCommentNotFoundException Implements ISerializable Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktCommentNotFoundException(string) Initializes a new instance of the TraktCommentNotFoundException class with a default exception message. public TraktCommentNotFoundException(string commentId) Parameters commentId string The comment id of the comment, which was not found. TraktCommentNotFoundException(string, string) Initializes a new instance of the TraktCommentNotFoundException class with a custom message. public TraktCommentNotFoundException(string message, string commentId) Parameters message string A custom exception message. commentId string The comment id of the comment, which was not found."
  },
  "api/TraktNet.Exceptions.TraktConflictException.html": {
    "href": "api/TraktNet.Exceptions.TraktConflictException.html",
    "title": "Class TraktConflictException | Trakt.NET",
    "keywords": "Class TraktConflictException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is a conflict on server. For example, if a resource, like comment, already exists. public class TraktConflictException : TraktException, ISerializable Inheritance object Exception TraktException TraktConflictException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktConflictException() Initializes a new instance of the TraktConflictException class with a default exception message. public TraktConflictException() TraktConflictException(string) Initializes a new instance of the TraktConflictException class with a custom message. public TraktConflictException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktDeniedException.html": {
    "href": "api/TraktNet.Exceptions.TraktDeniedException.html",
    "title": "Class TraktDeniedException | Trakt.NET",
    "keywords": "Class TraktDeniedException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the user denied the OAuth authentication. public class TraktDeniedException : TraktException, ISerializable Inheritance object Exception TraktException TraktDeniedException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktDeniedException() Initializes a new instance of the TraktDeniedException class with a default exception message. public TraktDeniedException() TraktDeniedException(string) Initializes a new instance of the TraktDeniedException class with a custom message. public TraktDeniedException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktEpisodeNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktEpisodeNotFoundException.html",
    "title": "Class TraktEpisodeNotFoundException | Trakt.NET",
    "keywords": "Class TraktEpisodeNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if an episode was not found. Contains, additional to the basic information, the show id, the season number and the episode number of the episode, which was not found. public class TraktEpisodeNotFoundException : TraktSeasonNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktShowNotFoundException TraktSeasonNotFoundException TraktEpisodeNotFoundException Implements ISerializable Inherited Members TraktSeasonNotFoundException.Season TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktEpisodeNotFoundException(string, string, uint, uint) Initializes a new instance of the TraktEpisodeNotFoundException class with a custom message. public TraktEpisodeNotFoundException(string message, string showId, uint season, uint episode) Parameters message string A custom exception message. showId string The Trakt-Id or -Slug of the episode's show. season uint The season number of the episode. episode uint The episode number of the episode, which was not found. TraktEpisodeNotFoundException(string, uint, uint) Initializes a new instance of the TraktEpisodeNotFoundException class with a default exception message. public TraktEpisodeNotFoundException(string showId, uint season, uint episode) Parameters showId string The Trakt-Id or -Slug of the episode's show. season uint The season number of the episode. episode uint The episode number of the episode, which was not found. Properties Episode Gets or sets the episode number of the episode, which was not found. public uint Episode { get; set; } Property Value uint"
  },
  "api/TraktNet.Exceptions.TraktException.html": {
    "href": "api/TraktNet.Exceptions.TraktException.html",
    "title": "Class TraktException | Trakt.NET",
    "keywords": "Class TraktException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Base class for all TraktApiSharp exceptions. Can contain additional information like the response's status code, the request's url, a reason phrase of the server, the request body, if it was a post or put request and the actual response content. public class TraktException : Exception, ISerializable Inheritance object Exception TraktException Implements ISerializable Derived TraktAuthenticationDeviceException TraktAuthenticationException TraktAuthenticationOAuthException TraktAuthorizationException TraktBadGatewayException TraktBadRequestException TraktCheckinException TraktConflictException TraktDeniedException TraktExpiredException TraktFailedVIPValidationException TraktForbiddenException TraktLockedUserAccountException TraktMethodNotFoundException TraktNotFoundException TraktObjectNotFoundException TraktPostValidationException TraktPreconditionFailedException TraktRateLimitException TraktServerException TraktServerUnavailableException TraktUserAccountLimitException TraktValidationException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktException(string) Initializes a new instance of the TraktException class with a custom message. public TraktException(string message) Parameters message string A custom exception message. TraktException(string, Exception) Initializes a new instance of the TraktException class with a custom message. public TraktException(string message, Exception innerException) Parameters message string A custom exception message. innerException Exception An exception that is the cause of the current exception. Properties RequestBody Gets or sets the request body. public string RequestBody { get; set; } Property Value string RequestUrl Gets or sets the request's url. public string RequestUrl { get; set; } Property Value string Response Gets or sets the response content. public string Response { get; set; } Property Value string ServerReasonPhrase Gets or sets the server reason phrase. public string ServerReasonPhrase { get; set; } Property Value string StatusCode Returns the response's status code. public HttpStatusCode StatusCode { get; } Property Value HttpStatusCode"
  },
  "api/TraktNet.Exceptions.TraktExpiredException.html": {
    "href": "api/TraktNet.Exceptions.TraktExpiredException.html",
    "title": "Class TraktExpiredException | Trakt.NET",
    "keywords": "Class TraktExpiredException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the tokens have expired during authentication. public class TraktExpiredException : TraktException, ISerializable Inheritance object Exception TraktException TraktExpiredException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktExpiredException() Initializes a new instance of the TraktExpiredException class with a default exception message. public TraktExpiredException() TraktExpiredException(string) Initializes a new instance of the TraktExpiredException class with a custom message. public TraktExpiredException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktFailedVIPValidationException.html": {
    "href": "api/TraktNet.Exceptions.TraktFailedVIPValidationException.html",
    "title": "Class TraktFailedVIPValidationException | Trakt.NET",
    "keywords": "Class TraktFailedVIPValidationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the authorized user does not have VIP support. public class TraktFailedVIPValidationException : TraktException, ISerializable Inheritance object Exception TraktException TraktFailedVIPValidationException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktFailedVIPValidationException() Initializes a new instance of the TraktFailedVIPValidationException class with a default exception message. public TraktFailedVIPValidationException() TraktFailedVIPValidationException(string) Initializes a new instance of the TraktFailedVIPValidationException class with a custom message. public TraktFailedVIPValidationException(string message) Parameters message string A custom exception message. Properties UpgradeURL The web URL where the user can sign up for Trakt VIP. public string UpgradeURL { get; } Property Value string"
  },
  "api/TraktNet.Exceptions.TraktForbiddenException.html": {
    "href": "api/TraktNet.Exceptions.TraktForbiddenException.html",
    "title": "Class TraktForbiddenException | Trakt.NET",
    "keywords": "Class TraktForbiddenException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the request is forbidden. public class TraktForbiddenException : TraktException, ISerializable Inheritance object Exception TraktException TraktForbiddenException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktForbiddenException() Initializes a new instance of the TraktForbiddenException class with a default exception message. public TraktForbiddenException() TraktForbiddenException(string) Initializes a new instance of the TraktForbiddenException class with a custom message. public TraktForbiddenException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktListNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktListNotFoundException.html",
    "title": "Class TraktListNotFoundException | Trakt.NET",
    "keywords": "Class TraktListNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a list was not found. Contains, additional to the basic information, the list id of the list, which was not found. public class TraktListNotFoundException : TraktObjectNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktListNotFoundException Implements ISerializable Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktListNotFoundException(string) Initializes a new instance of the TraktListNotFoundException class with a default exception message. public TraktListNotFoundException(string listId) Parameters listId string The list id of the list, which was not found. TraktListNotFoundException(string, string) Initializes a new instance of the TraktListNotFoundException class with a custom message. public TraktListNotFoundException(string message, string listId) Parameters message string A custom exception message. listId string The list id of the list, which was not found."
  },
  "api/TraktNet.Exceptions.TraktLockedUserAccountException.html": {
    "href": "api/TraktNet.Exceptions.TraktLockedUserAccountException.html",
    "title": "Class TraktLockedUserAccountException | Trakt.NET",
    "keywords": "Class TraktLockedUserAccountException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if OAuth user has locked user account. public class TraktLockedUserAccountException : TraktException, ISerializable Inheritance object Exception TraktException TraktLockedUserAccountException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktLockedUserAccountException() Initializes a new instance of the TraktLockedUserAccountException class with a default exception message. public TraktLockedUserAccountException() TraktLockedUserAccountException(string) Initializes a new instance of the TraktLockedUserAccountException class with a custom message. public TraktLockedUserAccountException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktMethodNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktMethodNotFoundException.html",
    "title": "Class TraktMethodNotFoundException | Trakt.NET",
    "keywords": "Class TraktMethodNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a method is not allowed or not existing. public class TraktMethodNotFoundException : TraktException, ISerializable Inheritance object Exception TraktException TraktMethodNotFoundException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktMethodNotFoundException() Initializes a new instance of the TraktMethodNotFoundException class with a default exception message. public TraktMethodNotFoundException() TraktMethodNotFoundException(string) Initializes a new instance of the TraktMethodNotFoundException class with a custom message. public TraktMethodNotFoundException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktMovieNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktMovieNotFoundException.html",
    "title": "Class TraktMovieNotFoundException | Trakt.NET",
    "keywords": "Class TraktMovieNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a movie was not found. Contains, additional to the basic information, the movie id of the movie, which was not found. public class TraktMovieNotFoundException : TraktObjectNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktMovieNotFoundException Implements ISerializable Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktMovieNotFoundException(string) Initializes a new instance of the TraktMovieNotFoundException class with a default exception message. public TraktMovieNotFoundException(string movieId) Parameters movieId string The Trakt-Id or -Slug of the movie, which was not found. TraktMovieNotFoundException(string, string) Initializes a new instance of the TraktMovieNotFoundException class with a custom message. public TraktMovieNotFoundException(string message, string movieId) Parameters message string A custom exception message. movieId string The Trakt-Id or -Slug of the movie, which was not found."
  },
  "api/TraktNet.Exceptions.TraktNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktNotFoundException.html",
    "title": "Class TraktNotFoundException | Trakt.NET",
    "keywords": "Class TraktNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if no result(s) was(were) found for a request. public class TraktNotFoundException : TraktException, ISerializable Inheritance object Exception TraktException TraktNotFoundException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktNotFoundException(string) Initializes a new instance of the TraktNotFoundException class with a custom message. public TraktNotFoundException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktObjectNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktObjectNotFoundException.html",
    "title": "Class TraktObjectNotFoundException | Trakt.NET",
    "keywords": "Class TraktObjectNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if an object was not found. Base class for all object based TraktNotFoundExceptions. In this case, objects are comments, episodes, lists, movies, persons, seasons and shows. Contains, additional to the basic information, the object id of the object, which was not found. public class TraktObjectNotFoundException : TraktException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException Implements ISerializable Derived TraktCommentNotFoundException TraktListNotFoundException TraktMovieNotFoundException TraktPersonNotFoundException TraktShowNotFoundException Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktObjectNotFoundException(string) Initializes a new instance of the TraktObjectNotFoundException class with a default exception message. public TraktObjectNotFoundException(string objectId) Parameters objectId string The id of the object, which was not found. TraktObjectNotFoundException(string, string) Initializes a new instance of the TraktObjectNotFoundException class with a custom message. public TraktObjectNotFoundException(string message, string objectId) Parameters message string A custom exception message. objectId string The id of the object, which was not found. Properties ObjectId Gets or sets the object id of the object, which was not found. public string ObjectId { get; set; } Property Value string"
  },
  "api/TraktNet.Exceptions.TraktPersonNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktPersonNotFoundException.html",
    "title": "Class TraktPersonNotFoundException | Trakt.NET",
    "keywords": "Class TraktPersonNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a person was not found. Contains, additional to the basic information, the person id of the person, which was not found. public class TraktPersonNotFoundException : TraktObjectNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktPersonNotFoundException Implements ISerializable Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktPersonNotFoundException(string) Initializes a new instance of the TraktPersonNotFoundException class with a default exception message. public TraktPersonNotFoundException(string personId) Parameters personId string The Trakt-Id or -Slug of the person, which was not found. TraktPersonNotFoundException(string, string) Initializes a new instance of the TraktPersonNotFoundException class with a custom message. public TraktPersonNotFoundException(string message, string personId) Parameters message string A custom exception message. personId string The Trakt-Id or -Slug of the person, which was not found."
  },
  "api/TraktNet.Exceptions.TraktPostValidationException.html": {
    "href": "api/TraktNet.Exceptions.TraktPostValidationException.html",
    "title": "Class TraktPostValidationException | Trakt.NET",
    "keywords": "Class TraktPostValidationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if validation of a post object fails. public class TraktPostValidationException : TraktException, ISerializable Inheritance object Exception TraktException TraktPostValidationException Implements ISerializable Derived TraktRequestValidationException Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktPostValidationException(string) Initializes a new instance of the TraktPostValidationException class with a custom message. public TraktPostValidationException(string message) Parameters message string A custom exception message. TraktPostValidationException(string, string) Initializes a new instance of the TraktPostValidationException class with a custom message. public TraktPostValidationException(string propertyName, string message) Parameters propertyName string The name of the proeprty that caused the current exception. message string A custom exception message. Properties Message Gets the message that describes the current exception. public override string Message { get; } Property Value string PropertyName The name of the proeprty that caused the current exception. public string PropertyName { get; set; } Property Value string"
  },
  "api/TraktNet.Exceptions.TraktPreconditionFailedException.html": {
    "href": "api/TraktNet.Exceptions.TraktPreconditionFailedException.html",
    "title": "Class TraktPreconditionFailedException | Trakt.NET",
    "keywords": "Class TraktPreconditionFailedException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the request parameters are not valid. public class TraktPreconditionFailedException : TraktException, ISerializable Inheritance object Exception TraktException TraktPreconditionFailedException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktPreconditionFailedException() Initializes a new instance of the TraktPreconditionFailedException class with a default exception message. public TraktPreconditionFailedException() TraktPreconditionFailedException(string) Initializes a new instance of the TraktPreconditionFailedException class with a custom message. public TraktPreconditionFailedException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktRateLimitException.html": {
    "href": "api/TraktNet.Exceptions.TraktRateLimitException.html",
    "title": "Class TraktRateLimitException | Trakt.NET",
    "keywords": "Class TraktRateLimitException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there are too many requests during a specific time period. public class TraktRateLimitException : TraktException, ISerializable Inheritance object Exception TraktException TraktRateLimitException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktRateLimitException() Initializes a new instance of the TraktRateLimitException class with a default exception message. public TraktRateLimitException() TraktRateLimitException(string) Initializes a new instance of the TraktRateLimitException class with a custom message. public TraktRateLimitException(string message) Parameters message string A custom exception message. Properties RateLimitInfo Gets the further info parameters about the rate limit exception. public ITraktRateLimitInfo RateLimitInfo { get; } Property Value ITraktRateLimitInfo RetryAfter The amount of time in seconds after which a retry is possible. public int? RetryAfter { get; } Property Value int?"
  },
  "api/TraktNet.Exceptions.TraktRequestValidationException.html": {
    "href": "api/TraktNet.Exceptions.TraktRequestValidationException.html",
    "title": "Class TraktRequestValidationException | Trakt.NET",
    "keywords": "Class TraktRequestValidationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if validation of a request object fails. public class TraktRequestValidationException : TraktPostValidationException, ISerializable Inheritance object Exception TraktException TraktPostValidationException TraktRequestValidationException Implements ISerializable Inherited Members TraktPostValidationException.PropertyName TraktPostValidationException.Message TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktRequestValidationException(string) Initializes a new instance of the TraktRequestValidationException class with a custom message. public TraktRequestValidationException(string message) Parameters message string A custom exception message. TraktRequestValidationException(string, string) Initializes a new instance of the TraktRequestValidationException class with a custom message. public TraktRequestValidationException(string propertyName, string message) Parameters propertyName string The name of the proeprty that caused the current exception. message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktSeasonNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktSeasonNotFoundException.html",
    "title": "Class TraktSeasonNotFoundException | Trakt.NET",
    "keywords": "Class TraktSeasonNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a season was not found. Contains, additional to the basic information, the show id, and the season number of the season, which was not found. public class TraktSeasonNotFoundException : TraktShowNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktShowNotFoundException TraktSeasonNotFoundException Implements ISerializable Derived TraktEpisodeNotFoundException Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktSeasonNotFoundException(string, string, uint) Initializes a new instance of the TraktSeasonNotFoundException class with a custom message. public TraktSeasonNotFoundException(string message, string showId, uint season) Parameters message string A custom exception message. showId string The Trakt-Id or -Slug of the season's show. season uint The season number of the season, which was not found. TraktSeasonNotFoundException(string, uint) Initializes a new instance of the TraktSeasonNotFoundException class with a default exception message. public TraktSeasonNotFoundException(string showId, uint season) Parameters showId string The Trakt-Id or -Slug of the season's show. season uint The season number of the season, which was not found. Properties Season Gets or sets the season number of the season, which was not found. public uint Season { get; set; } Property Value uint"
  },
  "api/TraktNet.Exceptions.TraktServerException.html": {
    "href": "api/TraktNet.Exceptions.TraktServerException.html",
    "title": "Class TraktServerException | Trakt.NET",
    "keywords": "Class TraktServerException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if there is an error on the server side. public class TraktServerException : TraktException, ISerializable Inheritance object Exception TraktException TraktServerException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktServerException() Initializes a new instance of the TraktServerException class with a default exception message. public TraktServerException() TraktServerException(string) Initializes a new instance of the TraktServerException class with a custom message. public TraktServerException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktServerUnavailableException.html": {
    "href": "api/TraktNet.Exceptions.TraktServerUnavailableException.html",
    "title": "Class TraktServerUnavailableException | Trakt.NET",
    "keywords": "Class TraktServerUnavailableException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if the server is unavailable. public class TraktServerUnavailableException : TraktException, ISerializable Inheritance object Exception TraktException TraktServerUnavailableException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktServerUnavailableException() Initializes a new instance of the TraktServerUnavailableException class with a default exception message. public TraktServerUnavailableException() TraktServerUnavailableException(string) Initializes a new instance of the TraktServerUnavailableException class with a custom message. public TraktServerUnavailableException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.TraktShowNotFoundException.html": {
    "href": "api/TraktNet.Exceptions.TraktShowNotFoundException.html",
    "title": "Class TraktShowNotFoundException | Trakt.NET",
    "keywords": "Class TraktShowNotFoundException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a show was not found. Contains, additional to the basic information, the show id of the show, which was not found. public class TraktShowNotFoundException : TraktObjectNotFoundException, ISerializable Inheritance object Exception TraktException TraktObjectNotFoundException TraktShowNotFoundException Implements ISerializable Derived TraktSeasonNotFoundException Inherited Members TraktObjectNotFoundException.ObjectId TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktShowNotFoundException(string) Initializes a new instance of the TraktShowNotFoundException class with a default exception message. public TraktShowNotFoundException(string showId) Parameters showId string The Trakt-Id or -Slug of the show, which was not found. TraktShowNotFoundException(string, string) Initializes a new instance of the TraktShowNotFoundException class with a custom message. public TraktShowNotFoundException(string message, string showId) Parameters message string A custom exception message. showId string The Trakt-Id or -Slug of the show, which was not found."
  },
  "api/TraktNet.Exceptions.TraktUserAccountLimitException.html": {
    "href": "api/TraktNet.Exceptions.TraktUserAccountLimitException.html",
    "title": "Class TraktUserAccountLimitException | Trakt.NET",
    "keywords": "Class TraktUserAccountLimitException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if a user has exceeded their account limits. public class TraktUserAccountLimitException : TraktException, ISerializable Inheritance object Exception TraktException TraktUserAccountLimitException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktUserAccountLimitException() Initializes a new instance of the TraktUserAccountLimitException class with a default exception message. public TraktUserAccountLimitException() TraktUserAccountLimitException(string) Initializes a new instance of the TraktUserAccountLimitException class with a custom message. public TraktUserAccountLimitException(string message) Parameters message string A custom exception message. Properties AccountLimit The user's account limit. public int? AccountLimit { get; } Property Value int? IsVIPUser Determines whether the user is a VIP user. public bool? IsVIPUser { get; } Property Value bool? UpgradeURL The web URL where the user can sign up for Trakt VIP. public string UpgradeURL { get; } Property Value string"
  },
  "api/TraktNet.Exceptions.TraktValidationException.html": {
    "href": "api/TraktNet.Exceptions.TraktValidationException.html",
    "title": "Class TraktValidationException | Trakt.NET",
    "keywords": "Class TraktValidationException Namespace TraktNet.Exceptions Assembly Trakt.NET.dll Exception, that will be thrown, if sent data is not valid. public class TraktValidationException : TraktException, ISerializable Inheritance object Exception TraktException TraktValidationException Implements ISerializable Inherited Members TraktException.StatusCode TraktException.RequestUrl TraktException.RequestBody TraktException.Response TraktException.ServerReasonPhrase Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktValidationException() Initializes a new instance of the TraktValidationException class with a default exception message. public TraktValidationException() TraktValidationException(string) Initializes a new instance of the TraktValidationException class with a custom message. public TraktValidationException(string message) Parameters message string A custom exception message."
  },
  "api/TraktNet.Exceptions.html": {
    "href": "api/TraktNet.Exceptions.html",
    "title": "Namespace TraktNet.Exceptions | Trakt.NET",
    "keywords": "Namespace TraktNet.Exceptions Classes TraktAuthenticationDeviceException Exception, that will be thrown, if there is an error during Device authentication. TraktAuthenticationException Exception, that will be thrown, if there is an error during authentication. TraktAuthenticationOAuthException Exception, that will be thrown, if there is an error during OAuth authentication. TraktAuthorizationException Exception, that will be thrown, if an access token is required, but was not provided. TraktBadGatewayException Exception, that will be thrown, if there is a bad response at an intermediate proxy server. TraktBadRequestException Exception, that will be thrown, if there is an unknown error for the request. TraktCheckinException Exception, that will be thrown, if a checkin is already in progress. TraktCommentNotFoundException Exception, that will be thrown, if a comment was not found. Contains, additional to the basic information, the comment id of the comment, which was not found. TraktConflictException Exception, that will be thrown, if there is a conflict on server. For example, if a resource, like comment, already exists. TraktDeniedException Exception, that will be thrown, if the user denied the OAuth authentication. TraktEpisodeNotFoundException Exception, that will be thrown, if an episode was not found. Contains, additional to the basic information, the show id, the season number and the episode number of the episode, which was not found. TraktException Base class for all TraktApiSharp exceptions. Can contain additional information like the response's status code, the request's url, a reason phrase of the server, the request body, if it was a post or put request and the actual response content. TraktExpiredException Exception, that will be thrown, if the tokens have expired during authentication. TraktFailedVIPValidationException Exception, that will be thrown, if the authorized user does not have VIP support. TraktForbiddenException Exception, that will be thrown, if the request is forbidden. TraktListNotFoundException Exception, that will be thrown, if a list was not found. Contains, additional to the basic information, the list id of the list, which was not found. TraktLockedUserAccountException Exception, that will be thrown, if OAuth user has locked user account. TraktMethodNotFoundException Exception, that will be thrown, if a method is not allowed or not existing. TraktMovieNotFoundException Exception, that will be thrown, if a movie was not found. Contains, additional to the basic information, the movie id of the movie, which was not found. TraktNotFoundException Exception, that will be thrown, if no result(s) was(were) found for a request. TraktObjectNotFoundException Exception, that will be thrown, if an object was not found. Base class for all object based TraktNotFoundExceptions. In this case, objects are comments, episodes, lists, movies, persons, seasons and shows. Contains, additional to the basic information, the object id of the object, which was not found. TraktPersonNotFoundException Exception, that will be thrown, if a person was not found. Contains, additional to the basic information, the person id of the person, which was not found. TraktPostValidationException Exception, that will be thrown, if validation of a post object fails. TraktPreconditionFailedException Exception, that will be thrown, if the request parameters are not valid. TraktRateLimitException Exception, that will be thrown, if there are too many requests during a specific time period. TraktRequestValidationException Exception, that will be thrown, if validation of a request object fails. TraktSeasonNotFoundException Exception, that will be thrown, if a season was not found. Contains, additional to the basic information, the show id, and the season number of the season, which was not found. TraktServerException Exception, that will be thrown, if there is an error on the server side. TraktServerUnavailableException Exception, that will be thrown, if the server is unavailable. TraktShowNotFoundException Exception, that will be thrown, if a show was not found. Contains, additional to the basic information, the show id of the show, which was not found. TraktUserAccountLimitException Exception, that will be thrown, if a user has exceeded their account limits. TraktValidationException Exception, that will be thrown, if sent data is not valid."
  },
  "api/TraktNet.Extensions.DateTimeExtensions.html": {
    "href": "api/TraktNet.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | Trakt.NET",
    "keywords": "Class DateTimeExtensions Namespace TraktNet.Extensions Assembly Trakt.NET.dll Provides helper methods for datetimes. public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Max(DateTime, DateTime) Returns the maximum datetime of the two given datetimes. public static DateTime Max(this DateTime value, DateTime otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns DateTime The minimummaximum datetime of the two given datetimes. Max(DateTime, DateTime?) Returns the maximum datetime of the two given datetimes. public static DateTime Max(this DateTime value, DateTime? otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns DateTime The minimummaximum datetime of the two given datetimes. Max(DateTime?, DateTime) Returns the maximum datetime of the two given datetimes. public static DateTime Max(this DateTime? value, DateTime otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns DateTime The minimummaximum datetime of the two given datetimes. Max(DateTime?, DateTime?) Returns the maximum datetime of the two given datetimes. public static DateTime Max(this DateTime? value, DateTime? otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns DateTime The minimummaximum datetime of the two given datetimes. Min(DateTime, DateTime) Returns the minimum datetime of the two given datetimes. public static DateTime Min(this DateTime value, DateTime otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns DateTime The minimum datetime of the two given datetimes. Min(DateTime, DateTime?) Returns the minimum datetime of the two given datetimes. public static DateTime Min(this DateTime value, DateTime? otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns DateTime The minimum datetime of the two given datetimes. Min(DateTime?, DateTime) Returns the minimum datetime of the two given datetimes. public static DateTime Min(this DateTime? value, DateTime otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns DateTime The minimum datetime of the two given datetimes. Min(DateTime?, DateTime?) Returns the minimum datetime of the two given datetimes. public static DateTime Min(this DateTime? value, DateTime? otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns DateTime The minimum datetime of the two given datetimes. ToTraktCacheEfficientLongDateTimeString(DateTime) Converts the given datetime to a cache efficient string, containing the datetime in the Trakt datetime format, with minutes, seconds and milliseconds set to zero. public static string ToTraktCacheEfficientLongDateTimeString(this DateTime value) Parameters value DateTime The datetime, which should be converted. Will be automatically converted to universal (UTC) datetime. Returns string A cache efficient string, containing the datetime in the Trakt datetime format, with minutes, seconds and milliseconds set to zero. ToTraktDateString(DateTime) Converts the given datetime to a string, containing only the date in the Trakt date format. public static string ToTraktDateString(this DateTime value) Parameters value DateTime The datetime, which should be converted. Will be automatically converted to universal (UTC) datetime. Returns string A string, containing only the date in the Trakt date format. ToTraktLongDateTimeString(DateTime) Converts the given datetime to a string, containing the datetime in the Trakt datetime format. public static string ToTraktLongDateTimeString(this DateTime value) Parameters value DateTime The datetime, which should be converted. Will be automatically converted to universal (UTC) datetime. Returns string A string, containing the datetime in the Trakt datetime format. YearsBetween(DateTime, DateTime) Returns the number of years between the two given datetimes. public static int YearsBetween(this DateTime value, DateTime otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns int The number of years between the two given datetimes. YearsBetween(DateTime, DateTime?) Returns the number of years between the two given datetimes. public static int YearsBetween(this DateTime value, DateTime? otherDate) Parameters value DateTime The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns int The number of years between the two given datetimes. YearsBetween(DateTime?, DateTime) Returns the number of years between the two given datetimes. public static int YearsBetween(this DateTime? value, DateTime otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime The second datetime, which will be compared to the first datetime. Returns int The number of years between the two given datetimes. YearsBetween(DateTime?, DateTime?) Returns the number of years between the two given datetimes. public static int YearsBetween(this DateTime? value, DateTime? otherDate) Parameters value DateTime? The first datetime, which will be compared to the second datetime. otherDate DateTime? The second datetime, which will be compared to the first datetime. Returns int The number of years between the two given datetimes."
  },
  "api/TraktNet.Extensions.IAsyncEnumerableExtensions.html": {
    "href": "api/TraktNet.Extensions.IAsyncEnumerableExtensions.html",
    "title": "Class IAsyncEnumerableExtensions | Trakt.NET",
    "keywords": "Class IAsyncEnumerableExtensions Namespace TraktNet.Extensions Assembly Trakt.NET.dll Provides helper methods for IAsyncEnumerables. public static class IAsyncEnumerableExtensions Inheritance object IAsyncEnumerableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToListAsync<TSource>(IAsyncEnumerable<TSource>, CancellationToken) Converts the given IAsyncEnumberable to a list and returns that list. public static Task<List<TSource>> ToListAsync<TSource>(this IAsyncEnumerable<TSource> source, CancellationToken cancellationToken = default) Parameters source IAsyncEnumerable<TSource> The IAsyncEnumerable to convert to a list cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<List<TSource>> A list of TSource instances. Type Parameters TSource"
  },
  "api/TraktNet.Extensions.IEnumerableExtensions.html": {
    "href": "api/TraktNet.Extensions.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | Trakt.NET",
    "keywords": "Class IEnumerableExtensions Namespace TraktNet.Extensions Assembly Trakt.NET.dll Provides helper methods for IAsyncEnumerables. public static class IEnumerableExtensions Inheritance object IEnumerableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods StreamFinishedTaskResultsAsync<TSource>(List<Task<TSource>>) Returns results from a list of tasks as they finish. public static IAsyncEnumerable<TSource> StreamFinishedTaskResultsAsync<TSource>(this List<Task<TSource>> source) Parameters source List<Task<TSource>> The list of tasks to stream results from as they finish. Returns IAsyncEnumerable<TSource> An IAsyncEnumerable of the results from the tasks. Type Parameters TSource"
  },
  "api/TraktNet.Extensions.StringExtensions.html": {
    "href": "api/TraktNet.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Trakt.NET",
    "keywords": "Class StringExtensions Namespace TraktNet.Extensions Assembly Trakt.NET.dll Provides helper methods for strings. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ContainsSpace(string) Returns, whether the given string contains any spaces. public static bool ContainsSpace(this string value) Parameters value string The string, which should be checked. Returns bool True, if the given string contains any spaces, otherwise false. FirstToUpper(string) Converts the given string to a string, in which only the first letter is capitalized. public static string FirstToUpper(this string value) Parameters value string The string, in which only the first letter should be capitalized. Returns string A string, in which only the first letter is capitalized. Exceptions ArgumentException Thrown, if the given string is null or empty. WordCount(string) Counts the words in a string. public static int WordCount(this string value) Parameters value string The string, for which the words should be counted. Returns int The number of words in the given string or zero, if the given string is null or empty."
  },
  "api/TraktNet.Extensions.html": {
    "href": "api/TraktNet.Extensions.html",
    "title": "Namespace TraktNet.Extensions | Trakt.NET",
    "keywords": "Namespace TraktNet.Extensions Classes DateTimeExtensions Provides helper methods for datetimes. IAsyncEnumerableExtensions Provides helper methods for IAsyncEnumerables. IEnumerableExtensions Provides helper methods for IAsyncEnumerables. StringExtensions Provides helper methods for strings."
  },
  "api/TraktNet.Modules.ATraktModule.html": {
    "href": "api/TraktNet.Modules.ATraktModule.html",
    "title": "Class ATraktModule | Trakt.NET",
    "keywords": "Class ATraktModule Namespace TraktNet.Modules Assembly Trakt.NET.dll public abstract class ATraktModule Inheritance object ATraktModule Derived TraktAuthenticationModule TraktCalendarModule TraktCertificationsModule TraktCheckinsModule TraktCommentsModule TraktCountriesModule TraktEpisodesModule TraktGenresModule TraktLanguagesModule TraktListsModule TraktMoviesModule TraktNetworksModule TraktNotesModule TraktPeopleModule TraktRecommendationsModule TraktScrobbleModule TraktSearchModule TraktSeasonsModule TraktShowsModule TraktSyncModule TraktUsersModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ATraktModule(TraktClient) protected ATraktModule(TraktClient client) Parameters client TraktClient"
  },
  "api/TraktNet.Modules.TraktAuthenticationModule.html": {
    "href": "api/TraktNet.Modules.TraktAuthenticationModule.html",
    "title": "Class TraktAuthenticationModule | Trakt.NET",
    "keywords": "Class TraktAuthenticationModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to OAuth and device authentication and authorization. This module contains all methods of the \"Trakt API Doc - Authentication - OAuth\" section and the \"Trakt API Doc - Authentication - Devices\" section. public class TraktAuthenticationModule : ATraktModule Inheritance object ATraktModule TraktAuthenticationModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AntiForgeryToken Gets a GUID, which can be used for OAuth authentication requests. public string AntiForgeryToken { get; } Property Value string Authorization Gets or sets the ITraktAuthorization information. Will also be set by GetAuthorizationAsync(CancellationToken), GetAuthorizationAsync(string, CancellationToken), GetAuthorizationAsync(string, string, CancellationToken), GetAuthorizationAsync(string, string, string, CancellationToken), GetAuthorizationAsync(string, string, string, string, CancellationToken). public ITraktAuthorization Authorization { get; set; } Property Value ITraktAuthorization ClientId Gets or sets the Trakt Client Id. public string ClientId { get; set; } Property Value string ClientSecret Gets or sets the Trakt Client Secret. public string ClientSecret { get; set; } Property Value string Device Gets or sets the ITraktDevice for Device authentication. Will also be set by GenerateDeviceAsync(CancellationToken) and GenerateDeviceAsync(string, CancellationToken). public ITraktDevice Device { get; set; } Property Value ITraktDevice IsAuthorized Returns whether the client is authorized with a valid access token. public bool IsAuthorized { get; } Property Value bool See Also IsExpired OAuthAuthorizationCode Gets or sets the OAuth authorization code. public string OAuthAuthorizationCode { get; set; } Property Value string RedirectUri Gets or sets the Trakt redirect URI for OAuth authentication. public string RedirectUri { get; set; } Property Value string Methods CheckIfAccessTokenWasRevokedOrIsNotValidAsync(string, CancellationToken) Calls GetLastActivitiesAsync(CancellationToken) to check, whether the given access token is still valid and was not revoked by the user. public Task<bool> CheckIfAccessTokenWasRevokedOrIsNotValidAsync(string accessToken, CancellationToken cancellationToken = default) Parameters accessToken string The access token, which will be checked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<bool> True, if the given access token was revoked and / or is not valid anymore, otherwise false. Exceptions ArgumentException Thrown, if the given access token is null, empty or contains spaces. TraktException Thrown, if the request GetLastActivitiesAsync(CancellationToken) fails. CheckIfAuthorizationIsExpiredOrWasRevokedAsync(bool, CancellationToken) Calls GetLastActivitiesAsync(CancellationToken) to check, whether the current Authorization is not expired yet and was not revoked by the user. public Task<Pair<bool, TraktResponse<ITraktAuthorization>>> CheckIfAuthorizationIsExpiredOrWasRevokedAsync(bool autoRefresh = false, CancellationToken cancellationToken = default) Parameters autoRefresh bool Indicates, whether the current Authorization should be refreshed, if it was revoked. If this is set to true, RefreshAuthorizationAsync(CancellationToken) will be called. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<Pair<bool, TraktResponse<ITraktAuthorization>>> Returns an Pair<T, U> instance with First set to true, if the current Authorization is expired or was revoked, otherwise set to false. If autoRefresh is set to true, the returned Second contains the new ITraktAuthorization information, otherwise the returned Second will be null. Exceptions TraktException Thrown, if the request RefreshAuthorizationAsync(CancellationToken) fails. CheckIfAuthorizationIsExpiredOrWasRevokedAsync(ITraktAuthorization, bool, CancellationToken) Calls GetLastActivitiesAsync(CancellationToken) to check, whether the given authorization is not expired yet and was not revoked by the user. public Task<Pair<bool, TraktResponse<ITraktAuthorization>>> CheckIfAuthorizationIsExpiredOrWasRevokedAsync(ITraktAuthorization authorization, bool autoRefresh = false, CancellationToken cancellationToken = default) Parameters authorization ITraktAuthorization The authorization information, which will be checked. autoRefresh bool Indicates, whether the given authorization should be refreshed, if it was revoked. If this is set to true, RefreshAuthorizationAsync(CancellationToken) will be called. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<Pair<bool, TraktResponse<ITraktAuthorization>>> Returns an Pair<T, U> instance with First set to true, if the current Authorization is expired or was revoked, otherwise set to false. If autoRefresh is set to true, the returned Second contains the new ITraktAuthorization information, otherwise the returned Second will be null. Exceptions ArgumentNullException Thrown, if the given authorization is null. TraktException Thrown, if the request RefreshAuthorizationAsync(CancellationToken) fails. CreateAuthorizationUrl(bool?, bool?) Creates a new OAuth authorization URL. Uses the current ClientId and RedirectUri to build the authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrl(bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrl(string, bool?, bool?) Creates a new OAuth authorization URL. Uses the current RedirectUri to build the authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrl(string clientId, bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters clientId string The Trakt Client ID, which will be used to build the authorization URL. showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrl(string, string, bool?, bool?) Creates a new OAuth authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrl(string clientId, string redirectUri, bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters clientId string The Trakt Client ID, which will be used to build the authorization URL. redirectUri string The redirect URI, which will be used to build the authorization URL. showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrl(string, string, string, bool?, bool?) Creates a new OAuth authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrl(string clientId, string redirectUri, string state, bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters clientId string The Trakt Client ID, which will be used to build the authorization URL. redirectUri string The redirect URI, which will be used to build the authorization URL. state string The state variable, which will be used to build the authorization URL. See also AntiForgeryToken. This parameter is optional and will not be used, if it's null or empty. showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrlWithDefaultState(bool?, bool?) Creates a new OAuth authorization URL. Uses the current ClientId, RedirectUri and AntiForgeryToken as state variable to build the authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrlWithDefaultState(bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrlWithDefaultState(string, bool?, bool?) Creates a new OAuth authorization URL. Uses the current RedirectUri and AntiForgeryToken as state variable to build the authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrlWithDefaultState(string clientId, bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters clientId string The Trakt Client ID, which will be used to build the authorization URL. showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. CreateAuthorizationUrlWithDefaultState(string, string, bool?, bool?) Creates a new OAuth authorization URL. Uses the AntiForgeryToken as state variable to build the authorization URL. See \"Trakt API Doc - OAuth: Authorize\" for more information. public string CreateAuthorizationUrlWithDefaultState(string clientId, string redirectUri, bool? showSignupPage = null, bool? forceLoginPrompt = null) Parameters clientId string The Trakt Client ID, which will be used to build the authorization URL. redirectUri string The redirect URI, which will be used to build the authorization URL. showSignupPage bool? Prefer the account sign up page to be the default. forceLoginPrompt bool? Force the user to sign in and authorize your app. Returns string Returns the created authorization URL. GenerateDeviceAsync(string, CancellationToken) Generates a new Trakt device and starts the device authentication process. Assigns the returned ITraktDevice instance to Device, if successful. See \"Trakt API Doc - Devices: Device Code\" for more information. public Task<TraktResponse<ITraktDevice>> GenerateDeviceAsync(string clientId, CancellationToken cancellationToken = default) Parameters clientId string The Trakt Client ID, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktDevice>> A new ITraktDevice instance, which contains a new device code, user code and a verification URL. Exceptions ArgumentException Thrown, if the given client id is null, empty or contains spaces. TraktException Thrown, if the request fails. GenerateDeviceAsync(CancellationToken) Generates a new Trakt device and starts the device authentication process. Uses the current ClientId for the request. Assigns the returned ITraktDevice instance to Device, if successful. See \"Trakt API Doc - Devices: Device Code\" for more information. public Task<TraktResponse<ITraktDevice>> GenerateDeviceAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktDevice>> A new ITraktDevice instance, which contains a new device code, user code and a verification URL. Exceptions ArgumentException Thrown, if the current client id is null, empty or contains spaces. TraktException Thrown, if the request fails. GetAuthorizationAsync(string, string, string, string, CancellationToken) Exchanges the OAuth authorization code from the user for a new access token. Assigns the returned ITraktAuthorization instance to Authorization, if successful. public Task<TraktResponse<ITraktAuthorization>> GetAuthorizationAsync(string code, string clientId, string clientSecret, string redirectUri, CancellationToken cancellationToken = default) Parameters code string The OAuth authorization code, which will be used for the request. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. redirectUri string The redirect URI, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationOAuthException Thrown, if the OAuth authorization code is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given OAuth authorization code is null, empty or contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thronw, if the given client secret is null, empty or contains spaces. Thrown, if the given redirect URI is null, empty or contains spaces. GetAuthorizationAsync(string, string, string, CancellationToken) Exchanges the OAuth authorization code from the user for a new access token. Uses the current RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. public Task<TraktResponse<ITraktAuthorization>> GetAuthorizationAsync(string code, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters code string The OAuth authorization code, which will be used for the request. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationOAuthException Thrown, if the OAuth authorization code is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given OAuth authorization code is null, empty or contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thronw, if the given client secret is null, empty or contains spaces. Thrown, if the current redirect URI is null, empty or contains spaces. GetAuthorizationAsync(string, string, CancellationToken) Exchanges the OAuth authorization code from the user for a new access token. Uses the current ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. public Task<TraktResponse<ITraktAuthorization>> GetAuthorizationAsync(string code, string clientId, CancellationToken cancellationToken = default) Parameters code string The OAuth authorization code, which will be used for the request. clientId string The Trakt Client ID, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationOAuthException Thrown, if the OAuth authorization code is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given OAuth authorization code is null, empty or contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thronw, if the current client secret is null, empty or contains spaces. Thrown, if the current redirect URI is null, empty or contains spaces. GetAuthorizationAsync(string, CancellationToken) Exchanges the OAuth authorization code from the user for a new access token. Uses the current ClientId, ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. public Task<TraktResponse<ITraktAuthorization>> GetAuthorizationAsync(string code, CancellationToken cancellationToken = default) Parameters code string The OAuth authorization code, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationOAuthException Thrown, if the OAuth authorization code is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given OAuth authorization code is null, empty or contains spaces. Thrown, if the current client id is null, empty or contains spaces. Thronw, if the current client secret is null, empty or contains spaces. Thrown, if the current redirect URI is null, empty or contains spaces. GetAuthorizationAsync(CancellationToken) Exchanges the OAuth authorization code from the user for a new access token. Uses the current OAuthAuthorizationCode for the request, which has to be set before a call to this method. Also uses the current ClientId, ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. public Task<TraktResponse<ITraktAuthorization>> GetAuthorizationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationOAuthException Thrown, if the OAuth authorization code is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the current OAuth authorization code is null, empty or contains spaces. Thrown, if the current client id is null, empty or contains spaces. Thronw, if the current client secret is null, empty or contains spaces. Thrown, if the current redirect URI is null, empty or contains spaces. PollForAuthorizationAsync(CancellationToken) Polls for a new access token. Uses the current Device, ClientId and ClientSecret for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - Devices: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> PollForAuthorizationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationDeviceException Thrown, if the current device has an invalid device code. Thrown, if the user code of the current device was already approved by the user. Thrown, if the current device code is already expired unused. Thrown, if the user explicitly denied the user code of the current device. TraktException Thrown, if the request fails. ArgumentException Thrown, if the current device is null, or already expired unused or invalid or its user code contains spaces. Thrown, if the current client id is null, empty or contains spaces. Thrown, if the current client secret is null, empty or contains spaces. PollForAuthorizationAsync(ITraktDevice, string, string, CancellationToken) Polls for a new access token. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - Devices: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> PollForAuthorizationAsync(ITraktDevice device, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters device ITraktDevice The ITraktDevice, which will be used for the request. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationDeviceException Thrown, if the given device has an invalid device code. Thrown, if the user code of the given device was already approved by the user. Thrown, if the given device code is already expired unused. Thrown, if the user explicitly denied the user code of the given device. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thrown, if the given client secret is null, empty or contains spaces. PollForAuthorizationAsync(ITraktDevice, string, CancellationToken) Polls for a new access token. Uses the current ClientSecret for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - Devices: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> PollForAuthorizationAsync(ITraktDevice device, string clientId, CancellationToken cancellationToken = default) Parameters device ITraktDevice The ITraktDevice, which will be used for the request. clientId string The Trakt Client ID, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationDeviceException Thrown, if the given device has an invalid device code. Thrown, if the user code of the given device was already approved by the user. Thrown, if the given device code is already expired unused. Thrown, if the user explicitly denied the user code of the given device. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thrown, if the current client secret is null, empty or contains spaces. PollForAuthorizationAsync(ITraktDevice, CancellationToken) Polls for a new access token. Uses the current ClientId and ClientSecret for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - Devices: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> PollForAuthorizationAsync(ITraktDevice device, CancellationToken cancellationToken = default) Parameters device ITraktDevice The ITraktDevice, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthenticationDeviceException Thrown, if the given device has an invalid device code. Thrown, if the user code of the given device was already approved by the user. Thrown, if the given device code is already expired unused. Thrown, if the user explicitly denied the user code of the given device. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given device is null, or already expired unused or invalid or its user code contains spaces. Thrown, if the current client id is null, empty or contains spaces. Thrown, if the current client secret is null, empty or contains spaces. RefreshAuthorizationAsync(string, string, string, string, CancellationToken) Exchanges the current refresh token for a new access token, without re-authenticating the associated user. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - OAuth: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> RefreshAuthorizationAsync(string refreshToken, string clientId, string clientSecret, string redirectUri, CancellationToken cancellationToken = default) Parameters refreshToken string The refresh token, which will be used for the exchange. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. redirectUri string The redirect URI, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given refresh token is null, empty or contains spaces. TraktAuthenticationException Thrown, if the given refresh token is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given refresh token is null, empty or contains spaces. Thrown, if the given client id is null, empty of contains spaces. Thrown, if the given client secret is null, empty or contains spaces. Thrown, if the given rediret URI is null, empty or contains spaces. RefreshAuthorizationAsync(string, string, string, CancellationToken) Exchanges the current refresh token for a new access token, without re-authenticating the associated user. Uses the current RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - OAuth: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> RefreshAuthorizationAsync(string refreshToken, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters refreshToken string The refresh token, which will be used for the exchange. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given refresh token is null, empty or contains spaces. TraktAuthenticationException Thrown, if the given refresh token is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given refresh token is null, empty or contains spaces. Thrown, if the given client id is null, empty of contains spaces. Thrown, if the given client secret is null, empty or contains spaces. Thrown, if the current rediret URI is null, empty or contains spaces. RefreshAuthorizationAsync(string, string, CancellationToken) Exchanges the current refresh token for a new access token, without re-authenticating the associated user. Uses the current ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - OAuth: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> RefreshAuthorizationAsync(string refreshToken, string clientId, CancellationToken cancellationToken = default) Parameters refreshToken string The refresh token, which will be used for the exchange. clientId string The Trakt Client ID, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given refresh token is null, empty or contains spaces. TraktAuthenticationException Thrown, if the given refresh token is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given refresh token is null, empty or contains spaces. Thrown, if the given client id is null, empty of contains spaces. Thrown, if the current client secret is null, empty or contains spaces. Thrown, if the current rediret URI is null, empty or contains spaces. RefreshAuthorizationAsync(string, CancellationToken) Exchanges the current refresh token for a new access token, without re-authenticating the associated user. Uses the current ClientId, ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - OAuth: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> RefreshAuthorizationAsync(string refreshToken, CancellationToken cancellationToken = default) Parameters refreshToken string The refresh token, which will be used for the exchange. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given refresh token is null, empty or contains spaces. TraktAuthenticationException Thrown, if the given refresh token is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given refresh token is null, empty or contains spaces. Thrown, if the current client id is null, empty of contains spaces. Thrown, if the current client secret is null, empty or contains spaces. Thrown, if the current rediret URI is null, empty or contains spaces. RefreshAuthorizationAsync(CancellationToken) Exchanges the current refresh token for a new access token, without re-authenticating the associated user. Uses the current Authorization's refresh token, ClientId, ClientSecret and RedirectUri for the request. Assigns the returned ITraktAuthorization instance to Authorization, if successful. See \"Trakt API Doc - OAuth: Get Token\" for more information. public Task<TraktResponse<ITraktAuthorization>> RefreshAuthorizationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktAuthorization>> A new ITraktAuthorization instance, which contains a new access and refresh token. Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the current refresh token is null, empty or contains spaces. TraktAuthenticationException Thrown, if the current refresh token is invalid. TraktException Thrown, if the request fails. ArgumentException Thrown, if the current refresh token is null, empty or contains spaces. Thrown, if the current client id is null, empty of contains spaces. Thrown, if the current client secret is null, empty or contains spaces. Thrown, if the current rediret URI is null, empty or contains spaces. RevokeAuthorizationAsync(string, string, string, CancellationToken) Revokes the current access token. If, successful, the current access token will be invalid and the user has to be re-authenticated. See \"Trakt API Doc - OAuth: Revoke Token\" for more information. public Task<TraktNoContentResponse> RevokeAuthorizationAsync(string accessToken, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters accessToken string The given access token, which will be revoked. clientId string The Trakt Client ID, which will be used for the request. clientSecret string The Trakt Client Secret, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given access token is null, empty or contains spaces. TraktAuthenticationException Thrown, if revoking the given access token fails with unknown error. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given access token is null, empty or contains spaces. Thrown, if the given client id is null, empty or contains spaces. Thrown, if the given client secret is null, empty or contains spaces. RevokeAuthorizationAsync(string, string, CancellationToken) Revokes the current access token. If, successful, the current access token will be invalid and the user has to be re-authenticated. Uses the current ClientSecret for the request. See \"Trakt API Doc - OAuth: Revoke Token\" for more information. public Task<TraktNoContentResponse> RevokeAuthorizationAsync(string accessToken, string clientId, CancellationToken cancellationToken = default) Parameters accessToken string The given access token, which will be revoked. clientId string The Trakt Client ID, which will be used for the request. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given access token is null, empty or contains spaces. TraktAuthenticationException Thrown, if revoking the given access token fails with unknown error. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given access token is null, empty or contains spaces. Thrown, if the given client id is null, empty or contains spaces. RevokeAuthorizationAsync(string, CancellationToken) Revokes the current access token. If, successful, the current access token will be invalid and the user has to be re-authenticated. Uses the current ClientId and ClientSecret for the request. See \"Trakt API Doc - OAuth: Revoke Token\" for more information. public Task<TraktNoContentResponse> RevokeAuthorizationAsync(string accessToken, CancellationToken cancellationToken = default) Parameters accessToken string The given access token, which will be revoked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the given access token is null, empty or contains spaces. TraktAuthenticationException Thrown, if revoking the given access token fails with unknown error. TraktException Thrown, if the request fails. ArgumentException Thrown, if the given access token is null, empty or contains spaces. Thrown, if the current client id is null, empty or contains spaces. RevokeAuthorizationAsync(CancellationToken) Revokes the current access token. If, successful, the current access token will be invalid and the user has to be re-authenticated. Uses the current Authorization's access token, ClientId and ClientSecret for the request. See \"Trakt API Doc - OAuth: Revoke Token\" for more information. public Task<TraktNoContentResponse> RevokeAuthorizationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktAuthorizationException Thrown, if the current TraktClient instance is not authorized and the current access token is null, empty or contains spaces. TraktAuthenticationException Thrown, if revoking the current access token fails with unknown error. TraktException Thrown, if the request fails. ArgumentException Thrown, if the current access token is null, empty or contains spaces. Thrown, if the current client id is null, empty or contains spaces."
  },
  "api/TraktNet.Modules.TraktCalendarModule.html": {
    "href": "api/TraktNet.Modules.TraktCalendarModule.html",
    "title": "Class TraktCalendarModule | Trakt.NET",
    "keywords": "Class TraktCalendarModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to calendars. This module contains all methods of the \"Trakt API Doc - Calendars\" section. public class TraktCalendarModule : ATraktModule Inheritance object ATraktModule TraktCalendarModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAllDVDMoviesAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all ITraktCalendarMovies with a DVD release during the given time period. OAuth authorization not required. See \"Trakt API Doc - Calendars: All DVD\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarMovie>> GetAllDVDMoviesAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarMovie>> A list of ITraktCalendarMovie instances. Exceptions TraktException Thrown, if the request fails. GetAllMoviesAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all ITraktCalendarMovies airing during the given time period. OAuth authorization not required. See \"Trakt API Doc - Calendars: All Movies\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarMovie>> GetAllMoviesAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarMovie>> A list of ITraktCalendarMovie instances. Exceptions TraktException Thrown, if the request fails. GetAllNewShowsAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all new ITraktCalendarShows airing during the given time period. OAuth authorization not required. See \"Trakt API Doc - Calendars: All New Shows\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetAllNewShowsAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails. GetAllSeasonPremieresAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all season premieres airing during the given time period. OAuth authorization not required. See \"Trakt API Doc - Calendars: All Season Premieres\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetAllSeasonPremieresAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails. GetAllShowsAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all ITraktCalendarShows airing during the given time period. OAuth authorization not required. See \"Trakt API Doc - Calendars: All Shows\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetAllShowsAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails. GetUserDVDMoviesAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all users ITraktCalendarMovies with a DVD release during the given time period. OAuth authorization required. See \"Trakt API Doc - Calendars: My DVD\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarMovie>> GetUserDVDMoviesAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarMovie>> A list of ITraktCalendarMovie instances. Exceptions TraktException Thrown, if the request fails. GetUserMoviesAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all users ITraktCalendarMovies airing during the given time period. OAuth authorization required. See \"Trakt API Doc - Calendars: My Movies\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarMovie>> GetUserMoviesAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarMovie>> A list of ITraktCalendarMovie instances. Exceptions TraktException Thrown, if the request fails. GetUserNewShowsAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all new users ITraktCalendarShows airing during the given time period. OAuth authorization required. See \"Trakt API Doc - Calendars: My New Shows\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetUserNewShowsAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails. GetUserSeasonPremieresAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all users season premieres airing during the given time period. OAuth authorization required. See \"Trakt API Doc - Calendars: My Season Premieres\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetUserSeasonPremieresAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails. GetUserShowsAsync(DateTime?, int?, TraktExtendedInfo, ITraktCalendarFilter, CancellationToken) Gets all users ITraktCalendarShows airing during the given time period. OAuth authorization required. See \"Trakt API Doc - Calendars: My Shows\" for more information. Use the ITraktCalendarFilterBuilder to create an instance of the optional ITraktCalendarFilter. See also NewCalendarFilter(). public Task<TraktListResponse<ITraktCalendarShow>> GetUserShowsAsync(DateTime? startDate = null, int? days = null, TraktExtendedInfo extendedInfo = null, ITraktCalendarFilter filter = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The date, on which the time period should start. Defaults to today. Will be converted to the Trakt date-format. days int? 1 - 31 days, specifying the length of the time period. Defaults to 7 days. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktCalendarFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktCalendarFilter. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCalendarShow>> A list of ITraktCalendarShow instances. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktCertificationsModule.html": {
    "href": "api/TraktNet.Modules.TraktCertificationsModule.html",
    "title": "Class TraktCertificationsModule | Trakt.NET",
    "keywords": "Class TraktCertificationsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to certifications. This module contains all methods of the \"Trakt API Doc - Certifications\" section. public class TraktCertificationsModule : ATraktModule Inheritance object ATraktModule TraktCertificationsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMovieCertificationsAsync(CancellationToken) Gets all movie certifications. OAuth authorization not required. See \"Trakt API Doc - Certifications: List\" for more information. public Task<TraktResponse<ITraktCertifications>> GetMovieCertificationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCertifications>> An ITraktCertifications instance with the queried certification's data. Exceptions TraktException Thrown, if the request fails. GetShowCertificationsAsync(CancellationToken) Gets all show certifications. OAuth authorization not required. See \"Trakt API Doc - Certifications: List\" for more information. public Task<TraktResponse<ITraktCertifications>> GetShowCertificationsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCertifications>> An ITraktCertifications instance with the queried certification's data. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktCheckinsModule.html": {
    "href": "api/TraktNet.Modules.TraktCheckinsModule.html",
    "title": "Class TraktCheckinsModule | Trakt.NET",
    "keywords": "Class TraktCheckinsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to checkins. This module contains all methods of the \"Trakt API Doc - Checkin\" section. public class TraktCheckinsModule : ATraktModule Inheritance object ATraktModule TraktCheckinsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckIntoEpisodeAsync(ITraktEpisodeCheckinPost, CancellationToken) Checks into the given ITraktEpisode. OAuth authorization required. See \"Trakt API Doc - Checkin: Checkin\" for more information. It is recommended to use the ITraktEpisodeCheckinPostBuilder to create an instance of the required ITraktEpisodeCheckinPost. See also NewEpisodeCheckinPost(). public Task<TraktResponse<ITraktEpisodeCheckinPostResponse>> CheckIntoEpisodeAsync(ITraktEpisodeCheckinPost episodeCheckinPost, CancellationToken cancellationToken = default) Parameters episodeCheckinPost ITraktEpisodeCheckinPost An ITraktEpisodeCheckinPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisodeCheckinPostResponse>> An ITraktEpisodeCheckinPostResponse instance, containing the successfully checked in episode's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. CheckIntoMovieAsync(ITraktMovieCheckinPost, CancellationToken) Checks into the given ITraktMovie. OAuth authorization required. See \"Trakt API Doc - Checkin: Checkin\" for more information. It is recommended to use the ITraktMovieCheckinPostBuilder to create an instance of the required ITraktMovieCheckinPost. See also NewMovieCheckinPost(). public Task<TraktResponse<ITraktMovieCheckinPostResponse>> CheckIntoMovieAsync(ITraktMovieCheckinPost movieCheckinPost, CancellationToken cancellationToken = default) Parameters movieCheckinPost ITraktMovieCheckinPost An ITraktMovieCheckinPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovieCheckinPostResponse>> An ITraktMovieCheckinPostResponse instance, containing the successfully checked in movie's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. DeleteAnyActiveCheckinsAsync(CancellationToken) Deletes any active checkins. OAuth authorization required. See \"Trakt API Doc - Checkin: Checkin\" for more information. public Task<TraktNoContentResponse> DeleteAnyActiveCheckinsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktCommentsModule.html": {
    "href": "api/TraktNet.Modules.TraktCommentsModule.html",
    "title": "Class TraktCommentsModule | Trakt.NET",
    "keywords": "Class TraktCommentsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to comments. This module contains all methods of the \"Trakt API Doc - Comments\" section. public class TraktCommentsModule : ATraktModule Inheritance object ATraktModule TraktCommentsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeleteCommentAsync(uint, CancellationToken) Deletes a comment with the given comment id. OAuth authorization required. See \"Trakt API Doc - Comments: Comment\" for more information. public Task<TraktNoContentResponse> DeleteCommentAsync(uint commentId, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentAsync(uint, TraktExtendedInfo, CancellationToken) Gets a ITraktComment or reply with the given id. OAuth authorization not required. See \"Trakt API Doc - Comments: Comment\" for more information. See also GetMutlipleCommentsAsync(TraktMultipleCommentsQueryParams, CancellationToken). public Task<TraktResponse<ITraktComment>> GetCommentAsync(uint commentId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters commentId uint The comment's id. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the comment's media item should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktComment>> An ITraktComment instance with the queried comment's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentItemAsync(uint, TraktExtendedInfo, CancellationToken) Gets the attached media ITraktCommentItem from a comment with the given id. OAuth authorization not required. See \"Trakt API Doc - Comments: Item\" for more information. public Task<TraktResponse<ITraktCommentItem>> GetCommentItemAsync(uint commentId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters commentId uint The comment's id. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the comment's media item should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentItem>> An ITraktCommentItem instance with the queried comment's media item. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentLikesAsync(uint, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets likes for comment with the given id. OAuth authorization not required. See \"Trakt API Doc - Comments: Likes\" for more information. public Task<TraktPagedResponse<ITraktCommentLike>> GetCommentLikesAsync(uint commentId, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters commentId uint The comment's id. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the comment's likes should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktCommentLike>> An TraktPagedResponse<TResponseContentType> instance containing the queried likes and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktCommentLike. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentRepliesAsync(uint, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets replies for comment with the given id. OAuth authorization not required. See \"Trakt API Doc - Comments: Replies\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetCommentRepliesAsync(uint commentId, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, for which the replies should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried replies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentsStreamAsync(TraktMultipleCommentsQueryParams, CancellationToken) Gets multiple different ITraktComments or replies at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Comments: Comment\" for more information. See also GetCommentAsync(uint, TraktExtendedInfo, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktComment>> GetCommentsStreamAsync(TraktMultipleCommentsQueryParams commentsQueryParams, CancellationToken cancellationToken = default) Parameters commentsQueryParams TraktMultipleCommentsQueryParams A list of comment ids and optional extended infos. See also TraktMultipleCommentsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktComment>> An async stream of ITraktComment instances with the data of each queried comment. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMutlipleCommentsAsync(TraktMultipleCommentsQueryParams, CancellationToken) Gets multiple different ITraktComments or replies at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Comments: Comment\" for more information. See also GetCommentAsync(uint, TraktExtendedInfo, CancellationToken). [Obsolete(\"GetMutlipleCommentsAsync is deprecated, please use GetCommentsStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktComment>>> GetMutlipleCommentsAsync(TraktMultipleCommentsQueryParams commentsQueryParams, CancellationToken cancellationToken = default) Parameters commentsQueryParams TraktMultipleCommentsQueryParams A list of comment ids and optional extended infos. See also TraktMultipleCommentsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktComment>>> A list of ITraktComment instances with the data of each queried comment. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetRecentlyCreatedCommentsAsync(TraktCommentType, TraktObjectType, bool?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets recently created comments. OAuth authorization not required. See \"Trakt API Doc - Comments: Recent\" for more information. public Task<TraktPagedResponse<ITraktUserComment>> GetRecentlyCreatedCommentsAsync(TraktCommentType commentType = null, TraktObjectType objectType = null, bool? includeReplies = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters commentType TraktCommentType Determines, which type of comments should be queried. See also TraktCommentType. objectType TraktObjectType Determines, for which object types comments should be queried. See also TraktObjectType. includeReplies bool? Determines, whether replies should be retrieved alongside with comments. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the commented objects should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried recently created comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserComment. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedCommentsAsync(TraktCommentType, TraktObjectType, bool?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets recently updated comments. OAuth authorization not required. See \"Trakt API Doc - Comments: Updates\" for more information. public Task<TraktPagedResponse<ITraktUserComment>> GetRecentlyUpdatedCommentsAsync(TraktCommentType commentType = null, TraktObjectType objectType = null, bool? includeReplies = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters commentType TraktCommentType Determines, which type of comments should be queried. See also TraktCommentType. objectType TraktObjectType Determines, for which object types comments should be queried. See also TraktObjectType. includeReplies bool? Determines, whether replies should be retrieved alongside with comments. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the commented objects should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried recently updated comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserComment. Exceptions TraktException Thrown, if the request fails. GetTrendingCommentsAsync(TraktCommentType, TraktObjectType, bool?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets trending comments. OAuth authorization not required. See \"Trakt API Doc - Comments: Trending\" for more information. public Task<TraktPagedResponse<ITraktUserComment>> GetTrendingCommentsAsync(TraktCommentType commentType = null, TraktObjectType objectType = null, bool? includeReplies = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters commentType TraktCommentType Determines, which type of comments should be queried. See also TraktCommentType. objectType TraktObjectType Determines, for which object types comments should be queried. See also TraktObjectType. includeReplies bool? Determines, whether replies should be retrieved alongside with comments. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the commented objects should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried trending comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserComment. Exceptions TraktException Thrown, if the request fails. LikeCommentAsync(uint, CancellationToken) Likes a comment with the given comment id. OAuth authorization required. See \"Trakt API Doc - Comments: Like\" for more information. public Task<TraktNoContentResponse> LikeCommentAsync(uint commentId, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, which should be liked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. PostCommentReplyAsync(uint, string, bool?, CancellationToken) Posts a reply to a comment with the given comment id. OAuth authorization required. See \"Trakt API Doc - Comments: Replies\" for more information. public Task<TraktResponse<ITraktCommentPostResponse>> PostCommentReplyAsync(uint commentId, string comment, bool? containsSpoiler = null, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, for which the reply should be posted. comment string The comment's content. Should be at least five words long. containsSpoiler bool? Determines, if the comment contains any spoilers. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted reply's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PostEpisodeCommentAsync(ITraktEpisodeCommentPost, CancellationToken) Posts a comment for the given ITraktEpisode. OAuth authorization required. See \"Trakt API Doc - Comments: Comments\" for more information. It is recommended to use the ITraktEpisodeCommentPostBuilder to create an instance of the required ITraktEpisodeCommentPost. See also NewEpisodeCommentPost(). public Task<TraktResponse<ITraktCommentPostResponse>> PostEpisodeCommentAsync(ITraktEpisodeCommentPost episodeCommentPost, CancellationToken cancellationToken = default) Parameters episodeCommentPost ITraktEpisodeCommentPost An ITraktEpisodeCommentPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PostListCommentAsync(ITraktListCommentPost, CancellationToken) Posts a comment for the given ITraktList. OAuth authorization required. See \"Trakt API Doc - Comments: Comments\" for more information. It is recommended to use the ITraktListCommentPostBuilder to create an instance of the required ITraktListCommentPost. See also NewListCommentPost(). public Task<TraktResponse<ITraktCommentPostResponse>> PostListCommentAsync(ITraktListCommentPost listCommentPost, CancellationToken cancellationToken = default) Parameters listCommentPost ITraktListCommentPost An ITraktListCommentPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PostMovieCommentAsync(ITraktMovieCommentPost, CancellationToken) Posts a comment for the given ITraktMovie. OAuth authorization required. See \"Trakt API Doc - Comments: Comments\" for more information. It is recommended to use the ITraktMovieCommentPostBuilder to create an instance of the required ITraktMovieCommentPost. See also NewMovieCommentPost(). public Task<TraktResponse<ITraktCommentPostResponse>> PostMovieCommentAsync(ITraktMovieCommentPost movieCommentPost, CancellationToken cancellationToken = default) Parameters movieCommentPost ITraktMovieCommentPost An ITraktMovieCommentPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PostSeasonCommentAsync(ITraktSeasonCommentPost, CancellationToken) Posts a comment for the given ITraktSeason. OAuth authorization required. See \"Trakt API Doc - Comments: Comments\" for more information. It is recommended to use the ITraktSeasonCommentPostBuilder to create an instance of the required ITraktSeasonCommentPost. See also NewSeasonCommentPost(). public Task<TraktResponse<ITraktCommentPostResponse>> PostSeasonCommentAsync(ITraktSeasonCommentPost seasonCommentPost, CancellationToken cancellationToken = default) Parameters seasonCommentPost ITraktSeasonCommentPost An ITraktSeasonCommentPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PostShowCommentAsync(ITraktShowCommentPost, CancellationToken) Posts a comment for the given ITraktShow. OAuth authorization required. See \"Trakt API Doc - Comments: Comments\" for more information. It is recommended to use the ITraktShowCommentPostBuilder to create an instance of the required ITraktShowCommentPost. See also NewShowCommentPost(). public Task<TraktResponse<ITraktCommentPostResponse>> PostShowCommentAsync(ITraktShowCommentPost showCommentPost, CancellationToken cancellationToken = default) Parameters showCommentPost ITraktShowCommentPost An ITraktShowCommentPost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully posted comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UnlikeCommentAsync(uint, CancellationToken) Unlikes a comment with the given comment id. OAuth authorization required. See \"Trakt API Doc - Comments: Like\" for more information. public Task<TraktNoContentResponse> UnlikeCommentAsync(uint commentId, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, which should be unliked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateCommentAsync(uint, string, bool?, CancellationToken) Updates a comment or reply with the given comment id, which was posted within the last hour. OAuth authorization required. See \"Trakt API Doc - Comments: Comment\" for more information. public Task<TraktResponse<ITraktCommentPostResponse>> UpdateCommentAsync(uint commentId, string comment, bool? containsSpoiler = null, CancellationToken cancellationToken = default) Parameters commentId uint The id of the comment, which should be updated. comment string The new comment's content. Should be at least five words long. containsSpoiler bool? Determines, if the comment contains any spoilers. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCommentPostResponse>> An ITraktCommentPostResponse instance, containing the successfully updated comment's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktCountriesModule.html": {
    "href": "api/TraktNet.Modules.TraktCountriesModule.html",
    "title": "Class TraktCountriesModule | Trakt.NET",
    "keywords": "Class TraktCountriesModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to countries. This module contains all methods of the \"Trakt API Doc - Countries\" section. public class TraktCountriesModule : ATraktModule Inheritance object ATraktModule TraktCountriesModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMovieCountriesAsync(CancellationToken) Gets a list of all movie countries. OAuth authorization not required. See \"Trakt API Doc - Countries: List\" for more information. public Task<TraktListResponse<ITraktCountry>> GetMovieCountriesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCountry>> A list of ITraktCountry instances. Exceptions TraktException Thrown, if the request fails. GetShowCountriesAsync(CancellationToken) Gets a list of all show countries. OAuth authorization not required. See \"Trakt API Doc - Countries: List\" for more information. public Task<TraktListResponse<ITraktCountry>> GetShowCountriesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCountry>> A list of ITraktCountry instances. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktEpisodesModule.html": {
    "href": "api/TraktNet.Modules.TraktEpisodesModule.html",
    "title": "Class TraktEpisodesModule | Trakt.NET",
    "keywords": "Class TraktEpisodesModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to episodes. This module contains all methods of the \"Trakt API Doc - Episodes\" section. public class TraktEpisodesModule : ATraktModule Inheritance object ATraktModule TraktEpisodesModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEpisodeAsync(string, uint, uint, TraktExtendedInfo, CancellationToken) Gets a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams, CancellationToken). public Task<TraktResponse<ITraktEpisode>> GetEpisodeAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, which should be queried. episodeNumber uint The number of the episode, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeAsync(uint, uint, uint, TraktExtendedInfo, CancellationToken) Gets a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams, CancellationToken). public Task<TraktResponse<ITraktEpisode>> GetEpisodeAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, which should be queried. episodeNumber uint The number of the episode, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeAsync(ITraktShow, uint, uint, TraktExtendedInfo, CancellationToken) Gets a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams, CancellationToken). public Task<TraktResponse<ITraktEpisode>> GetEpisodeAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, which should be queried. episodeNumber uint The number of the episode, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeAsync(ITraktShowIds, uint, uint, TraktExtendedInfo, CancellationToken) Gets a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams, CancellationToken). public Task<TraktResponse<ITraktEpisode>> GetEpisodeAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, which should be queried. episodeNumber uint The number of the episode, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeCommentsAsync(string, uint, uint, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetEpisodeCommentsAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the comments should be queried. episodeNumber uint The number of the episode, for which the comments should be queried. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeCommentsAsync(uint, uint, uint, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetEpisodeCommentsAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the comments should be queried. episodeNumber uint The number of the episode, for which the comments should be queried. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeCommentsAsync(ITraktShow, uint, uint, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetEpisodeCommentsAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the comments should be queried. episodeNumber uint The number of the episode, for which the comments should be queried. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeCommentsAsync(ITraktShowIds, uint, uint, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetEpisodeCommentsAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the comments should be queried. episodeNumber uint The number of the episode, for which the comments should be queried. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeListsAsync(string, uint, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetEpisodeListsAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the lists should be queried. episodeNumber uint The number of the episode, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeListsAsync(uint, uint, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetEpisodeListsAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the lists should be queried. episodeNumber uint The number of the episode, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeListsAsync(ITraktShow, uint, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetEpisodeListsAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the lists should be queried. episodeNumber uint The number of the episode, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeListsAsync(ITraktShowIds, uint, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetEpisodeListsAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the lists should be queried. episodeNumber uint The number of the episode, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried episode lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodePeopleAsync(string, uint, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktEpisode in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetEpisodePeopleAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. episodeNumber uint The number of the episode, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a episode with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodePeopleAsync(uint, uint, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktEpisode in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetEpisodePeopleAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. episodeNumber uint The number of the episode, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a episode with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodePeopleAsync(ITraktShow, uint, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktEpisode in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetEpisodePeopleAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the people should be queried. episodeNumber uint The number of the episode, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a episode with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodePeopleAsync(ITraktShowIds, uint, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktEpisode in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetEpisodePeopleAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. episodeNumber uint The number of the episode, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a episode with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeRatingsAsync(string, uint, uint, CancellationToken) Gets the ratings for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetEpisodeRatingsAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the ratings should be queried. episodeNumber uint The number of the episode, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeRatingsAsync(uint, uint, uint, CancellationToken) Gets the ratings for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetEpisodeRatingsAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the ratings should be queried. episodeNumber uint The number of the episode, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeRatingsAsync(ITraktShow, uint, uint, CancellationToken) Gets the ratings for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetEpisodeRatingsAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the ratings should be queried. episodeNumber uint The number of the episode, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeRatingsAsync(ITraktShowIds, uint, uint, CancellationToken) Gets the ratings for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetEpisodeRatingsAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the ratings should be queried. episodeNumber uint The number of the episode, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeStatisticsAsync(string, uint, uint, CancellationToken) Gets the statistics for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetEpisodeStatisticsAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the statistics should be queried. episodeNumber uint The number of the episode, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeStatisticsAsync(uint, uint, uint, CancellationToken) Gets the statistics for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetEpisodeStatisticsAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the statistics should be queried. episodeNumber uint The number of the episode, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeStatisticsAsync(ITraktShow, uint, uint, CancellationToken) Gets the statistics for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetEpisodeStatisticsAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the statistics should be queried. episodeNumber uint The number of the episode, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeStatisticsAsync(ITraktShowIds, uint, uint, CancellationToken) Gets the statistics for a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetEpisodeStatisticsAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the statistics should be queried. episodeNumber uint The number of the episode, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a episode with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeTranslationsAsync(string, uint, uint, string, CancellationToken) Gets all translations for a ITraktEpisode with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Translations\" for more information. public Task<TraktListResponse<ITraktEpisodeTranslation>> GetEpisodeTranslationsAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the translations should be queried. episodeNumber uint The number of the episode, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisodeTranslation>> A list of ITraktEpisodeTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeTranslationsAsync(uint, uint, uint, string, CancellationToken) Gets all translations for a ITraktEpisode with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Translations\" for more information. public Task<TraktListResponse<ITraktEpisodeTranslation>> GetEpisodeTranslationsAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the translations should be queried. episodeNumber uint The number of the episode, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisodeTranslation>> A list of ITraktEpisodeTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeTranslationsAsync(ITraktShow, uint, uint, string, CancellationToken) Gets all translations for a ITraktEpisode with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Translations\" for more information. public Task<TraktListResponse<ITraktEpisodeTranslation>> GetEpisodeTranslationsAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the translations should be queried. episodeNumber uint The number of the episode, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisodeTranslation>> A list of ITraktEpisodeTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeTranslationsAsync(ITraktShowIds, uint, uint, string, CancellationToken) Gets all translations for a ITraktEpisode with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Translations\" for more information. public Task<TraktListResponse<ITraktEpisodeTranslation>> GetEpisodeTranslationsAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the translations should be queried. episodeNumber uint The number of the episode, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisodeTranslation>> A list of ITraktEpisodeTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodeWatchingUsersAsync(string, uint, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetEpisodeWatchingUsersAsync(string showIdOrSlug, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the watching users should be queried. episodeNumber uint The number of the episode, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetEpisodeWatchingUsersAsync(uint, uint, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetEpisodeWatchingUsersAsync(uint traktShowID, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the watching users should be queried. episodeNumber uint The number of the episode, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetEpisodeWatchingUsersAsync(ITraktShow, uint, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetEpisodeWatchingUsersAsync(ITraktShow show, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season containing the episode, for which the watching users should be queried. episodeNumber uint The number of the episode, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetEpisodeWatchingUsersAsync(ITraktShowIds, uint, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktEpisode in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetEpisodeWatchingUsersAsync(ITraktShowIds showIds, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season containing the episode, for which the watching users should be queried. episodeNumber uint The number of the episode, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetEpisodesStreamAsync(TraktMultipleEpisodesQueryParams, CancellationToken) Gets multiple different ITraktEpisodes at once in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetEpisodeAsync(string, uint, uint, TraktExtendedInfo, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktEpisode>> GetEpisodesStreamAsync(TraktMultipleEpisodesQueryParams episodesQueryParams, CancellationToken cancellationToken = default) Parameters episodesQueryParams TraktMultipleEpisodesQueryParams A list of show ids, season numbers, episode numbers and optional extended infos. See also TraktMultipleEpisodesQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktEpisode>> An async stream of ITraktEpisode instances with the data of each queried episode. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams, CancellationToken) Gets multiple different ITraktEpisodes at once in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Episodes: Summary\" for more information. See also GetEpisodeAsync(string, uint, uint, TraktExtendedInfo, CancellationToken). [Obsolete(\"GetMultipleEpisodesAsync is deprecated, please use GetEpisodesStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktEpisode>>> GetMultipleEpisodesAsync(TraktMultipleEpisodesQueryParams episodesQueryParams, CancellationToken cancellationToken = default) Parameters episodesQueryParams TraktMultipleEpisodesQueryParams A list of show ids, season numbers, episode numbers and optional extended infos. See also TraktMultipleEpisodesQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktEpisode>>> A list of ITraktEpisode instances with the data of each queried episode. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktGenresModule.html": {
    "href": "api/TraktNet.Modules.TraktGenresModule.html",
    "title": "Class TraktGenresModule | Trakt.NET",
    "keywords": "Class TraktGenresModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to genres. This module contains all methods of the \"Trakt API Doc - Genres\" section. public class TraktGenresModule : ATraktModule Inheritance object ATraktModule TraktGenresModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMovieGenresAsync(CancellationToken) Gets a list of all movie genres. OAuth authorization not required. See \"Trakt API Doc - Genres: List\" for more information. public Task<TraktListResponse<ITraktGenre>> GetMovieGenresAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktGenre>> A list of ITraktGenre instances. Exceptions TraktException Thrown, if the request fails. GetShowGenresAsync(CancellationToken) Gets a list of all show genres. OAuth authorization not required. See \"Trakt API Doc - Genres: List\" for more information. public Task<TraktListResponse<ITraktGenre>> GetShowGenresAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktGenre>> A list of ITraktGenre instances. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktLanguagesModule.html": {
    "href": "api/TraktNet.Modules.TraktLanguagesModule.html",
    "title": "Class TraktLanguagesModule | Trakt.NET",
    "keywords": "Class TraktLanguagesModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to languages. This module contains all methods of the \"Trakt API Doc - Languages\" section. public class TraktLanguagesModule : ATraktModule Inheritance object ATraktModule TraktLanguagesModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMovieLanguagesAsync(CancellationToken) Gets a list of all movie languages. OAuth authorization not required. See \"Trakt API Doc - Languages: List\" for more information. public Task<TraktListResponse<ITraktLanguage>> GetMovieLanguagesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktLanguage>> A list of ITraktLanguage instances. Exceptions TraktException Thrown, if the request fails. GetShowLanguagesAsync(CancellationToken) Gets a list of all show languages. OAuth authorization not required. See \"Trakt API Doc - Languages: List\" for more information. public Task<TraktListResponse<ITraktLanguage>> GetShowLanguagesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktLanguage>> A list of ITraktLanguage instances. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktListsModule.html": {
    "href": "api/TraktNet.Modules.TraktListsModule.html",
    "title": "Class TraktListsModule | Trakt.NET",
    "keywords": "Class TraktListsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to lists. This module contains all methods of the \"Trakt API Doc - Lists\" section. public class TraktListsModule : ATraktModule Inheritance object ATraktModule TraktListsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetListAsync(string, TraktExtendedInfo, CancellationToken) Gets a ITraktList with the given Trakt-Id. OAuth authorization not required. See \"Trakt API Doc - Lists: List\" for more information. public Task<TraktResponse<ITraktList>> GetListAsync(string listIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The list's Trakt-Id or -Slug. See also ITraktListIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance with the queried list's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListAsync(uint, TraktExtendedInfo, CancellationToken) Gets a ITraktList with the given Trakt-Id. OAuth authorization not required. See \"Trakt API Doc - Lists: List\" for more information. public Task<TraktResponse<ITraktList>> GetListAsync(uint traktListId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktListId uint The list's Trakt-Id. See also ITraktListIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance with the queried list's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListAsync(ITraktListIds, TraktExtendedInfo, CancellationToken) Gets a ITraktList with the given Trakt-Id. OAuth authorization not required. See \"Trakt API Doc - Lists: List\" for more information. public Task<TraktResponse<ITraktList>> GetListAsync(ITraktListIds listIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The list's ids. See also ITraktListIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance with the queried list's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetListCommentsAsync(string, TraktCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a list. See \"Trakt API Doc - Lists: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(string listIdOrSlug, TraktCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The id or slug of the list, for which the comments should be queried. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListCommentsAsync(uint, TraktCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a list. See \"Trakt API Doc - Lists: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(uint traktListId, TraktCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktListId uint The list's Trakt-Id. See also ITraktListIds. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListCommentsAsync(ITraktList, TraktCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a list. See \"Trakt API Doc - Lists: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(ITraktList list, TraktCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters list ITraktList The list. See also ITraktList. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetListCommentsAsync(ITraktListIds, TraktCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a list. See \"Trakt API Doc - Lists: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(ITraktListIds listIds, TraktCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The list's ids. See also ITraktListIds. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetListItemsAsync(string, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on a list. See \"Trakt API Doc - Lists: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetListItemsAsync(string listIdOrSlug, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The id or slug of the list, for which the items should be queried. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListItemsAsync(uint, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on a list. See \"Trakt API Doc - Lists: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetListItemsAsync(uint traktListId, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktListId uint The list's Trakt-Id. See also ITraktListIds. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListItemsAsync(ITraktList, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on a list. See \"Trakt API Doc - Lists: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetListItemsAsync(ITraktList list, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters list ITraktList The list. See also ITraktList. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetListItemsAsync(ITraktListIds, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on a list. See \"Trakt API Doc - Lists: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetListItemsAsync(ITraktListIds listIds, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The list's ids. See also ITraktListIds. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetListLikesAsync(string, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the users who liked a list. See \"Trakt API Doc - Lists: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(string listIdOrSlug, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The id or slug of the list, for which the likes should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> A list of ITraktListLike instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListLikesAsync(uint, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the users who liked a list. See \"Trakt API Doc - Lists: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(uint traktListId, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktListId uint The list's Trakt-Id. See also ITraktListIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> A list of ITraktListLike instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListLikesAsync(ITraktList, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the users who liked a list. See \"Trakt API Doc - Lists: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(ITraktList list, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters list ITraktList The list. See also ITraktList. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> A list of ITraktListLike instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetListLikesAsync(ITraktListIds, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the users who liked a list. See \"Trakt API Doc - Lists: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(ITraktListIds listIds, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The list's ids. See also ITraktListIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> A list of ITraktListLike instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetPopularListsAsync(TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets popular lists. OAuth authorization not required. See \"Trakt API Doc - Lists: Popular\" for more information. public Task<TraktPagedResponse<ITraktPopularList>> GetPopularListsAsync(TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktPopularList>> An TraktPagedResponse<TResponseContentType> instance containing the queried popular lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktPopularList. Exceptions TraktException Thrown, if the request fails. GetTrendingListsAsync(TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets trending lists. OAuth authorization not required. See \"Trakt API Doc - Lists: Trending\" for more information. public Task<TraktPagedResponse<ITraktTrendingList>> GetTrendingListsAsync(TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktTrendingList>> An TraktPagedResponse<TResponseContentType> instance containing the queried trending lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktTrendingList. Exceptions TraktException Thrown, if the request fails. LikeListAsync(string, CancellationToken) Like a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(string listIdOrSlug, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The id or slug of the list, which will be liked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. LikeListAsync(uint, CancellationToken) Like a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(uint traktListId, CancellationToken cancellationToken = default) Parameters traktListId uint The Trakt ID of the list, which will be liked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. LikeListAsync(ITraktList, CancellationToken) Like a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(ITraktList list, CancellationToken cancellationToken = default) Parameters list ITraktList The list, which will be liked. See also ITraktList. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. LikeListAsync(ITraktListIds, CancellationToken) Like a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The ids of the list, which will be liked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. UnlikeListAsync(string, CancellationToken) Unlike a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(string listIdOrSlug, CancellationToken cancellationToken = default) Parameters listIdOrSlug string The id or slug of the list, which will be unliked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UnlikeListAsync(uint, CancellationToken) Unlike a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(uint traktListId, CancellationToken cancellationToken = default) Parameters traktListId uint The Trakt ID of the list, which will be unliked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. UnlikeListAsync(ITraktList, CancellationToken) Unlike a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(ITraktList list, CancellationToken cancellationToken = default) Parameters list ITraktList The list, which will be unliked. See also ITraktList. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. UnlikeListAsync(ITraktListIds, CancellationToken) Unlike a list. OAuth authorization required. See \"Trakt API Doc - Lists: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters listIds ITraktListIds The ids of the list, which will be unliked. See also ITraktListIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set."
  },
  "api/TraktNet.Modules.TraktMoviesModule.html": {
    "href": "api/TraktNet.Modules.TraktMoviesModule.html",
    "title": "Class TraktMoviesModule | Trakt.NET",
    "keywords": "Class TraktMoviesModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to movies. This module contains all methods of the \"Trakt API Doc - Movies\" section. public class TraktMoviesModule : ATraktModule Inheritance object ATraktModule TraktMoviesModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBoxOfficeMoviesAsync(TraktExtendedInfo, CancellationToken) Gets the top 10 box office movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Box Office\" for more information. public Task<TraktListResponse<ITraktBoxOfficeMovie>> GetBoxOfficeMoviesAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktBoxOfficeMovie>> A list of ITraktBoxOfficeMovie instances. Exceptions TraktException Thrown, if the request fails. GetMostAnticipatedMoviesAsync(TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets the most anticipated movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Anticipated\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMostAnticipatedMovie>> GetMostAnticipatedMoviesAsync(TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostAnticipatedMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried most anticipated movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostAnticipatedMovie. Exceptions TraktException Thrown, if the request fails. GetMostCollectedMoviesAsync(TraktTimePeriod, TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets the most collected movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Collected\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMostPWCMovie>> GetMostCollectedMoviesAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most collected movies should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried most collected movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCMovie. Exceptions TraktException Thrown, if the request fails. GetMostFavoritedMoviesAsync(TraktTimePeriod, TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets the most favorited movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Favorited\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMostFavoritedMovie>> GetMostFavoritedMoviesAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most favorited movies should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostFavoritedMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried most favorited movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostFavoritedMovie. Exceptions TraktException Thrown, if the request fails. GetMostPlayedMoviesAsync(TraktTimePeriod, TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets the most played movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Played\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMostPWCMovie>> GetMostPlayedMoviesAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most played movies should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried most played movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCMovie. Exceptions TraktException Thrown, if the request fails. GetMostWatchedMoviesAsync(TraktTimePeriod, TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets the most watched movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Watched\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMostPWCMovie>> GetMostWatchedMoviesAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most watched movies should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried most watched movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCMovie. Exceptions TraktException Thrown, if the request fails. GetMovieAliasesAsync(string, CancellationToken) Gets all title aliases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Aliases\" for more information. public Task<TraktListResponse<ITraktMovieAlias>> GetMovieAliasesAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieAlias>> A list of ITraktMovieAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieAliasesAsync(uint, CancellationToken) Gets all title aliases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Aliases\" for more information. public Task<TraktListResponse<ITraktMovieAlias>> GetMovieAliasesAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieAlias>> A list of ITraktMovieAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieAliasesAsync(ITraktMovie, CancellationToken) Gets all title aliases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Aliases\" for more information. public Task<TraktListResponse<ITraktMovieAlias>> GetMovieAliasesAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieAlias>> A list of ITraktMovieAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieAliasesAsync(ITraktMovieIds, CancellationToken) Gets all title aliases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Aliases\" for more information. public Task<TraktListResponse<ITraktMovieAlias>> GetMovieAliasesAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieAlias>> A list of ITraktMovieAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieAsync(string, TraktExtendedInfo, CancellationToken) Gets a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Summary\" for more information. See also GetMultipleMoviesAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktMovie>> GetMovieAsync(string movieIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movie should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovie>> An ITraktMovie instance with the queried movie's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieAsync(uint, TraktExtendedInfo, CancellationToken) Gets a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Summary\" for more information. See also GetMultipleMoviesAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktMovie>> GetMovieAsync(uint traktMovieId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movie should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovie>> An ITraktMovie instance with the queried movie's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieAsync(ITraktMovieIds, TraktExtendedInfo, CancellationToken) Gets a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Summary\" for more information. See also GetMultipleMoviesAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktMovie>> GetMovieAsync(ITraktMovieIds movieIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movie should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovie>> An ITraktMovie instance with the queried movie's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieCommentsAsync(string, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetMovieCommentsAsync(string movieIdOrSlug, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieCommentsAsync(uint, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetMovieCommentsAsync(uint traktMovieId, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieCommentsAsync(ITraktMovie, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetMovieCommentsAsync(ITraktMovie movie, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieCommentsAsync(ITraktMovieIds, TraktExtendedCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetMovieCommentsAsync(ITraktMovieIds movieIds, TraktExtendedCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. commentSortOrder TraktExtendedCommentSortOrder The comments sort order. See also TraktExtendedCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieListsAsync(string, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetMovieListsAsync(string movieIdOrSlug, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieListsAsync(uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetMovieListsAsync(uint traktMovieId, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieListsAsync(ITraktMovie, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetMovieListsAsync(ITraktMovie movie, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieListsAsync(ITraktMovieIds, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetMovieListsAsync(ITraktMovieIds movieIds, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried movie lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMoviePeopleAsync(string, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: People\" for more information. public Task<TraktResponse<ITraktCastAndCrew>> GetMoviePeopleAsync(string movieIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCastAndCrew>> An ITraktCastAndCrew instance, containing the cast and crew for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMoviePeopleAsync(uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: People\" for more information. public Task<TraktResponse<ITraktCastAndCrew>> GetMoviePeopleAsync(uint traktMovieId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCastAndCrew>> An ITraktCastAndCrew instance, containing the cast and crew for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMoviePeopleAsync(ITraktMovie, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: People\" for more information. public Task<TraktResponse<ITraktCastAndCrew>> GetMoviePeopleAsync(ITraktMovie movie, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCastAndCrew>> An ITraktCastAndCrew instance, containing the cast and crew for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMoviePeopleAsync(ITraktMovieIds, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: People\" for more information. public Task<TraktResponse<ITraktCastAndCrew>> GetMoviePeopleAsync(ITraktMovieIds movieIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktCastAndCrew>> An ITraktCastAndCrew instance, containing the cast and crew for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieRatingsAsync(string, CancellationToken) Gets the ratings for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetMovieRatingsAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieRatingsAsync(uint, CancellationToken) Gets the ratings for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetMovieRatingsAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieRatingsAsync(ITraktMovie, CancellationToken) Gets the ratings for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetMovieRatingsAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieRatingsAsync(ITraktMovieIds, CancellationToken) Gets the ratings for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetMovieRatingsAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieRelatedMoviesAsync(string, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related movies for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Related\" for more information. public Task<TraktPagedResponse<ITraktMovie>> GetMovieRelatedMoviesAsync(string movieIdOrSlug, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried related movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMovie. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieRelatedMoviesAsync(uint, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related movies for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Related\" for more information. public Task<TraktPagedResponse<ITraktMovie>> GetMovieRelatedMoviesAsync(uint traktMovieId, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried related movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMovie. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieRelatedMoviesAsync(ITraktMovie, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related movies for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Related\" for more information. public Task<TraktPagedResponse<ITraktMovie>> GetMovieRelatedMoviesAsync(ITraktMovie movie, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried related movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMovie. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieRelatedMoviesAsync(ITraktMovieIds, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related movies for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Related\" for more information. public Task<TraktPagedResponse<ITraktMovie>> GetMovieRelatedMoviesAsync(ITraktMovieIds movieIds, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried related movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMovie. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieReleasesAsync(string, string, CancellationToken) Gets all releases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Releases\" for more information. public Task<TraktListResponse<ITraktMovieRelease>> GetMovieReleasesAsync(string movieIdOrSlug, string countryCode = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. countryCode string An optional two letter country code to query a specific release. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieRelease>> A list of ITraktMovieRelease instances, each containing a country code, certification, release date and a note. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieReleasesAsync(uint, string, CancellationToken) Gets all releases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Releases\" for more information. public Task<TraktListResponse<ITraktMovieRelease>> GetMovieReleasesAsync(uint traktMovieId, string countryCode = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. countryCode string An optional two letter country code to query a specific release. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieRelease>> A list of ITraktMovieRelease instances, each containing a country code, certification, release date and a note. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieReleasesAsync(ITraktMovie, string, CancellationToken) Gets all releases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Releases\" for more information. public Task<TraktListResponse<ITraktMovieRelease>> GetMovieReleasesAsync(ITraktMovie movie, string countryCode = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. countryCode string An optional two letter country code to query a specific release. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieRelease>> A list of ITraktMovieRelease instances, each containing a country code, certification, release date and a note. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieReleasesAsync(ITraktMovieIds, string, CancellationToken) Gets all releases for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Releases\" for more information. public Task<TraktListResponse<ITraktMovieRelease>> GetMovieReleasesAsync(ITraktMovieIds movieIds, string countryCode = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. countryCode string An optional two letter country code to query a specific release. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieRelease>> A list of ITraktMovieRelease instances, each containing a country code, certification, release date and a note. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieStatisticsAsync(string, CancellationToken) Gets the statistics for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetMovieStatisticsAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieStatisticsAsync(uint, CancellationToken) Gets the statistics for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetMovieStatisticsAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieStatisticsAsync(ITraktMovie, CancellationToken) Gets the statistics for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetMovieStatisticsAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieStatisticsAsync(ITraktMovieIds, CancellationToken) Gets the statistics for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetMovieStatisticsAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a movie with the given movieIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieStudiosAsync(string, CancellationToken) Gets all studios of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetMovieStudiosAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieStudiosAsync(uint, CancellationToken) Gets all studios of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetMovieStudiosAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieStudiosAsync(ITraktMovie, CancellationToken) Gets all studios of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetMovieStudiosAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieStudiosAsync(ITraktMovieIds, CancellationToken) Gets all studios of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetMovieStudiosAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieTranslationsAsync(string, string, CancellationToken) Gets all translations for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Translations\" for more information. public Task<TraktListResponse<ITraktMovieTranslation>> GetMovieTranslationsAsync(string movieIdOrSlug, string languageCode = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieTranslation>> A list of ITraktMovieTranslation instances, each containing a title, tagline, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieTranslationsAsync(uint, string, CancellationToken) Gets all translations for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Translations\" for more information. public Task<TraktListResponse<ITraktMovieTranslation>> GetMovieTranslationsAsync(uint traktMovieId, string languageCode = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieTranslation>> A list of ITraktMovieTranslation instances, each containing a title, tagline, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieTranslationsAsync(ITraktMovie, string, CancellationToken) Gets all translations for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Translations\" for more information. public Task<TraktListResponse<ITraktMovieTranslation>> GetMovieTranslationsAsync(ITraktMovie movie, string languageCode = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieTranslation>> A list of ITraktMovieTranslation instances, each containing a title, tagline, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieTranslationsAsync(ITraktMovieIds, string, CancellationToken) Gets all translations for a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Translations\" for more information. public Task<TraktListResponse<ITraktMovieTranslation>> GetMovieTranslationsAsync(ITraktMovieIds movieIds, string languageCode = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktMovieTranslation>> A list of ITraktMovieTranslation instances, each containing a title, tagline, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMovieWatchingUsersAsync(string, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetMovieWatchingUsersAsync(string movieIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMovieWatchingUsersAsync(uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetMovieWatchingUsersAsync(uint traktMovieId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. GetMovieWatchingUsersAsync(ITraktMovie, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetMovieWatchingUsersAsync(ITraktMovie movie, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. GetMovieWatchingUsersAsync(ITraktMovieIds, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktMovie with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Movies: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetMovieWatchingUsersAsync(ITraktMovieIds movieIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. GetMoviesStreamAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktMovies at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Movies: Summary\" for more information. See also GetMovieAsync(string, TraktExtendedInfo, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktMovie>> GetMoviesStreamAsync(TraktMultipleObjectsQueryParams moviesQueryParams, CancellationToken cancellationToken = default) Parameters moviesQueryParams TraktMultipleObjectsQueryParams A list of movie ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktMovie>> An async stream of ITraktMovie instances with the data of each queried movie. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetMultipleMoviesAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktMovies at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Movies: Summary\" for more information. See also GetMovieAsync(string, TraktExtendedInfo, CancellationToken). [Obsolete(\"GetMultipleMoviesAsync is deprecated, please use GetMoviesStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktMovie>>> GetMultipleMoviesAsync(TraktMultipleObjectsQueryParams moviesQueryParams, CancellationToken cancellationToken = default) Parameters moviesQueryParams TraktMultipleObjectsQueryParams A list of movie ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktMovie>>> A list of ITraktMovie instances with the data of each queried movie. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPopularMoviesAsync(TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets popular movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Popular\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktMovie>> GetPopularMoviesAsync(TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried popular movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMovie. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedMovieIdsAsync(DateTime?, TraktPagedParameters, CancellationToken) Gets recently updated movie ids since the given startDate. OAuth authorization not required. See \"Trakt API Doc - Movies: Updated Ids\" for more information. public Task<TraktPagedResponse<int>> GetRecentlyUpdatedMovieIdsAsync(DateTime? startDate = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated movie ids should be queried. Will be converted to the Trakt UTC-datetime and -format. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<int>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated movie ids and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType>. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedMoviesAsync(DateTime?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets updated movies since the given startDate. OAuth authorization not required. See \"Trakt API Doc - Movies: Updates\" for more information. public Task<TraktPagedResponse<ITraktRecentlyUpdatedMovie>> GetRecentlyUpdatedMoviesAsync(DateTime? startDate = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated movies should be queried. Will be converted to the Trakt UTC-datetime and -format. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRecentlyUpdatedMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktRecentlyUpdatedMovie. Exceptions TraktException Thrown, if the request fails. GetTrendingMoviesAsync(TraktExtendedInfo, ITraktMovieFilter, TraktPagedParameters, CancellationToken) Gets trending movies. OAuth authorization not required. See \"Trakt API Doc - Movies: Trending\" for more information. Use the ITraktMovieFilterBuilder to create an instance of the optional ITraktMovieFilter. See also NewMovieFilter(). public Task<TraktPagedResponse<ITraktTrendingMovie>> GetTrendingMoviesAsync(TraktExtendedInfo extendedInfo = null, ITraktMovieFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. filter ITraktMovieFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktMovieFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktTrendingMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried trending movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktTrendingMovie. Exceptions TraktException Thrown, if the request fails. RefreshMovieAsync(string, CancellationToken) Queue a ITraktMovie for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh movie metadata\" for more information. public Task<TraktNoContentResponse> RefreshMovieAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The movie's Trakt-Id or -Slug. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. RefreshMovieAsync(uint, CancellationToken) Queue a ITraktMovie for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh movie metadata\" for more information. public Task<TraktNoContentResponse> RefreshMovieAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The movie's Trakt-Id. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. RefreshMovieAsync(ITraktMovie, CancellationToken) Queue a ITraktMovie for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh movie metadata\" for more information. public Task<TraktNoContentResponse> RefreshMovieAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie. See also ITraktMovie. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. RefreshMovieAsync(ITraktMovieIds, CancellationToken) Queue a ITraktMovie for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh movie metadata\" for more information. public Task<TraktNoContentResponse> RefreshMovieAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The movie's ids. See also ITraktMovieIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set."
  },
  "api/TraktNet.Modules.TraktNetworksModule.html": {
    "href": "api/TraktNet.Modules.TraktNetworksModule.html",
    "title": "Class TraktNetworksModule | Trakt.NET",
    "keywords": "Class TraktNetworksModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to networks. This module contains all methods of the \"Trakt API Doc - Networks\" section. public class TraktNetworksModule : ATraktModule Inheritance object ATraktModule TraktNetworksModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNetworksAsync(CancellationToken) Gets a list of all networks. OAuth authorization not required. See \"Trakt API Doc - Networks: List\" for more information. public Task<TraktListResponse<ITraktNetwork>> GetNetworksAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktNetwork>> A list of ITraktNetwork instances. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktNotesModule.html": {
    "href": "api/TraktNet.Modules.TraktNotesModule.html",
    "title": "Class TraktNotesModule | Trakt.NET",
    "keywords": "Class TraktNotesModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to notes. This module contains all methods of the \"Trakt API Doc - Notes\" section. public class TraktNotesModule : ATraktModule Inheritance object ATraktModule TraktNotesModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCollectionMovieNoteAsync(ITraktMovie, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a collection ITraktMovie. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddCollectionMovieNoteAsync(ITraktMovie movie, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie An ITraktMovie instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given movie is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddCollectionShowNoteAsync(ITraktShow, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a collection ITraktShow. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddCollectionShowNoteAsync(ITraktShow show, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters show ITraktShow An ITraktShow instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given show is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddEpisodeNoteAsync(ITraktEpisode, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for an ITraktEpisode. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddEpisodeNoteAsync(ITraktEpisode episode, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters episode ITraktEpisode An ITraktEpisode instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given episode is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddHistoryNoteAsync(ulong, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for an history item. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddHistoryNoteAsync(ulong historyID, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters historyID ulong The ID of the history item for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddMovieNoteAsync(ITraktMovie, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a ITraktMovie. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddMovieNoteAsync(ITraktMovie movie, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie An ITraktMovie instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given movie is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddPersonNoteAsync(ITraktPerson, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a ITraktPerson. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddPersonNoteAsync(ITraktPerson person, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters person ITraktPerson An ITraktPerson instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given person is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddRatedEpisodeNoteAsync(ITraktEpisode, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for an rated ITraktEpisode. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddRatedEpisodeNoteAsync(ITraktEpisode episode, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters episode ITraktEpisode An ITraktEpisode instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given episode is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddRatedMovieNoteAsync(ITraktMovie, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a rated ITraktMovie. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddRatedMovieNoteAsync(ITraktMovie movie, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters movie ITraktMovie An ITraktMovie instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given movie is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddRatedSeasonNoteAsync(ITraktSeason, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a rated ITraktSeason. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddRatedSeasonNoteAsync(ITraktSeason season, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters season ITraktSeason An ITraktSeason instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given season is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddRatedShowNoteAsync(ITraktShow, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a rated ITraktShow. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddRatedShowNoteAsync(ITraktShow show, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters show ITraktShow An ITraktShow instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given show is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddSeasonNoteAsync(ITraktSeason, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a ITraktSeason. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddSeasonNoteAsync(ITraktSeason season, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters season ITraktSeason An ITraktSeason instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given season is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddShowNoteAsync(ITraktShow, string, bool?, TraktListPrivacy, CancellationToken) Adds notes for a ITraktShow. OAuth authorization required. See \"Trakt API Doc - Notes: Add notes\" for more information. public Task<TraktResponse<ITraktNote>> AddShowNoteAsync(ITraktShow show, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters show ITraktShow An ITraktShow instance for which the notes will be attached. notes string The content of the created note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the created user notes entry. Exceptions ArgumentNullException Thrown, if the given show is null. TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. DeleteNoteAsync(ulong, CancellationToken) Delete a single note. OAuth authorization required. See \"Trakt API Doc - Note: Delete a note\" for more information. public Task<TraktNoContentResponse> DeleteNoteAsync(ulong noteId, CancellationToken cancellationToken = default) Parameters noteId ulong The id of the note which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetNoteAsync(ulong, CancellationToken) Returns a single note. OAuth authorization required. See \"Trakt API Doc - Note: Get a note\" for more information. public Task<TraktResponse<ITraktNote>> GetNoteAsync(ulong noteId, CancellationToken cancellationToken = default) Parameters noteId ulong The id of the note which should is requested. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the requested note. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetNoteItemAsync(ulong, TraktExtendedInfo, CancellationToken) Returns the item this note is attached to. See \"Trakt API Doc - Item: Get the attached item\" for more information. public Task<TraktResponse<ITraktNoteItem>> GetNoteItemAsync(ulong noteId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters noteId ulong The id of the note for which the attached item should is requested. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the attached item should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNoteItem>> An ITraktNoteItem instance, which contains information about the requested note item. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateNoteAsync(ulong, string, bool?, TraktListPrivacy, CancellationToken) Update a single note (500 maximum characters). OAuth authorization required. See \"Trakt API Doc - Note: Update a note\" for more information. public Task<TraktResponse<ITraktNote>> UpdateNoteAsync(ulong noteId, string notes, bool? spoiler = null, TraktListPrivacy privacy = null, CancellationToken cancellationToken = default) Parameters noteId ulong The id of the note which should be updated. notes string The new content of the note. spoiler bool? Optional parameter which determines whether the note contains any spoilers. privacy TraktListPrivacy Optional parameter determining the privacy setting of the note. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktNote>> An ITraktNote instance, which contains information about the requested note. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktPeopleModule.html": {
    "href": "api/TraktNet.Modules.TraktPeopleModule.html",
    "title": "Class TraktPeopleModule | Trakt.NET",
    "keywords": "Class TraktPeopleModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to people. This module contains all methods of the \"Trakt API Doc - People\" section. public class TraktPeopleModule : ATraktModule Inheritance object ATraktModule TraktPeopleModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMultiplePersonsAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktPersons at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - People: Summary\" for more information. See also GetPersonAsync(string, TraktExtendedInfo, CancellationToken). [Obsolete(\"GetMultiplePersonsAsync is deprecated, please use GetPersonsStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktPerson>>> GetMultiplePersonsAsync(TraktMultipleObjectsQueryParams personsQueryParams, CancellationToken cancellationToken = default) Parameters personsQueryParams TraktMultipleObjectsQueryParams A list of person ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktPerson>>> A list of ITraktPerson instances with the data of each queried person. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonAsync(string, TraktExtendedInfo, CancellationToken) Gets a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Summary\" for more information. See also GetMultiplePersonsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktPerson>> GetPersonAsync(string personIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIdOrSlug string The person's Trakt-Id or -Slug. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the person should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPerson>> An ITraktPerson instance with the queried person's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonAsync(uint, TraktExtendedInfo, CancellationToken) Gets a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Summary\" for more information. See also GetMultiplePersonsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktPerson>> GetPersonAsync(uint traktPersonId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktPersonId uint The person's Trakt-Id. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the person should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPerson>> An ITraktPerson instance with the queried person's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktPersonId is 0. GetPersonAsync(ITraktPersonIds, TraktExtendedInfo, CancellationToken) Gets a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Summary\" for more information. See also GetMultiplePersonsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktPerson>> GetPersonAsync(ITraktPersonIds personIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIds ITraktPersonIds The person's ids. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the person should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPerson>> An ITraktPerson instance with the queried person's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given personIds is null. ArgumentException Thrown, if the given personIds has not any ids set. GetPersonListsAsync(string, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetPersonListsAsync(string personIdOrSlug, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters personIdOrSlug string The person's Trakt-Id or -Slug. See also ITraktPersonIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried person lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonListsAsync(uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetPersonListsAsync(uint traktPersonId, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktPersonId uint The person's Trakt-Id. See also ITraktPersonIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried person lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktPersonId is 0. GetPersonListsAsync(ITraktPerson, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetPersonListsAsync(ITraktPerson person, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters person ITraktPerson The person. See also ITraktPerson. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried person lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given person is null. GetPersonListsAsync(ITraktPersonIds, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktPerson with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - People: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetPersonListsAsync(ITraktPersonIds personIds, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters personIds ITraktPersonIds The person's ids. See also ITraktPersonIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried person lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given personIds is null. ArgumentException Thrown, if the given personIds has not any ids set. GetPersonMovieCreditsAsync(string, TraktExtendedInfo, CancellationToken) Gets all movies where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Movies\" for more information. public Task<TraktResponse<ITraktPersonMovieCredits>> GetPersonMovieCreditsAsync(string personIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIdOrSlug string The Trakt-Id or -Slug of the person, for which the movies should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonMovieCredits>> An ITraktPersonMovieCredits instance with the queried person's movie credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonMovieCreditsAsync(uint, TraktExtendedInfo, CancellationToken) Gets all movies where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Movies\" for more information. public Task<TraktResponse<ITraktPersonMovieCredits>> GetPersonMovieCreditsAsync(uint traktPersonId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktPersonId uint The person's Trakt-Id. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonMovieCredits>> An ITraktPersonMovieCredits instance with the queried person's movie credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktPersonId is 0. GetPersonMovieCreditsAsync(ITraktPerson, TraktExtendedInfo, CancellationToken) Gets all movies where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Movies\" for more information. public Task<TraktResponse<ITraktPersonMovieCredits>> GetPersonMovieCreditsAsync(ITraktPerson person, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters person ITraktPerson The person. See also ITraktPerson. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonMovieCredits>> An ITraktPersonMovieCredits instance with the queried person's movie credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given person is null. GetPersonMovieCreditsAsync(ITraktPersonIds, TraktExtendedInfo, CancellationToken) Gets all movies where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Movies\" for more information. public Task<TraktResponse<ITraktPersonMovieCredits>> GetPersonMovieCreditsAsync(ITraktPersonIds personIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIds ITraktPersonIds The person's ids. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonMovieCredits>> An ITraktPersonMovieCredits instance with the queried person's movie credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given personIds is null. ArgumentException Thrown, if the given personIds has not any ids set. GetPersonShowCreditsAsync(string, TraktExtendedInfo, CancellationToken) Gets all shows where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Shows\" for more information. public Task<TraktResponse<ITraktPersonShowCredits>> GetPersonShowCreditsAsync(string personIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIdOrSlug string The Trakt-Id or -Slug of the person, for which the shows should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonShowCredits>> An ITraktPersonShowCredits instance with the queried person's show credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonShowCreditsAsync(uint, TraktExtendedInfo, CancellationToken) Gets all shows where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Shows\" for more information. public Task<TraktResponse<ITraktPersonShowCredits>> GetPersonShowCreditsAsync(uint traktPersonId, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktPersonId uint The person's Trakt-Id. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonShowCredits>> An ITraktPersonShowCredits instance with the queried person's show credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktPersonId is 0. GetPersonShowCreditsAsync(ITraktPerson, TraktExtendedInfo, CancellationToken) Gets all shows where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Shows\" for more information. public Task<TraktResponse<ITraktPersonShowCredits>> GetPersonShowCreditsAsync(ITraktPerson person, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters person ITraktPerson The person. See also ITraktPerson. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonShowCredits>> An ITraktPersonShowCredits instance with the queried person's show credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given person is null. GetPersonShowCreditsAsync(ITraktPersonIds, TraktExtendedInfo, CancellationToken) Gets all shows where a person with the given Trakt-Id or -Slug is in the cast or crew. OAuth authorization not required. See \"Trakt API Doc - People: Shows\" for more information. public Task<TraktResponse<ITraktPersonShowCredits>> GetPersonShowCreditsAsync(ITraktPersonIds personIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters personIds ITraktPersonIds The person's ids. See also ITraktPersonIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktPersonShowCredits>> An ITraktPersonShowCredits instance with the queried person's show credits. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given personIds is null. ArgumentException Thrown, if the given personIds has not any ids set. GetPersonsStreamAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktPersons at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - People: Summary\" for more information. See also GetPersonAsync(string, TraktExtendedInfo, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktPerson>> GetPersonsStreamAsync(TraktMultipleObjectsQueryParams personsQueryParams, CancellationToken cancellationToken = default) Parameters personsQueryParams TraktMultipleObjectsQueryParams A list of person ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktPerson>> An async stream of ITraktPerson instances with the data of each queried person. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetRecentlyUpdatedPeopleAsync(DateTime?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets updated people since the given startDate. OAuth authorization not required. See \"Trakt API Doc - People: Updates\" for more information. public Task<TraktPagedResponse<ITraktRecentlyUpdatedPerson>> GetRecentlyUpdatedPeopleAsync(DateTime? startDate = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated people should be queried. Will be converted to the Trakt UTC-datetime and -format. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRecentlyUpdatedPerson>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated people and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktRecentlyUpdatedPerson. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedPeopleIdsAsync(DateTime?, TraktPagedParameters, CancellationToken) Gets recently updated people ids since the given startDate. OAuth authorization not required. See \"Trakt API Doc - People: Updated Ids\" for more information. public Task<TraktPagedResponse<int>> GetRecentlyUpdatedPeopleIdsAsync(DateTime? startDate = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated people ids should be queried. Will be converted to the Trakt UTC-datetime and -format. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<int>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated people ids and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType>. Exceptions TraktException Thrown, if the request fails."
  },
  "api/TraktNet.Modules.TraktRecommendationsModule.html": {
    "href": "api/TraktNet.Modules.TraktRecommendationsModule.html",
    "title": "Class TraktRecommendationsModule | Trakt.NET",
    "keywords": "Class TraktRecommendationsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to recommendations. This module contains all methods of the \"Trakt API Doc - Recommendations\" section. public class TraktRecommendationsModule : ATraktModule Inheritance object ATraktModule TraktRecommendationsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMovieRecommendationsAsync(bool?, bool?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets personalized movie recommendations for an user. OAuth authorization required. See \"Trakt API Doc - Recommendations: Movies\" for more information. public Task<TraktPagedResponse<ITraktRecommendedMovie>> GetMovieRecommendationsAsync(bool? ignoreCollected = null, bool? ignoreWatchlisted = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters ignoreCollected bool? Determines, if already collected movies should be filtered out. ignoreWatchlisted bool? Determines, if already watchlisted movies should be filtered out. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRecommendedMovie>> An TraktPagedResponse<TResponseContentType> instance containing the queried recommended movies and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktRecommendedMovie. Exceptions TraktException Thrown, if the request fails. GetShowRecommendationsAsync(bool?, bool?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets personalized show recommendations for an user. OAuth authorization required. See \"Trakt API Doc - Recommendations: Shows\" for more information. public Task<TraktPagedResponse<ITraktRecommendedShow>> GetShowRecommendationsAsync(bool? ignoreCollected = null, bool? ignoreWatchlisted = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters ignoreCollected bool? Determines, if already collected shows should be filtered out. ignoreWatchlisted bool? Determines, if already watchlisted shows should be filtered out. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRecommendedShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried recommended shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktRecommendedShow. Exceptions TraktException Thrown, if the request fails. HideMovieRecommendationAsync(string, CancellationToken) Hides a movie with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Movies\" for more information. public Task<TraktNoContentResponse> HideMovieRecommendationAsync(string movieIdOrSlug, CancellationToken cancellationToken = default) Parameters movieIdOrSlug string The Trakt-Id or -Slug or an IMDB-Id of the movie, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. HideMovieRecommendationAsync(uint, CancellationToken) Hides a movie with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Movies\" for more information. public Task<TraktNoContentResponse> HideMovieRecommendationAsync(uint traktMovieId, CancellationToken cancellationToken = default) Parameters traktMovieId uint The Trakt-Id of the movie, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktMovieId is 0. HideMovieRecommendationAsync(ITraktMovie, CancellationToken) Hides a movie with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Movies\" for more information. public Task<TraktNoContentResponse> HideMovieRecommendationAsync(ITraktMovie movie, CancellationToken cancellationToken = default) Parameters movie ITraktMovie The movie, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movie is null. HideMovieRecommendationAsync(ITraktMovieIds, CancellationToken) Hides a movie with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Movies\" for more information. public Task<TraktNoContentResponse> HideMovieRecommendationAsync(ITraktMovieIds movieIds, CancellationToken cancellationToken = default) Parameters movieIds ITraktMovieIds The ids of the movie, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIds has not any ids set. HideShowRecommendationAsync(string, CancellationToken) Hides a show with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Shows\" for more information. public Task<TraktNoContentResponse> HideShowRecommendationAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The Trakt-Id or -Slug or an IMDB-Id of the show, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. HideShowRecommendationAsync(uint, CancellationToken) Hides a show with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Shows\" for more information. public Task<TraktNoContentResponse> HideShowRecommendationAsync(uint traktShowId, CancellationToken cancellationToken = default) Parameters traktShowId uint The Trakt-Id of the show, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowId is 0. HideShowRecommendationAsync(ITraktShow, CancellationToken) Hides a show with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Shows\" for more information. public Task<TraktNoContentResponse> HideShowRecommendationAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. HideShowRecommendationAsync(ITraktShowIds, CancellationToken) Hides a show with the given Trakt-Id or -Slug or IMDB-Id from getting recommended anymore. OAuth authorization required. See \"Trakt API Doc - Recommendations: Shows\" for more information. public Task<TraktNoContentResponse> HideShowRecommendationAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The ids of the show, which should be hidden from recommendations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set."
  },
  "api/TraktNet.Modules.TraktScrobbleModule.html": {
    "href": "api/TraktNet.Modules.TraktScrobbleModule.html",
    "title": "Class TraktScrobbleModule | Trakt.NET",
    "keywords": "Class TraktScrobbleModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to scrobbles. This module contains all methods of the \"Trakt API Doc - Scrobble\" section. public class TraktScrobbleModule : ATraktModule Inheritance object ATraktModule TraktScrobbleModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PauseEpisodeAsync(ITraktEpisodeScrobblePost, CancellationToken) Pauses watching a ITraktEpisode in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktEpisodeScrobblePostBuilder to create an instance of the required ITraktEpisodeScrobblePost. See also NewEpisodeScrobblePost(). public Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> PauseEpisodeAsync(ITraktEpisodeScrobblePost episodeScrobblePost, CancellationToken cancellationToken = default) Parameters episodeScrobblePost ITraktEpisodeScrobblePost An ITraktEpisodeScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> An ITraktEpisodeScrobblePostResponse instance, containing the successfully scrobbled episode's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. PauseMovieAsync(ITraktMovieScrobblePost, CancellationToken) Pauses watching a ITraktMovie in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktMovieScrobblePostBuilder to create an instance of the required ITraktMovieScrobblePost. See also NewMovieScrobblePost(). public Task<TraktResponse<ITraktMovieScrobblePostResponse>> PauseMovieAsync(ITraktMovieScrobblePost movieScrobblePost, CancellationToken cancellationToken = default) Parameters movieScrobblePost ITraktMovieScrobblePost An ITraktMovieScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovieScrobblePostResponse>> An ITraktMovieScrobblePostResponse instance, containing the successfully scrobbled movie's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. StartEpisodeAsync(ITraktEpisodeScrobblePost, CancellationToken) Starts watching a ITraktEpisode in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktEpisodeScrobblePostBuilder to create an instance of the required ITraktEpisodeScrobblePost. See also NewEpisodeScrobblePost(). public Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> StartEpisodeAsync(ITraktEpisodeScrobblePost episodeScrobblePost, CancellationToken cancellationToken = default) Parameters episodeScrobblePost ITraktEpisodeScrobblePost An ITraktEpisodeScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> An ITraktEpisodeScrobblePostResponse instance, containing the successfully scrobbled episode's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. StartMovieAsync(ITraktMovieScrobblePost, CancellationToken) Starts watching a ITraktMovie in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktMovieScrobblePostBuilder to create an instance of the required ITraktMovieScrobblePost. See also NewMovieScrobblePost(). public Task<TraktResponse<ITraktMovieScrobblePostResponse>> StartMovieAsync(ITraktMovieScrobblePost movieScrobblePost, CancellationToken cancellationToken = default) Parameters movieScrobblePost ITraktMovieScrobblePost An ITraktMovieScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovieScrobblePostResponse>> An ITraktMovieScrobblePostResponse instance, containing the successfully scrobbled movie's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. StopEpisodeAsync(ITraktEpisodeScrobblePost, CancellationToken) Stops watching a ITraktEpisode in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktEpisodeScrobblePostBuilder to create an instance of the required ITraktEpisodeScrobblePost. See also NewEpisodeScrobblePost(). public Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> StopEpisodeAsync(ITraktEpisodeScrobblePost episodeScrobblePost, CancellationToken cancellationToken = default) Parameters episodeScrobblePost ITraktEpisodeScrobblePost An ITraktEpisodeScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisodeScrobblePostResponse>> An ITraktEpisodeScrobblePostResponse instance, containing the successfully scrobbled episode's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. StopMovieAsync(ITraktMovieScrobblePost, CancellationToken) Stops watching a ITraktMovie in a media center. OAuth authorization required. See \"Trakt API Doc - Scrobble: Start\" for more information. It is recommended to use the ITraktMovieScrobblePostBuilder to create an instance of the required ITraktMovieScrobblePost. See also NewMovieScrobblePost(). public Task<TraktResponse<ITraktMovieScrobblePostResponse>> StopMovieAsync(ITraktMovieScrobblePost movieScrobblePost, CancellationToken cancellationToken = default) Parameters movieScrobblePost ITraktMovieScrobblePost An ITraktMovieScrobblePost instance, which should be posted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktMovieScrobblePostResponse>> An ITraktMovieScrobblePostResponse instance, containing the successfully scrobbled movie's data. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktSearchModule.html": {
    "href": "api/TraktNet.Modules.TraktSearchModule.html",
    "title": "Class TraktSearchModule | Trakt.NET",
    "keywords": "Class TraktSearchModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to search. This module contains all methods of the \"Trakt API Doc - Search\" section. public class TraktSearchModule : ATraktModule Inheritance object ATraktModule TraktSearchModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetIdLookupResultsAsync(TraktSearchIdType, string, TraktSearchResultType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Looks up items by their Trakt-, IMDB-, TMDB-, TVDB- or TVRage-Id. OAuth authorization not required. See \"Trakt API Doc - Search: Id Lookup\" for more information. public Task<TraktPagedResponse<ITraktSearchResult>> GetIdLookupResultsAsync(TraktSearchIdType searchIdType, string lookupId, TraktSearchResultType searchResultTypes = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters searchIdType TraktSearchIdType The id type, which should be looked up. See also TraktSearchIdType. lookupId string The Trakt-, IMDB-, TMDB-, TVDB- or TVRage-Id, which will be looked up. searchResultTypes TraktSearchResultType The object type(s), which will be looked up. See also TraktSearchResultType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the lookup object(s) should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktSearchResult>> An TraktPagedResponse<TResponseContentType> instance containing the found movies, shows, episodes, people and / or lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktSearchResult. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetTextQueryResultsAsync(TraktSearchResultType, string, TraktSearchField, ITraktSearchFilter, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Searches for movies, shows, episodes, people and / or lists with the given search query. OAuth authorization not required. See \"Trakt API Doc - Search: Text Query\" for more information. Use the ITraktSearchFilterBuilder to create an instance of the optional ITraktSearchFilter. See also NewSearchFilter(). public Task<TraktPagedResponse<ITraktSearchResult>> GetTextQueryResultsAsync(TraktSearchResultType searchResultTypes, string searchQuery, TraktSearchField searchFields = null, ITraktSearchFilter filter = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters searchResultTypes TraktSearchResultType The object type(s), for which will be searched. See also TraktSearchResultType. Multiple TraktSearchResultType values can be combined with a binary operator, like this: TraktSearchResultType.Movie | TraktSearchResultType.Show. searchQuery string The query, for which will be searched. searchFields TraktSearchField Determines the text fields, which will be searched. See also TraktSearchField. filter ITraktSearchFilter Optional filter for genres, year, runtimes, ratings, etc. See also ITraktSearchFilter. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies, shows, episodes, people and / or lists should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktSearchResult>> An TraktPagedResponse<TResponseContentType> instance containing the found movies, shows, episodes, people and / or lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktSearchResult. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktSeasonsModule.html": {
    "href": "api/TraktNet.Modules.TraktSeasonsModule.html",
    "title": "Class TraktSeasonsModule | Trakt.NET",
    "keywords": "Class TraktSeasonsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to seasons. This module contains all methods of the \"Trakt API Doc - Seasons\" section. public class TraktSeasonsModule : ATraktModule Inheritance object ATraktModule TraktSeasonsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) Gets the ITraktSeasons in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Summary\" for more information. public Task<TraktListResponse<ITraktSeason>> GetAllSeasonsAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the seasons should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeason>> A list of ITraktSeason instances with the data of each queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetAllSeasonsAsync(uint, TraktExtendedInfo, string, CancellationToken) Gets the ITraktSeasons in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Summary\" for more information. public Task<TraktListResponse<ITraktSeason>> GetAllSeasonsAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the seasons should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeason>> A list of ITraktSeason instances with the data of each queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetAllSeasonsAsync(ITraktShow, TraktExtendedInfo, string, CancellationToken) Gets the ITraktSeasons in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Summary\" for more information. public Task<TraktListResponse<ITraktSeason>> GetAllSeasonsAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the seasons should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeason>> A list of ITraktSeason instances with the data of each queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetAllSeasonsAsync(ITraktShowIds, TraktExtendedInfo, string, CancellationToken) Gets the ITraktSeasons in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Summary\" for more information. public Task<TraktListResponse<ITraktSeason>> GetAllSeasonsAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the seasons should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeason>> A list of ITraktSeason instances with the data of each queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams, CancellationToken) Gets multiple different seasons at once in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken). [Obsolete(\"GetMultipleSeasonsAsync is deprecated, please use GetSeasonsStreamAsync instead.\")] public Task<IEnumerable<TraktListResponse<ITraktEpisode>>> GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams seasonsQueryParams, CancellationToken cancellationToken = default) Parameters seasonsQueryParams TraktMultipleSeasonsQueryParams A list of show ids, season numbers and optional extended infos. See also TraktMultipleSeasonsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktListResponse<ITraktEpisode>>> A list of lists, each containing ITraktEpisode instances with the data of each episode in the queried seasons. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken) Gets all ITraktEpisodes in a single season in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams, CancellationToken). public Task<TraktListResponse<ITraktEpisode>> GetSeasonAsync(string showIdOrSlug, uint seasonNumber, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the season's episodes should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisode>> A list of ITraktEpisode instances with the data of each episode in the queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonAsync(uint, uint, TraktExtendedInfo, string, CancellationToken) Gets all ITraktEpisodes in a single season in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams, CancellationToken). public Task<TraktListResponse<ITraktEpisode>> GetSeasonAsync(uint traktShowID, uint seasonNumber, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the season's episodes should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisode>> A list of ITraktEpisode instances with the data of each episode in the queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonAsync(ITraktShow, uint, TraktExtendedInfo, string, CancellationToken) Gets all ITraktEpisodes in a single season in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams, CancellationToken). public Task<TraktListResponse<ITraktEpisode>> GetSeasonAsync(ITraktShow show, uint seasonNumber, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the season's episodes should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisode>> A list of ITraktEpisode instances with the data of each episode in the queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonAsync(ITraktShowIds, uint, TraktExtendedInfo, string, CancellationToken) Gets all ITraktEpisodes in a single season in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetMultipleSeasonsAsync(TraktMultipleSeasonsQueryParams, CancellationToken). public Task<TraktListResponse<ITraktEpisode>> GetSeasonAsync(ITraktShowIds showIds, uint seasonNumber, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, which should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the season's episodes should be queried. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktEpisode>> A list of ITraktEpisode instances with the data of each episode in the queried season. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonCommentsAsync(string, uint, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetSeasonCommentsAsync(string showIdOrSlug, uint seasonNumber, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the comments should be queried. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried season comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonCommentsAsync(uint, uint, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetSeasonCommentsAsync(uint traktShowID, uint seasonNumber, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the comments should be queried. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried season comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonCommentsAsync(ITraktShow, uint, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetSeasonCommentsAsync(ITraktShow show, uint seasonNumber, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the comments should be queried. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried season comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonCommentsAsync(ITraktShowIds, uint, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetSeasonCommentsAsync(ITraktShowIds showIds, uint seasonNumber, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the comments should be queried. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried season comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonListsAsync(string, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetSeasonListsAsync(string showIdOrSlug, uint seasonNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried season lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonListsAsync(uint, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetSeasonListsAsync(uint traktShowID, uint seasonNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried season lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonListsAsync(ITraktShow, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetSeasonListsAsync(ITraktShow show, uint seasonNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried season lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonListsAsync(ITraktShowIds, uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing the given ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetSeasonListsAsync(ITraktShowIds showIds, uint seasonNumber, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the lists should be queried. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried season lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonPeopleAsync(string, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktSeason in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetSeasonPeopleAsync(string showIdOrSlug, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonPeopleAsync(uint, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktSeason in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetSeasonPeopleAsync(uint traktShowID, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonPeopleAsync(ITraktShow, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktSeason in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetSeasonPeopleAsync(ITraktShow show, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonPeopleAsync(ITraktShowIds, uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktSeason in a show with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetSeasonPeopleAsync(ITraktShowIds showIds, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the people should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonRatingsAsync(string, uint, CancellationToken) Gets the ratings for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetSeasonRatingsAsync(string showIdOrSlug, uint seasonNumber, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonRatingsAsync(uint, uint, CancellationToken) Gets the ratings for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetSeasonRatingsAsync(uint traktShowID, uint seasonNumber, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonRatingsAsync(ITraktShow, uint, CancellationToken) Gets the ratings for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetSeasonRatingsAsync(ITraktShow show, uint seasonNumber, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonRatingsAsync(ITraktShowIds, uint, CancellationToken) Gets the ratings for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetSeasonRatingsAsync(ITraktShowIds showIds, uint seasonNumber, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the ratings should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonStatisticsAsync(string, uint, CancellationToken) Gets the statistics for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetSeasonStatisticsAsync(string showIdOrSlug, uint seasonNumber, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonStatisticsAsync(uint, uint, CancellationToken) Gets the statistics for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetSeasonStatisticsAsync(uint traktShowID, uint seasonNumber, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonStatisticsAsync(ITraktShow, uint, CancellationToken) Gets the statistics for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetSeasonStatisticsAsync(ITraktShow show, uint seasonNumber, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonStatisticsAsync(ITraktShowIds, uint, CancellationToken) Gets the statistics for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetSeasonStatisticsAsync(ITraktShowIds showIds, uint seasonNumber, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a season with the given showIdOrSlug and the given season number. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonTranslationsAsync(string, uint, string, CancellationToken) Gets the translations for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Translations\" for more information. public Task<TraktListResponse<ITraktSeasonTranslation>> GetSeasonTranslationsAsync(string showIdOrSlug, uint seasonNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeasonTranslation>> A list of ITraktSeasonTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonTranslationsAsync(uint, uint, string, CancellationToken) Gets the translations for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Translations\" for more information. public Task<TraktListResponse<ITraktSeasonTranslation>> GetSeasonTranslationsAsync(uint traktShowID, uint seasonNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeasonTranslation>> A list of ITraktSeasonTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonTranslationsAsync(ITraktShow, uint, string, CancellationToken) Gets the translations for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Translations\" for more information. public Task<TraktListResponse<ITraktSeasonTranslation>> GetSeasonTranslationsAsync(ITraktShow show, uint seasonNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeasonTranslation>> A list of ITraktSeasonTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonTranslationsAsync(ITraktShowIds, uint, string, CancellationToken) Gets the translations for a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Translations\" for more information. public Task<TraktListResponse<ITraktSeasonTranslation>> GetSeasonTranslationsAsync(ITraktShowIds showIds, uint seasonNumber, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the translations should be queried. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktSeasonTranslation>> A list of ITraktSeasonTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonWatchingUsersAsync(string, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetSeasonWatchingUsersAsync(string showIdOrSlug, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. seasonNumber uint The number of the season, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSeasonWatchingUsersAsync(uint, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetSeasonWatchingUsersAsync(uint traktShowID, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. seasonNumber uint The number of the season, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetSeasonWatchingUsersAsync(ITraktShow, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetSeasonWatchingUsersAsync(ITraktShow show, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. seasonNumber uint The number of the season, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetSeasonWatchingUsersAsync(ITraktShowIds, uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktSeason in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetSeasonWatchingUsersAsync(ITraktShowIds showIds, uint seasonNumber, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. seasonNumber uint The number of the season, for which the watching users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetSeasonsStreamAsync(TraktMultipleSeasonsQueryParams, CancellationToken) Gets multiple different seasons at once in a show with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Seasons: Season\" for more information. See also GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken). public IAsyncEnumerable<TraktListResponse<ITraktEpisode>> GetSeasonsStreamAsync(TraktMultipleSeasonsQueryParams seasonsQueryParams, CancellationToken cancellationToken = default) Parameters seasonsQueryParams TraktMultipleSeasonsQueryParams A list of show ids, season numbers and optional extended infos. See also TraktMultipleSeasonsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktListResponse<ITraktEpisode>> An async stream of lists, each containing ITraktEpisode instances with the data of each episode in the queried seasons. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktShowsModule.html": {
    "href": "api/TraktNet.Modules.TraktShowsModule.html",
    "title": "Class TraktShowsModule | Trakt.NET",
    "keywords": "Class TraktShowsModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to shows. This module contains all methods of the \"Trakt API Doc - Shows\" section. public class TraktShowsModule : ATraktModule Inheritance object ATraktModule TraktShowsModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMostAnticipatedShowsAsync(TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets the most anticipated shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Anticipated\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktMostAnticipatedShow>> GetMostAnticipatedShowsAsync(TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostAnticipatedShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried most anticipated shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostAnticipatedShow. Exceptions TraktException Thrown, if the request fails. GetMostCollectedShowsAsync(TraktTimePeriod, TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets the most collected shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Collected\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktMostPWCShow>> GetMostCollectedShowsAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most collected shows should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried most collected shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCShow. Exceptions TraktException Thrown, if the request fails. GetMostFavoritedShowsAsync(TraktTimePeriod, TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets the most favorited shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Favorited\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktMostFavoritedShow>> GetMostFavoritedShowsAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most favorited shows should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostFavoritedShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried most favorited shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostFavoritedShow. Exceptions TraktException Thrown, if the request fails. GetMostPlayedShowsAsync(TraktTimePeriod, TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets the most played shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Played\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktMostPWCShow>> GetMostPlayedShowsAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most played shows should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried most played shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCShow. Exceptions TraktException Thrown, if the request fails. GetMostWatchedShowsAsync(TraktTimePeriod, TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets the most watched shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Watched\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktMostPWCShow>> GetMostWatchedShowsAsync(TraktTimePeriod period = null, TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters period TraktTimePeriod The time period, for which the most watched shows should be queried. See also TraktTimePeriod. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktMostPWCShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried most watched shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktMostPWCShow. Exceptions TraktException Thrown, if the request fails. GetMultipleShowsAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktShows at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Shows: Summary\" for more information. See also GetShowAsync(string, TraktExtendedInfo, CancellationToken). [Obsolete(\"GetMultipleShowsAsync is deprecated, please use GetShowsStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktShow>>> GetMultipleShowsAsync(TraktMultipleObjectsQueryParams showsQueryParams, CancellationToken cancellationToken = default) Parameters showsQueryParams TraktMultipleObjectsQueryParams A list of show ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktShow>>> A list of ITraktShow instances with the data of each queried show. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPopularShowsAsync(TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets popular shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Popular\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktShow>> GetPopularShowsAsync(TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried popular shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktShow. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedShowIdsAsync(DateTime?, TraktPagedParameters, CancellationToken) Gets recently updated show ids since the given startDate. OAuth authorization not required. See \"Trakt API Doc - Shows: Updated Ids\" for more information. public Task<TraktPagedResponse<int>> GetRecentlyUpdatedShowIdsAsync(DateTime? startDate = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated show ids should be queried. Will be converted to the Trakt UTC-datetime and -format. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<int>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated show ids and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType>. Exceptions TraktException Thrown, if the request fails. GetRecentlyUpdatedShowsAsync(DateTime?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets updated shows since the given startDate. OAuth authorization not required. See \"Trakt API Doc - Shows: Updates\" for more information. public Task<TraktPagedResponse<ITraktRecentlyUpdatedShow>> GetRecentlyUpdatedShowsAsync(DateTime? startDate = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters startDate DateTime? The start date, after which updated shows should be queried. Will be converted to the Trakt UTC-datetime and -format. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRecentlyUpdatedShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried updated shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktRecentlyUpdatedShow. Exceptions TraktException Thrown, if the request fails. GetShowAliasesAsync(string, CancellationToken) Gets all title aliases for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Aliases\" for more information. public Task<TraktListResponse<ITraktShowAlias>> GetShowAliasesAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowAlias>> A list of ITraktShowAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowAliasesAsync(uint, CancellationToken) Gets all title aliases for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Aliases\" for more information. public Task<TraktListResponse<ITraktShowAlias>> GetShowAliasesAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowAlias>> A list of ITraktShowAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowAliasesAsync(ITraktShow, CancellationToken) Gets all title aliases for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Aliases\" for more information. public Task<TraktListResponse<ITraktShowAlias>> GetShowAliasesAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowAlias>> A list of ITraktShowAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowAliasesAsync(ITraktShowIds, CancellationToken) Gets all title aliases for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Aliases\" for more information. public Task<TraktListResponse<ITraktShowAlias>> GetShowAliasesAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowAlias>> A list of ITraktShowAlias instances, each containing a title and country code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowAsync(string, TraktExtendedInfo, CancellationToken) Gets a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Summary\" for more information. See also GetMultipleShowsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktShow>> GetShowAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the show should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShow>> An ITraktShow instance with the queried show's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowAsync(uint, TraktExtendedInfo, CancellationToken) Gets a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Summary\" for more information. See also GetMultipleShowsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktShow>> GetShowAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the show should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShow>> An ITraktShow instance with the queried show's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowAsync(ITraktShowIds, TraktExtendedInfo, CancellationToken) Gets a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Summary\" for more information. See also GetMultipleShowsAsync(TraktMultipleObjectsQueryParams, CancellationToken). public Task<TraktResponse<ITraktShow>> GetShowAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the show should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShow>> An ITraktShow instance with the queried show's data. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowCertificationsAsync(string, CancellationToken) Gets all certifications for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Certifications\" for more information. public Task<TraktListResponse<ITraktShowCertification>> GetShowCertificationsAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowCertification>> A list of ITraktShowCertification instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowCertificationsAsync(uint, CancellationToken) Gets all certifications for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Certifications\" for more information. public Task<TraktListResponse<ITraktShowCertification>> GetShowCertificationsAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowCertification>> A list of ITraktShowCertification instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowCertificationsAsync(ITraktShow, CancellationToken) Gets all certifications for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Certifications\" for more information. public Task<TraktListResponse<ITraktShowCertification>> GetShowCertificationsAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowCertification>> A list of ITraktShowCertification instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowCertificationsAsync(ITraktShowIds, CancellationToken) Gets all certifications for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Certifications\" for more information. public Task<TraktListResponse<ITraktShowCertification>> GetShowCertificationsAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowCertification>> A list of ITraktShowCertification instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowCollectionProgressAsync(string, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the collection progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Collection Progress\" for more information. public Task<TraktResponse<ITraktShowCollectionProgress>> GetShowCollectionProgressAsync(string showIdOrSlug, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned collection progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned collection progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned collection progress. lastActivity TraktLastActivity Determines the last activity type of the collection progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCollectionProgress>> An ITraktShowCollectionProgress instance, containing the collection progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowCollectionProgressAsync(uint, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the collection progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Collection Progress\" for more information. public Task<TraktResponse<ITraktShowCollectionProgress>> GetShowCollectionProgressAsync(uint traktShowID, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned collection progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned collection progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned collection progress. lastActivity TraktLastActivity Determines the last activity type of the collection progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCollectionProgress>> An ITraktShowCollectionProgress instance, containing the collection progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowCollectionProgressAsync(ITraktShow, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the collection progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Collection Progress\" for more information. public Task<TraktResponse<ITraktShowCollectionProgress>> GetShowCollectionProgressAsync(ITraktShow show, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. includingHiddenSeasons bool? Determines, if the returned collection progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned collection progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned collection progress. lastActivity TraktLastActivity Determines the last activity type of the collection progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCollectionProgress>> An ITraktShowCollectionProgress instance, containing the collection progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowCollectionProgressAsync(ITraktShowIds, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the collection progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Collection Progress\" for more information. public Task<TraktResponse<ITraktShowCollectionProgress>> GetShowCollectionProgressAsync(ITraktShowIds showIds, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned collection progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned collection progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned collection progress. lastActivity TraktLastActivity Determines the last activity type of the collection progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCollectionProgress>> An ITraktShowCollectionProgress instance, containing the collection progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowCommentsAsync(string, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetShowCommentsAsync(string showIdOrSlug, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried show comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowCommentsAsync(uint, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetShowCommentsAsync(uint traktShowID, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried show comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowCommentsAsync(ITraktShow, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetShowCommentsAsync(ITraktShow show, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried show comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowCommentsAsync(ITraktShowIds, TraktShowsCommentSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets top level comments for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetShowCommentsAsync(ITraktShowIds showIds, TraktShowsCommentSortOrder commentSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. commentSortOrder TraktShowsCommentSortOrder The comments sort order. See also TraktShowsCommentSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about a comment's media item should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried show comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowLastEpisodeAsync(string, TraktExtendedInfo, CancellationToken) Gets the most recently aired ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Last Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowLastEpisodeAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no most recently aired episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowLastEpisodeAsync(uint, TraktExtendedInfo, CancellationToken) Gets the most recently aired ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Last Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowLastEpisodeAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no most recently aired episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowLastEpisodeAsync(ITraktShow, TraktExtendedInfo, CancellationToken) Gets the most recently aired ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Last Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowLastEpisodeAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no most recently aired episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowLastEpisodeAsync(ITraktShowIds, TraktExtendedInfo, CancellationToken) Gets the most recently aired ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Last Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowLastEpisodeAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no most recently aired episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowListsAsync(string, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktShow with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetShowListsAsync(string showIdOrSlug, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. See also TraktListType. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried show lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowListsAsync(uint, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktShow with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetShowListsAsync(uint traktShowID, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. See also TraktListType. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried show lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowListsAsync(ITraktShow, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktShow with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetShowListsAsync(ITraktShow show, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. See also TraktListType. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried show lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowListsAsync(ITraktShowIds, TraktListType, TraktListSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all ITraktLists containing a ITraktShow with the given Trakt-Show-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Lists\" for more information. public Task<TraktPagedResponse<ITraktList>> GetShowListsAsync(ITraktShowIds showIds, TraktListType listType = null, TraktListSortOrder listSortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. listType TraktListType The type of lists, that should be queried. Defaults to personal lists. See also TraktListType. listSortOrder TraktListSortOrder The list sort order. See also TraktListSortOrder. Defaults to sorted by popularity. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktList>> An TraktPagedResponse<TResponseContentType> instance containing the queried show lists and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktList. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowNextEpisodeAsync(string, TraktExtendedInfo, CancellationToken) Gets the next scheduled to air ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Next Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowNextEpisodeAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no scheduled to air episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowNextEpisodeAsync(uint, TraktExtendedInfo, CancellationToken) Gets the next scheduled to air ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Next Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowNextEpisodeAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no scheduled to air episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowNextEpisodeAsync(ITraktShow, TraktExtendedInfo, CancellationToken) Gets the next scheduled to air ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Next Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowNextEpisodeAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no scheduled to air episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowNextEpisodeAsync(ITraktShowIds, TraktExtendedInfo, CancellationToken) Gets the next scheduled to air ITraktEpisode for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Next Episode\" for more information. public Task<TraktResponse<ITraktEpisode>> GetShowNextEpisodeAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the episode should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktEpisode>> An ITraktEpisode instance with the queried episode's data or null, if there is no scheduled to air episode. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowPeopleAsync(string, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetShowPeopleAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowPeopleAsync(uint, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetShowPeopleAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowPeopleAsync(ITraktShow, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetShowPeopleAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowPeopleAsync(ITraktShowIds, TraktExtendedInfo, CancellationToken) Gets all people for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: People\" for more information. public Task<TraktResponse<ITraktShowCastAndCrew>> GetShowPeopleAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the people should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowCastAndCrew>> An ITraktShowCastAndCrew instance, containing the cast and crew for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowRatingsAsync(string, CancellationToken) Gets the ratings for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetShowRatingsAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowRatingsAsync(uint, CancellationToken) Gets the ratings for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetShowRatingsAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowRatingsAsync(ITraktShow, CancellationToken) Gets the ratings for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetShowRatingsAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowRatingsAsync(ITraktShowIds, CancellationToken) Gets the ratings for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Ratings\" for more information. public Task<TraktResponse<ITraktRating>> GetShowRatingsAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktRating>> An ITraktRating instance, containing the ratings for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowRelatedShowsAsync(string, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related shows for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Related\" for more information. public Task<TraktPagedResponse<ITraktShow>> GetShowRelatedShowsAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried related shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktShow. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowRelatedShowsAsync(uint, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related shows for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Related\" for more information. public Task<TraktPagedResponse<ITraktShow>> GetShowRelatedShowsAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried related shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktShow. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowRelatedShowsAsync(ITraktShow, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related shows for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Related\" for more information. public Task<TraktPagedResponse<ITraktShow>> GetShowRelatedShowsAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried related shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktShow. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowRelatedShowsAsync(ITraktShowIds, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets related shows for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Related\" for more information. public Task<TraktPagedResponse<ITraktShow>> GetShowRelatedShowsAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried related shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktShow. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowStatisticsAsync(string, CancellationToken) Gets the statistics for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetShowStatisticsAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowStatisticsAsync(uint, CancellationToken) Gets the statistics for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetShowStatisticsAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowStatisticsAsync(ITraktShow, CancellationToken) Gets the statistics for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetShowStatisticsAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowStatisticsAsync(ITraktShowIds, CancellationToken) Gets the statistics for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Stats\" for more information. public Task<TraktResponse<ITraktStatistics>> GetShowStatisticsAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktStatistics>> An ITraktStatistics instance, containing the statistics for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowStudiosAsync(string, CancellationToken) Gets all studios for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetShowStudiosAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowStudiosAsync(uint, CancellationToken) Gets all studios for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetShowStudiosAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowStudiosAsync(ITraktShow, CancellationToken) Gets all studios for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetShowStudiosAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowStudiosAsync(ITraktShowIds, CancellationToken) Gets all studios for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Studios\" for more information. public Task<TraktListResponse<ITraktStudio>> GetShowStudiosAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktStudio>> A list of ITraktStudio instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowTranslationsAsync(string, string, CancellationToken) Gets all translations for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Translations\" for more information. public Task<TraktListResponse<ITraktShowTranslation>> GetShowTranslationsAsync(string showIdOrSlug, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowTranslation>> A list of ITraktShowTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowTranslationsAsync(uint, string, CancellationToken) Gets all translations for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Translations\" for more information. public Task<TraktListResponse<ITraktShowTranslation>> GetShowTranslationsAsync(uint traktShowID, string languageCode = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowTranslation>> A list of ITraktShowTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowTranslationsAsync(ITraktShow, string, CancellationToken) Gets all translations for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Translations\" for more information. public Task<TraktListResponse<ITraktShowTranslation>> GetShowTranslationsAsync(ITraktShow show, string languageCode = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowTranslation>> A list of ITraktShowTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowTranslationsAsync(ITraktShowIds, string, CancellationToken) Gets all translations for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Translations\" for more information. public Task<TraktListResponse<ITraktShowTranslation>> GetShowTranslationsAsync(ITraktShowIds showIds, string languageCode = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. languageCode string An optional two letter language code to query a specific translation language. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktShowTranslation>> A list of ITraktShowTranslation instances, each containing a title, overview and language code. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowWatchedProgressAsync(string, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Watched Progress\" for more information. public Task<TraktResponse<ITraktShowWatchedProgress>> GetShowWatchedProgressAsync(string showIdOrSlug, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned watched progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned watched progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned watched progress. lastActivity TraktLastActivity Determines the last activity type of the watched progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowWatchedProgress>> An ITraktShowWatchedProgress instance, containing the watched progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowWatchedProgressAsync(uint, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Watched Progress\" for more information. public Task<TraktResponse<ITraktShowWatchedProgress>> GetShowWatchedProgressAsync(uint traktShowID, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned watched progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned watched progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned watched progress. lastActivity TraktLastActivity Determines the last activity type of the watched progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowWatchedProgress>> An ITraktShowWatchedProgress instance, containing the watched progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowWatchedProgressAsync(ITraktShow, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Watched Progress\" for more information. public Task<TraktResponse<ITraktShowWatchedProgress>> GetShowWatchedProgressAsync(ITraktShow show, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. includingHiddenSeasons bool? Determines, if the returned watched progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned watched progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned watched progress. lastActivity TraktLastActivity Determines the last activity type of the watched progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowWatchedProgress>> An ITraktShowWatchedProgress instance, containing the watched progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowWatchedProgressAsync(ITraktShowIds, bool?, bool?, bool?, TraktLastActivity, CancellationToken) Gets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Watched Progress\" for more information. public Task<TraktResponse<ITraktShowWatchedProgress>> GetShowWatchedProgressAsync(ITraktShowIds showIds, bool? includingHiddenSeasons = null, bool? includingSpecialSeasons = null, bool? countSpecialSeasons = null, TraktLastActivity lastActivity = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. includingHiddenSeasons bool? Determines, if the returned watched progress should contain hidden seasons. includingSpecialSeasons bool? Determines, if the returned watched progress should contain special seasons. countSpecialSeasons bool? Determins, if special seasons should be counted in the statistics of the returned watched progress. lastActivity TraktLastActivity Determines the last activity type of the watched progress. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowWatchedProgress>> An ITraktShowWatchedProgress instance, containing the watched progress for a show with the given showIdOrSlug. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowWatchingUsersAsync(string, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetShowWatchingUsersAsync(string showIdOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetShowWatchingUsersAsync(uint, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetShowWatchingUsersAsync(uint traktShowID, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. GetShowWatchingUsersAsync(ITraktShow, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetShowWatchingUsersAsync(ITraktShow show, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. GetShowWatchingUsersAsync(ITraktShowIds, TraktExtendedInfo, CancellationToken) Gets all watching users of a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization not required. See \"Trakt API Doc - Shows: Watching\" for more information. public Task<TraktListResponse<ITraktUser>> GetShowWatchingUsersAsync(ITraktShowIds showIds, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUser>> A list of ITraktUser instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. GetShowsStreamAsync(TraktMultipleObjectsQueryParams, CancellationToken) Gets multiple different ITraktShows at once with the given Trakt-Ids or -Slugs. OAuth authorization not required. See \"Trakt API Doc - Shows: Summary\" for more information. See also GetShowAsync(string, TraktExtendedInfo, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktShow>> GetShowsStreamAsync(TraktMultipleObjectsQueryParams showsQueryParams, CancellationToken cancellationToken = default) Parameters showsQueryParams TraktMultipleObjectsQueryParams A list of show ids and optional extended infos. See also TraktMultipleObjectsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktShow>> An async stream of ITraktShow instances with the data of each queried show. Exceptions TraktException Thrown, if one request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetTrendingShowsAsync(TraktExtendedInfo, ITraktShowFilter, TraktPagedParameters, CancellationToken) Gets trending shows. OAuth authorization not required. See \"Trakt API Doc - Shows: Trending\" for more information. Use the ITraktShowFilterBuilder to create an instance of the optional ITraktShowFilter. See also NewShowFilter(). public Task<TraktPagedResponse<ITraktTrendingShow>> GetTrendingShowsAsync(TraktExtendedInfo extendedInfo = null, ITraktShowFilter filter = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. filter ITraktShowFilter Optional filters for genres, languages, year, runtimes, ratings, etc. See also ITraktShowFilter. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktTrendingShow>> An TraktPagedResponse<TResponseContentType> instance containing the queried trending shows and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktTrendingShow. Exceptions TraktException Thrown, if the request fails. RefreshShowAsync(string, CancellationToken) Queue a ITraktShow for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh show metadata\" for more information. public Task<TraktNoContentResponse> RefreshShowAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. RefreshShowAsync(uint, CancellationToken) Queue a ITraktShow for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh show metadata\" for more information. public Task<TraktNoContentResponse> RefreshShowAsync(uint traktShowId, CancellationToken cancellationToken = default) Parameters traktShowId uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowId is 0. RefreshShowAsync(ITraktShow, CancellationToken) Queue a ITraktShow for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh show metadata\" for more information. public Task<TraktNoContentResponse> RefreshShowAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. RefreshShowAsync(ITraktShowIds, CancellationToken) Queue a ITraktShow for a full metadata and image refresh. OAuth authorization required. See \"Trakt API Doc - Refresh: Refresh show metadata\" for more information. public Task<TraktNoContentResponse> RefreshShowAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. ResetShowWatchedProgressAsync(string, DateTime?, CancellationToken) Resets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktResponse<ITraktShowResetWatchedProgressPost>> ResetShowWatchedProgressAsync(string showIdOrSlug, DateTime? resetAt = null, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. resetAt DateTime? An optional reset_at UTC date to have it calculate progress from that specific date onwards. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowResetWatchedProgressPost>> An ITraktShowResetWatchedProgressPost instance, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ResetShowWatchedProgressAsync(uint, DateTime?, CancellationToken) Resets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktResponse<ITraktShowResetWatchedProgressPost>> ResetShowWatchedProgressAsync(uint traktShowID, DateTime? resetAt = null, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. resetAt DateTime? An optional reset_at UTC date to have it calculate progress from that specific date onwards. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowResetWatchedProgressPost>> An ITraktShowResetWatchedProgressPost instance, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. ResetShowWatchedProgressAsync(ITraktShow, DateTime?, CancellationToken) Resets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktResponse<ITraktShowResetWatchedProgressPost>> ResetShowWatchedProgressAsync(ITraktShow show, DateTime? resetAt = null, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. resetAt DateTime? An optional reset_at UTC date to have it calculate progress from that specific date onwards. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowResetWatchedProgressPost>> An ITraktShowResetWatchedProgressPost instance, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. ResetShowWatchedProgressAsync(ITraktShowIds, DateTime?, CancellationToken) Resets the watched progress for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktResponse<ITraktShowResetWatchedProgressPost>> ResetShowWatchedProgressAsync(ITraktShowIds showIds, DateTime? resetAt = null, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. resetAt DateTime? An optional reset_at UTC date to have it calculate progress from that specific date onwards. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktShowResetWatchedProgressPost>> An ITraktShowResetWatchedProgressPost instance, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set. UndoResetShowWatchedProgressAsync(string, CancellationToken) Undo the reset and have watched progress use all watched history for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. VIP only. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktNoContentResponse> UndoResetShowWatchedProgressAsync(string showIdOrSlug, CancellationToken cancellationToken = default) Parameters showIdOrSlug string The show's Trakt-Id or -Slug. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UndoResetShowWatchedProgressAsync(uint, CancellationToken) Undo the reset and have watched progress use all watched history for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. VIP only. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktNoContentResponse> UndoResetShowWatchedProgressAsync(uint traktShowID, CancellationToken cancellationToken = default) Parameters traktShowID uint The show's Trakt-Id. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktShowID is 0. UndoResetShowWatchedProgressAsync(ITraktShow, CancellationToken) Undo the reset and have watched progress use all watched history for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. VIP only. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktNoContentResponse> UndoResetShowWatchedProgressAsync(ITraktShow show, CancellationToken cancellationToken = default) Parameters show ITraktShow The show. See also ITraktShow. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given show is null. UndoResetShowWatchedProgressAsync(ITraktShowIds, CancellationToken) Undo the reset and have watched progress use all watched history for a ITraktShow with the given Trakt-Id or -Slug. OAuth authorization required. VIP only. See \"Trakt API Doc - Shows: Reset Watched Progress\" for more information. public Task<TraktNoContentResponse> UndoResetShowWatchedProgressAsync(ITraktShowIds showIds, CancellationToken cancellationToken = default) Parameters showIds ITraktShowIds The show's ids. See also ITraktShowIds. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIds has not any ids set."
  },
  "api/TraktNet.Modules.TraktSyncModule.html": {
    "href": "api/TraktNet.Modules.TraktSyncModule.html",
    "title": "Class TraktSyncModule | Trakt.NET",
    "keywords": "Class TraktSyncModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to sync. This module contains all methods of the \"Trakt API Doc - Sync\" section. public class TraktSyncModule : ATraktModule Inheritance object ATraktModule TraktSyncModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCollectionItemsAsync(ITraktSyncCollectionPost, CancellationToken) Adds items to the user's collection. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Add to Collection\" for more information. It is recommended to use the ITraktSyncCollectionPostBuilder to create an instance of the required ITraktSyncCollectionPost. See also NewSyncCollectionPost(). public Task<TraktResponse<ITraktSyncCollectionPostResponse>> AddCollectionItemsAsync(ITraktSyncCollectionPost collectionPost, CancellationToken cancellationToken = default) Parameters collectionPost ITraktSyncCollectionPost An ITraktSyncCollectionPost instance containing all shows, seasons, episodes and movies, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncCollectionPostResponse>> An ITraktSyncCollectionPostResponse instance, which contains information about which items were added, updated, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddFavoriteItemsAsync(ITraktSyncFavoritesPost, CancellationToken) Adds items to the user's favorites. Accepts movies and shows. OAuth authorization required. See \"Trakt API Doc - Sync: Add to Favorites\" for more information. It is recommended to use the ITraktSyncFavoritesPostBuilder to create an instance of the required ITraktSyncFavoritesPost. See also NewSyncFavoritesPost(). public Task<TraktResponse<ITraktSyncFavoritesPostResponse>> AddFavoriteItemsAsync(ITraktSyncFavoritesPost favoritesPost, CancellationToken cancellationToken = default) Parameters favoritesPost ITraktSyncFavoritesPost An ITraktSyncFavoritesPost instance containing all movies and shows, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncFavoritesPostResponse>> An ITraktSyncFavoritesPostResponse instance, which contains information about which items were added and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddRatingsAsync(ITraktSyncRatingsPost, CancellationToken) Adds items to the user's ratings. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Add Ratings\" for more information. It is recommended to use the ITraktSyncRatingsPostBuilder to create an instance of the required ITraktSyncRatingsPost. See also NewSyncRatingsPost(). public Task<TraktResponse<ITraktSyncRatingsPostResponse>> AddRatingsAsync(ITraktSyncRatingsPost ratingsPost, CancellationToken cancellationToken = default) Parameters ratingsPost ITraktSyncRatingsPost An ITraktSyncRatingsPost instance containing all shows, seasons, episodes and movies, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncRatingsPostResponse>> An ITraktSyncRatingsPostResponse instance, which contains information about which items were added and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddWatchedHistoryItemsAsync(ITraktSyncHistoryPost, CancellationToken) Adds items to the user's watch history. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Add to History\" for more information. It is recommended to use the ITraktSyncHistoryPostBuilder to create an instance of the required ITraktSyncHistoryPost. See also NewSyncHistoryPost(). public Task<TraktResponse<ITraktSyncHistoryPostResponse>> AddWatchedHistoryItemsAsync(ITraktSyncHistoryPost historyPost, CancellationToken cancellationToken = default) Parameters historyPost ITraktSyncHistoryPost An ITraktSyncHistoryPost instance containing all shows, seasons, episodes and movies, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncHistoryPostResponse>> An ITraktSyncHistoryPostResponse instance, which contains information about which items were added and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddWatchlistItemsAsync(ITraktSyncWatchlistPost, CancellationToken) Adds items to the user's watchlist. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Add to Watchlist\" for more information. It is recommended to use the ITraktSyncWatchlistPostBuilder to create an instance of the required ITraktSyncWatchlistPost. See also NewSyncWatchlistPost(). public Task<TraktResponse<ITraktSyncWatchlistPostResponse>> AddWatchlistItemsAsync(ITraktSyncWatchlistPost watchlistPost, CancellationToken cancellationToken = default) Parameters watchlistPost ITraktSyncWatchlistPost An ITraktSyncWatchlistPost instance containing all shows, seasons, episodes and movies, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncWatchlistPostResponse>> An ITraktSyncWatchlistPostResponse instance, which contains information about which items were added, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCollectionMoviesAsync(TraktExtendedInfo, CancellationToken) Gets all collected movies in the user's collection. OAuth authorization required. See \"Trakt API Doc - Sync: Get Collection\" for more information. public Task<TraktListResponse<ITraktCollectionMovie>> GetCollectionMoviesAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the collected movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCollectionMovie>> A list of ITraktCollectionMovie instances. Exceptions TraktException Thrown, if the request fails. GetCollectionShowsAsync(TraktExtendedInfo, CancellationToken) Gets all collected shows in the user's collection. OAuth authorization required. See \"Trakt API Doc - Sync: Get Collection\" for more information. public Task<TraktListResponse<ITraktCollectionShow>> GetCollectionShowsAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the collected shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCollectionShow>> A list of ITraktCollectionShow instances. Exceptions TraktException Thrown, if the request fails. GetFavoritesAsync(TraktFavoriteObjectType, TraktWatchlistSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets an user's favorite movies and / or shows. OAuth authorization required. See \"Trakt API Doc - Sync: Get Favorites\" for more information. public Task<TraktPagedResponse<ITraktFavorite>> GetFavoritesAsync(TraktFavoriteObjectType favoriteObjectType = null, TraktWatchlistSortOrder sortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters favoriteObjectType TraktFavoriteObjectType Determines, which type of favorite items should be queried. See also TraktFavoriteObjectType. sortOrder TraktWatchlistSortOrder The favorites sort order. See also TraktWatchlistSortOrder. Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers. Will be ignored, if the given favoriteObjectType is null or unspecified. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the favorite items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktFavorite>> A list of ITraktFavorite instances. Exceptions TraktException Thrown, if the request fails. GetLastActivitiesAsync(CancellationToken) Gets the user's last activities. OAuth authorization required. See \"Trakt API Doc - Sync: Last Activities\" for more information. public Task<TraktResponse<ITraktSyncLastActivities>> GetLastActivitiesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncLastActivities>> An ITraktSyncLastActivities instance with the queried last activities. Exceptions TraktException Thrown, if the request fails. GetPlaybackProgressAsync(TraktSyncType, DateTime?, DateTime?, TraktPagedParameters, CancellationToken) Gets the user's saved playback progress of scrobbles that are paused. OAuth authorization required. See \"Trakt API Doc - Sync: Playback\" for more information. public Task<TraktPagedResponse<ITraktSyncPlaybackProgressItem>> GetPlaybackProgressAsync(TraktSyncType objectType = null, DateTime? startAt = null, DateTime? endAt = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters objectType TraktSyncType Determines, which type of items should be queried. By default, all types will be returned. See also TraktSyncType. startAt DateTime? Determines an optional start date and time for a range of the returned playback progress. endAt DateTime? Determines an optional end date and time for a range of the returned playback progress. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktSyncPlaybackProgressItem>> A list of ITraktSyncPlaybackProgressItem instances. Exceptions TraktException Thrown, if the request fails. GetRatingsAsync(TraktRatingsItemType, int[], TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the user's ratings for movies, shows, seasons and / or episodes. OAuth authorization required. See \"Trakt API Doc - Sync: Get Ratings\" for more information. public Task<TraktPagedResponse<ITraktRatingsItem>> GetRatingsAsync(TraktRatingsItemType ratingsItemType = null, int[] ratingsFilter = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters ratingsItemType TraktRatingsItemType Determines, which type of rating items should be queried. See also TraktRatingsItemType. ratingsFilter int[] An array of numbers. Numbers should be between 1 and 10. Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers. Will be ignored, if the given ratingsItemType is null or unspecified. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the rating items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRatingsItem>> A list of ITraktRatingsItem instances. Exceptions TraktException Thrown, if the request fails. GetWatchedHistoryAsync(TraktSyncItemType, uint?, DateTime?, DateTime?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all movies, shows, seasons and / or episodes the user has watched, sorted by most recent. OAuth authorization required. See \"Trakt API Doc - Sync: Get History\" for more information. public Task<TraktPagedResponse<ITraktHistoryItem>> GetWatchedHistoryAsync(TraktSyncItemType historyItemType = null, uint? itemId = null, DateTime? startAt = null, DateTime? endAt = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters historyItemType TraktSyncItemType Determines, which type of history items should be queried. See also TraktSyncItemType. itemId uint? The Trakt Id for the item, which should be specifically queried. Will be ignored, if historyItemType is not set or unspecified. startAt DateTime? The datetime, after which history items should be queried. Will be converted to the Trakt UTC-datetime and -format. endAt DateTime? The datetime, until which history items should be queried. Will be converted to the Trakt UTC-datetime and -format. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the history items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktHistoryItem>> An TraktPagedResponse<TResponseContentType> instance containing the queried history items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktHistoryItem. Exceptions TraktException Thrown, if the request fails. GetWatchedMoviesAsync(TraktExtendedInfo, CancellationToken) Gets all movies the user has watched, sorted by most plays. OAuth authorization required. See \"Trakt API Doc - Sync: Get Watched\" for more information. public Task<TraktListResponse<ITraktWatchedMovie>> GetWatchedMoviesAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktWatchedMovie>> A list of ITraktWatchedMovie instances. Exceptions TraktException Thrown, if the request fails. GetWatchedShowsAsync(TraktExtendedInfo, CancellationToken) Gets all shows the user has watched, sorted by most plays. OAuth authorization required. See \"Trakt API Doc - Sync: Get Watched\" for more information. public Task<TraktListResponse<ITraktWatchedShow>> GetWatchedShowsAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktWatchedShow>> A list of ITraktWatchedShow instances. Exceptions TraktException Thrown, if the request fails. GetWatchlistAsync(TraktSyncItemType, TraktWatchlistSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the user's watchlist containing movies, shows, seasons and / or episodes. OAuth authorization required. See \"Trakt API Doc - Sync: Get Watchlist\" for more information. public Task<TraktPagedResponse<ITraktWatchlistItem>> GetWatchlistAsync(TraktSyncItemType watchlistItemType = null, TraktWatchlistSortOrder sortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters watchlistItemType TraktSyncItemType Determines, which type of watchlist items should be queried. See also TraktSyncItemType. sortOrder TraktWatchlistSortOrder Determines the sort order of the returned watchlist items. See also TraktWatchlistSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the watchlist items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktWatchlistItem>> An TraktPagedResponse<TResponseContentType> instance containing the queried watchlist items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktWatchlistItem. Exceptions TraktException Thrown, if the request fails. RemoveCollectionItemsAsync(ITraktSyncCollectionRemovePost, CancellationToken) Removes items from the user's collection. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Remove from Collection\" for more information. It is recommended to use the ITraktSyncCollectionRemovePostBuilder to create an instance of the required ITraktSyncCollectionRemovePost. See also NewSyncCollectionRemovePost(). public Task<TraktResponse<ITraktSyncCollectionRemovePostResponse>> RemoveCollectionItemsAsync(ITraktSyncCollectionRemovePost collectionRemovePost, CancellationToken cancellationToken = default) Parameters collectionRemovePost ITraktSyncCollectionRemovePost An ITraktSyncCollectionRemovePost instance containing all shows, seasons, episodes and movies, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncCollectionRemovePostResponse>> An ITraktSyncCollectionRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemoveFavoriteItemsAsync(ITraktSyncFavoritesRemovePost, CancellationToken) Remove items from the user's favorites. Accepts movies and shows. OAuth authorization required. See \"Trakt API Doc - Sync: Remove from Favorites\" for more information. It is recommended to use the ITraktSyncFavoritesRemovePostBuilder to create an instance of the required ITraktSyncFavoritesRemovePost. See also NewSyncFavoritesRemovePost(). public Task<TraktResponse<ITraktSyncFavoritesRemovePostResponse>> RemoveFavoriteItemsAsync(ITraktSyncFavoritesRemovePost favoritesRemovePost, CancellationToken cancellationToken = default) Parameters favoritesRemovePost ITraktSyncFavoritesRemovePost An ITraktSyncFavoritesRemovePost instance containing all movies and shows, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncFavoritesRemovePostResponse>> An ITraktSyncFavoritesRemovePostResponse instance, which contains information about which items were removed and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemovePlaybackItemAsync(uint, CancellationToken) Removes a playback progress item from the user's playback progress list. OAuth authorization required. See \"Trakt API Doc - Sync: Remove Playback\" for more information. public Task<TraktNoContentResponse> RemovePlaybackItemAsync(uint playbackId, CancellationToken cancellationToken = default) Parameters playbackId uint The id of the playback progress item, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. RemoveRatingsAsync(ITraktSyncRatingsRemovePost, CancellationToken) Removes items from the user's ratings. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Remove Ratings\" for more information. It is recommended to use the ITraktSyncRatingsRemovePostBuilder to create an instance of the required ITraktSyncRatingsRemovePost. See also NewSyncRatingsRemovePost(). public Task<TraktResponse<ITraktSyncRatingsRemovePostResponse>> RemoveRatingsAsync(ITraktSyncRatingsRemovePost ratingsRemovePost, CancellationToken cancellationToken = default) Parameters ratingsRemovePost ITraktSyncRatingsRemovePost An ITraktSyncRatingsRemovePost instance containing all shows, seasons, episodes and movies, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncRatingsRemovePostResponse>> An ITraktSyncRatingsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemoveWatchedHistoryItemsAsync(ITraktSyncHistoryRemovePost, CancellationToken) Removes items from the user's watch history. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Remove from History\" for more information. It is recommended to use the ITraktSyncHistoryRemovePostBuilder to create an instance of the required ITraktSyncHistoryRemovePost. See also NewSyncHistoryRemovePost(). public Task<TraktResponse<ITraktSyncHistoryRemovePostResponse>> RemoveWatchedHistoryItemsAsync(ITraktSyncHistoryRemovePost historyRemovePost, CancellationToken cancellationToken = default) Parameters historyRemovePost ITraktSyncHistoryRemovePost An ITraktSyncHistoryRemovePost instance containing all shows, seasons, episodes and movies, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncHistoryRemovePostResponse>> An ITraktSyncHistoryRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemoveWatchlistItemsAsync(ITraktSyncWatchlistRemovePost, CancellationToken) Removes items from the user's watchlist. Accepts shows, seasons, episodes and movies. OAuth authorization required. See \"Trakt API Doc - Sync: Remove from Watchlist\" for more information. It is recommended to use the ITraktSyncWatchlistRemovePostBuilder to create an instance of the required ITraktSyncWatchlistRemovePost. See also NewSyncWatchlistRemovePost(). public Task<TraktResponse<ITraktSyncWatchlistRemovePostResponse>> RemoveWatchlistItemsAsync(ITraktSyncWatchlistRemovePost watchlistRemovePost, CancellationToken cancellationToken = default) Parameters watchlistRemovePost ITraktSyncWatchlistRemovePost An ITraktSyncWatchlistRemovePost instance containing all shows, seasons, episodes and movies, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktSyncWatchlistRemovePostResponse>> An ITraktSyncWatchlistRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ReorderFavoritedItemsAsync(IList<uint>, CancellationToken) Reorder all user's favorites. OAuth authorization required. See \"Trakt API Doc - Sync: Reorder Favorites\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderFavoritedItemsAsync(IList<uint> reorderedFavoritedItemRanks, CancellationToken cancellationToken = default) Parameters reorderedFavoritedItemRanks IList<uint> A collection of list ids. Represents the new order of an user's favorites. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated favorites order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ReorderWatchlistItemsAsync(IList<uint>, CancellationToken) Reorders an user's watchlist. OAuth authorization required. See \"Trakt API Doc - Sync: Reorder Watchlist\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderWatchlistItemsAsync(IList<uint> reorderedWatchlistItemRanks, CancellationToken cancellationToken = default) Parameters reorderedWatchlistItemRanks IList<uint> A collection of list ids. Represents the new order of an user's watchlist. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated watchlist order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateFavoriteItemAsync(uint, string, CancellationToken) Update the notes on a single favorite item. OAuth authorization required. See \"Trakt API Doc - Sync: Update Favorite Item\" for more information. public Task<TraktNoContentResponse> UpdateFavoriteItemAsync(uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters listItemId uint The id of the favorite item which should be updated. notes string The new favorite item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateFavoritesAsync(string, TraktSortBy, TraktSortHow, CancellationToken) Update the favorites list by sending 1 or more parameters. OAuth authorization required. See \"Trakt API Doc - Sync: Update Favorites\" for more information. public Task<TraktResponse<ITraktList>> UpdateFavoritesAsync(string description, TraktSortBy sortBy = null, TraktSortHow sortHow = null, CancellationToken cancellationToken = default) Parameters description string Description for the favorites list. sortBy TraktSortBy Sort by value for the favorites list. sortHow TraktSortHow Sort how value for the favorites list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance, which contains information about the updated favorites list Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateWatchlistAsync(string, TraktSortBy, TraktSortHow, CancellationToken) Update the watchlist by sending 1 or more parameters. OAuth authorization required. See \"Trakt API Doc - Sync: Update Watchlist\" for more information. public Task<TraktResponse<ITraktList>> UpdateWatchlistAsync(string description, TraktSortBy sortBy = null, TraktSortHow sortHow = null, CancellationToken cancellationToken = default) Parameters description string Description for the watchlist. sortBy TraktSortBy Sort by value for the watchlist. sortHow TraktSortHow Sort how value for the watchlist. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance, which contains information about the updated watchlist Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdateWatchlistItemAsync(uint, string, CancellationToken) Update the notes on a watchlist item. OAuth authorization required. See \"Trakt API Doc - Sync: Update Watchlist Item\" for more information. public Task<TraktNoContentResponse> UpdateWatchlistItemAsync(uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters listItemId uint The id of the watchlist item which should be updated. notes string The new watchlist item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails."
  },
  "api/TraktNet.Modules.TraktUsersModule.html": {
    "href": "api/TraktNet.Modules.TraktUsersModule.html",
    "title": "Class TraktUsersModule | Trakt.NET",
    "keywords": "Class TraktUsersModule Namespace TraktNet.Modules Assembly Trakt.NET.dll Provides access to data retrieving methods specific to users. This module contains all methods of the \"Trakt API Doc - Users\" section. public class TraktUsersModule : ATraktModule Inheritance object ATraktModule TraktUsersModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddHiddenItemsAsync(ITraktUserHiddenItemsPost, TraktHiddenItemsSection, CancellationToken) Adds items to an user's hidden list. Accepts shows, seasons and movies. OAuth authorization required. See \"Trakt API Doc - Users: Add Hidden Items\" for more information. It is recommended to use the ITraktUserHiddenItemsPostBuilder to create an instance of the required ITraktUserHiddenItemsPost. See also NewUserHiddenItemsPost(). public Task<TraktResponse<ITraktUserHiddenItemsPostResponse>> AddHiddenItemsAsync(ITraktUserHiddenItemsPost hiddenItemsPost, TraktHiddenItemsSection hiddenItemsSection, CancellationToken cancellationToken = default) Parameters hiddenItemsPost ITraktUserHiddenItemsPost An ITraktUserHiddenItemsPost instance containing all shows, seasons and movies, which should be added. hiddenItemsSection TraktHiddenItemsSection Determines, which type of hidden items section should be queried. TraktHiddenItemsSection cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserHiddenItemsPostResponse>> An ITraktUserHiddenItemsPostResponse instance, which contains information about which items were added and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddPersonalListItemsAsync(string, string, ITraktUserPersonalListItemsPost, CancellationToken) Adds items to an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsPostBuilder to create an instance of the required ITraktUserPersonalListItemsPost. See also NewUserPersonalListItemsPost(). public Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> AddPersonalListItemsAsync(string usernameOrSlug, string listIdOrSlug, ITraktUserPersonalListItemsPost listItemsPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be added to a personal list. listIdOrSlug string The id or slug of the personal list, to which items should be added. listItemsPost ITraktUserPersonalListItemsPost An ITraktUserPersonalListItemsPost instance containing all shows, seasons, episodes, movies and people, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> An ITraktUserPersonalListItemsPostResponse instance, which contains information about which items were added, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. AddPersonalListItemsAsync(string, uint, ITraktUserPersonalListItemsPost, CancellationToken) Adds items to an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsPostBuilder to create an instance of the required ITraktUserPersonalListItemsPost. See also NewUserPersonalListItemsPost(). public Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> AddPersonalListItemsAsync(string usernameOrSlug, uint traktListId, ITraktUserPersonalListItemsPost listItemsPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be added to a personal list. traktListId uint The Trakt-ID of the personal list, to which items should be added. listItemsPost ITraktUserPersonalListItemsPost An ITraktUserPersonalListItemsPost instance containing all shows, seasons, episodes, movies and people, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> An ITraktUserPersonalListItemsPostResponse instance, which contains information about which items were added, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. AddPersonalListItemsAsync(string, ITraktList, ITraktUserPersonalListItemsPost, CancellationToken) Adds items to an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsPostBuilder to create an instance of the required ITraktUserPersonalListItemsPost. See also NewUserPersonalListItemsPost(). public Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> AddPersonalListItemsAsync(string usernameOrSlug, ITraktList list, ITraktUserPersonalListItemsPost listItemsPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be added to a personal list. list ITraktList The personal list, to which items should be added. listItemsPost ITraktUserPersonalListItemsPost An ITraktUserPersonalListItemsPost instance containing all shows, seasons, episodes, movies and people, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> An ITraktUserPersonalListItemsPostResponse instance, which contains information about which items were added, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. AddPersonalListItemsAsync(string, ITraktListIds, ITraktUserPersonalListItemsPost, CancellationToken) Adds items to an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsPostBuilder to create an instance of the required ITraktUserPersonalListItemsPost. See also NewUserPersonalListItemsPost(). public Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> AddPersonalListItemsAsync(string usernameOrSlug, ITraktListIds listIds, ITraktUserPersonalListItemsPost listItemsPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be added to a personal list. listIds ITraktListIds The ids of the personal list, to which items should be added. listItemsPost ITraktUserPersonalListItemsPost An ITraktUserPersonalListItemsPost instance containing all shows, seasons, episodes, movies and people, which should be added. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsPostResponse>> An ITraktUserPersonalListItemsPostResponse instance, which contains information about which items were added, existing and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. ApproveFollowRequestAsync(uint, CancellationToken) Approves a follower request with the given id. OAuth authorization required. See \"Trakt API Doc - Users: Approve or Deny Follower Requests\" for more information. public Task<TraktResponse<ITraktUserFollower>> ApproveFollowRequestAsync(uint followerRequestId, CancellationToken cancellationToken = default) Parameters followerRequestId uint The id of the follower request, which should be approved. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserFollower>> An ITraktUserFollower instance containing information about the approved user. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. CreatePersonalListAsync(string, ITraktUserPersonalListPost, CancellationToken) Creates a new personal list. OAuth authorization required. See \"Trakt API Doc - Users: Lists\" for more information. public Task<TraktResponse<ITraktList>> CreatePersonalListAsync(string usernameOrSlug, ITraktUserPersonalListPost personalListPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be created. personalListPost ITraktUserPersonalListPost An ITraktUserPersonalListPost instance containing the data about the to be created list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance containing information about the successfully created personal list. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. DeletePersonalListAsync(string, string, CancellationToken) Deletes an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktNoContentResponse> DeletePersonalListAsync(string usernameOrSlug, string listIdOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be deleted. listIdOrSlug string The id or slug of the list, which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. DeletePersonalListAsync(string, uint, CancellationToken) Deletes an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktNoContentResponse> DeletePersonalListAsync(string usernameOrSlug, uint traktListId, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be deleted. traktListId uint The Trakt-ID of the list, which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. DeletePersonalListAsync(string, ITraktList, CancellationToken) Deletes an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktNoContentResponse> DeletePersonalListAsync(string usernameOrSlug, ITraktList list, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be deleted. list ITraktList The list, which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. DeletePersonalListAsync(string, ITraktListIds, CancellationToken) Deletes an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktNoContentResponse> DeletePersonalListAsync(string usernameOrSlug, ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be deleted. listIds ITraktListIds The ids of the list, which should be deleted. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. DenyFollowRequestAsync(uint, CancellationToken) Denies a follower request with the given id. OAuth authorization required. See \"Trakt API Doc - Users: Approve or Deny Follower Requests\" for more information. public Task<TraktNoContentResponse> DenyFollowRequestAsync(uint followerRequestId, CancellationToken cancellationToken = default) Parameters followerRequestId uint The id of the follower request, which should be denied. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. FollowUserAsync(string, CancellationToken) Sends a follow request for an user with the given username. OAuth authorization required. See \"Trakt API Doc - Users: Follow\" for more information. public Task<TraktResponse<ITraktUserFollowUserPostResponse>> FollowUserAsync(string usernameOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, which should be followed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserFollowUserPostResponse>> An ITraktUserFollowUserPostResponse instance containing information whether the request was successful. See ApprovedAt. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCollectionMoviesAsync(string, TraktExtendedInfo, CancellationToken) Gets all collected movies in an user's collection. OAuth authorization optional. See \"Trakt API Doc - Users: Collection\" for more information. public Task<TraktListResponse<ITraktCollectionMovie>> GetCollectionMoviesAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the collected movies should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the collected movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCollectionMovie>> A list of ITraktCollectionMovie instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCollectionShowsAsync(string, TraktExtendedInfo, CancellationToken) Gets all collected shows in an user's collection. OAuth authorization optional. See \"Trakt API Doc - Users: Collection\" for more information. public Task<TraktListResponse<ITraktCollectionShow>> GetCollectionShowsAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the collected shows should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the collected shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktCollectionShow>> A list of ITraktCollectionShow instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetCommentsAsync(string, TraktCommentType, TraktObjectType, TraktIncludeReplies?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all comments an user has posted, sorted by most recent. OAuth authorization optional. See \"Trakt API Doc - Users: Comments\" for more information. public Task<TraktPagedResponse<ITraktUserComment>> GetCommentsAsync(string usernameOrSlug, TraktCommentType commentType = null, TraktObjectType objectType = null, TraktIncludeReplies? includeReplies = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the comments should be queried. commentType TraktCommentType Determines, which type of comments should be queried. See also TraktCommentType. objectType TraktObjectType Determines, for which object types comments should be queried. See also TraktObjectType. includeReplies TraktIncludeReplies? Determines, whether replies should be retrieved alongside with comments. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the commented objects should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetFavoritesAsync(string, TraktFavoriteObjectType, TraktWatchlistSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets an user's favorite movies and / or shows. OAuth authorization required. See \"Trakt API Doc - Users: Favorites\" for more information. public Task<TraktPagedResponse<ITraktFavorite>> GetFavoritesAsync(string usernameOrSlug, TraktFavoriteObjectType favoriteObjectType = null, TraktWatchlistSortOrder sortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the favorites should be queried. favoriteObjectType TraktFavoriteObjectType Determines, which type of favorites items should be queried. See also TraktFavoriteObjectType. sortOrder TraktWatchlistSortOrder The favorites sort order. See also TraktWatchlistSortOrder. Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers. Will be ignored, if the given favoriteObjectType is null or unspecified. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the favorited items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktFavorite>> A list of ITraktFavorite instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetFavoritesCommentsAsync(string, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Returns all top level comments for the favorites. OAuth authorization optional. See \"Trakt API Doc - Users: Favorites Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetFavoritesCommentsAsync(string usernameOrSlug, TraktCommentSortOrder sortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the favorites comments should be queried. sortOrder TraktCommentSortOrder Determines the sort order of the returned favorites comments. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried favorites comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetFollowRequestsAsync(TraktExtendedInfo, CancellationToken) Gets the user's pending follow requests. OAuth authorization required. See \"Trakt API Doc - Users: Follower Requests\" for more information. public Task<TraktListResponse<ITraktUserFollowRequest>> GetFollowRequestsAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the follow request users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUserFollowRequest>> A list of ITraktUserFollowRequest instances. Exceptions TraktException Thrown, if the request fails. GetFollowersAsync(string, TraktExtendedInfo, CancellationToken) Gets an user's followers. OAuth authorization optional. See \"Trakt API Doc - Users: Followers\" for more information. public Task<TraktListResponse<ITraktUserFollower>> GetFollowersAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the followers should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the follower users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUserFollower>> A list of ITraktUserFollower instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetFollowingAsync(string, TraktExtendedInfo, CancellationToken) Gets users an user is following. OAuth authorization optional. See \"Trakt API Doc - Users: Following\" for more information. public Task<TraktListResponse<ITraktUserFollower>> GetFollowingAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the following users should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the following users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUserFollower>> A list of ITraktUserFollower instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetFriendsAsync(string, TraktExtendedInfo, CancellationToken) Gets an user's friends. OAuth authorization optional. See \"Trakt API Doc - Users: Friends\" for more information. public Task<TraktListResponse<ITraktUserFriend>> GetFriendsAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the friends should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the friend users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUserFriend>> A list of ITraktUserFriend instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetHiddenItemsAsync(TraktHiddenItemsSection, TraktHiddenItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the user's hidden items, like movies, shows and / or seasons. OAuth authorization required. See \"Trakt API Doc - Users: Hidden Items\" for more information. public Task<TraktPagedResponse<ITraktUserHiddenItem>> GetHiddenItemsAsync(TraktHiddenItemsSection hiddenItemsSection, TraktHiddenItemType hiddenItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters hiddenItemsSection TraktHiddenItemsSection Determines, from which section the hidden items should be queried. See also TraktHiddenItemsSection. hiddenItemType TraktHiddenItemType Determines, which type of hidden items should be queried. See also TraktHiddenItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the hidden items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserHiddenItem>> An TraktPagedResponse<TResponseContentType> instance containing the queried hidden items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserHiddenItem. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetLikesAsync(string, TraktUserLikeType, TraktPagedParameters, CancellationToken) Gets the items (movies, shows, seasons, episodes, persons, comments, lists) the user likes. OAuth authorization optional. See \"Trakt API Doc - Users: Likes\" for more information. public Task<TraktPagedResponse<ITraktUserLikeItem>> GetLikesAsync(string usernameOrSlug, TraktUserLikeType likeType = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the likes should be queried. likeType TraktUserLikeType Determines, which type of objects liked should be queried. See also TraktUserLikeType. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserLikeItem>> An TraktPagedResponse<TResponseContentType> instance containing the queried like items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserLikeItem. Exceptions TraktException Thrown, if the request fails. GetListCollaborationsAsync(string, CancellationToken) Gets all lists a user can collaborate on. OAuth authorization optional. See \"Trakt API Doc - Users: Collaborations\" for more information. public Task<TraktListResponse<ITraktList>> GetListCollaborationsAsync(string usernameOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which lists on which the user can collaborate on should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktList>> A list of ITraktList instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListCommentsAsync(string, string, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Gets top level comments for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(string usernameOrSlug, string listIdOrSlug, TraktCommentSortOrder commentSortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list comments should be queried. listIdOrSlug string The id or slug of the list, for which the comments should be queried. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListCommentsAsync(string, uint, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Gets top level comments for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(string usernameOrSlug, uint traktListId, TraktCommentSortOrder commentSortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list comments should be queried. traktListId uint The Trakt-ID of the list, for which the comments should be queried. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListCommentsAsync(string, ITraktList, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Gets top level comments for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(string usernameOrSlug, ITraktList list, TraktCommentSortOrder commentSortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list comments should be queried. list ITraktList The list, for which the comments should be queried. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetListCommentsAsync(string, ITraktListIds, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Gets top level comments for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetListCommentsAsync(string usernameOrSlug, ITraktListIds listIds, TraktCommentSortOrder commentSortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list comments should be queried. listIds ITraktListIds The ids of the list, for which the comments should be queried. commentSortOrder TraktCommentSortOrder The comments sort order. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried list comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetListLikesAsync(string, string, TraktPagedParameters, CancellationToken) Gets all likes for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(string usernameOrSlug, string listIdOrSlug, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list likes should be queried. listIdOrSlug string The id or slug of the list, for which the likes should be queried. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> An TraktPagedResponse<TResponseContentType> instance containing the queried list likes and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktListLike. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetListLikesAsync(string, uint, TraktPagedParameters, CancellationToken) Gets all likes for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(string usernameOrSlug, uint traktListId, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list likes should be queried. traktListId uint The Trakt-ID of the list, for which the likes should be queried. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> An TraktPagedResponse<TResponseContentType> instance containing the queried list likes and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktListLike. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetListLikesAsync(string, ITraktList, TraktPagedParameters, CancellationToken) Gets all likes for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(string usernameOrSlug, ITraktList list, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list likes should be queried. list ITraktList The list, for which the likes should be queried. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> An TraktPagedResponse<TResponseContentType> instance containing the queried list likes and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktListLike. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetListLikesAsync(string, ITraktListIds, TraktPagedParameters, CancellationToken) Gets all likes for an user's list. OAuth authorization optional. See \"Trakt API Doc - Users: List Likes\" for more information. public Task<TraktPagedResponse<ITraktListLike>> GetListLikesAsync(string usernameOrSlug, ITraktListIds listIds, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list likes should be queried. listIds ITraktListIds The ids of the list, for which the likes should be queried. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListLike>> An TraktPagedResponse<TResponseContentType> instance containing the queried list likes and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktListLike. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetMultiplePersonalListsAsync(TraktMultipleUserListsQueryParams, CancellationToken) Gets multiple different personal lists for multiple different users at once. OAuth authorization optional. See \"Trakt API Doc - Users: List\" for more information. See also GetPersonalListAsync(string, string, CancellationToken). [Obsolete(\"GetMultiplePersonalListsAsync is deprecated, please use GetPersonalListsStreamAsync instead.\")] public Task<IEnumerable<TraktResponse<ITraktList>>> GetMultiplePersonalListsAsync(TraktMultipleUserListsQueryParams userListsQueryParams, CancellationToken cancellationToken = default) Parameters userListsQueryParams TraktMultipleUserListsQueryParams A list of usernames and list ids. See also TraktMultipleUserListsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IEnumerable<TraktResponse<ITraktList>>> A list of ITraktList instances with the data of each queried personal list. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPendingFollowingRequestsAsync(TraktExtendedInfo, CancellationToken) Gets the user's pending following requests. OAuth authorization required. See \"Trakt API Doc - Users: Following Requests\" for more information. public Task<TraktListResponse<ITraktUserFollowRequest>> GetPendingFollowingRequestsAsync(TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters extendedInfo TraktExtendedInfo The extended info, which determines how much data about the following request users should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktUserFollowRequest>> A list of ITraktUserFollowRequest instances. Exceptions TraktException Thrown, if the request fails. GetPersonalListAsync(string, string, CancellationToken) Gets an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List\" for more information. See also GetMultiplePersonalListsAsync(TraktMultipleUserListsQueryParams, CancellationToken). public Task<TraktResponse<ITraktList>> GetPersonalListAsync(string usernameOrSlug, string listIdOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be queried. listIdOrSlug string The id or slug of the personal list, which should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> Anv ITraktList instance containing the personal list informations. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonalListAsync(string, uint, CancellationToken) Gets an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List\" for more information. See also GetMultiplePersonalListsAsync(TraktMultipleUserListsQueryParams, CancellationToken). public Task<TraktResponse<ITraktList>> GetPersonalListAsync(string usernameOrSlug, uint traktListId, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be queried. traktListId uint The Trakt-ID of the personal list, which should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> Anv ITraktList instance containing the personal list informations. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetPersonalListAsync(string, ITraktListIds, CancellationToken) Gets an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List\" for more information. See also GetMultiplePersonalListsAsync(TraktMultipleUserListsQueryParams, CancellationToken). public Task<TraktResponse<ITraktList>> GetPersonalListAsync(string usernameOrSlug, ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be queried. listIds ITraktListIds The ids of the personal list, which should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> Anv ITraktList instance containing the personal list informations. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetPersonalListItemsAsync(string, string, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetPersonalListItemsAsync(string usernameOrSlug, string listIdOrSlug, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be queried. listIdOrSlug string The id or slug of the personal list, for which the items should be queried. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonalListItemsAsync(string, uint, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetPersonalListItemsAsync(string usernameOrSlug, uint traktListId, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be queried. traktListId uint The Trakt-ID of the personal list, for which the items should be queried. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. GetPersonalListItemsAsync(string, ITraktList, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetPersonalListItemsAsync(string usernameOrSlug, ITraktList list, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be queried. list ITraktList The personal list, for which the items should be queried. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. GetPersonalListItemsAsync(string, ITraktListIds, TraktListItemType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the items on an user's single personal list. OAuth authorization optional. See \"Trakt API Doc - Users: List Items\" for more information. public Task<TraktPagedResponse<ITraktListItem>> GetPersonalListItemsAsync(string usernameOrSlug, ITraktListIds listIds, TraktListItemType listItemType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be queried. listIds ITraktListIds The ids of the personal list, for which the items should be queried. listItemType TraktListItemType Determines, which type of list items should be queried. See also TraktListItemType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the list items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktListItem>> A list of ITraktListItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. GetPersonalListsAsync(string, CancellationToken) Gets an user's personal lists. OAuth authorization optional. See \"Trakt API Doc - Users: Lists\" for more information. public Task<TraktListResponse<ITraktList>> GetPersonalListsAsync(string usernameOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal lists should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktList>> A list of ITraktList instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetPersonalListsStreamAsync(TraktMultipleUserListsQueryParams, CancellationToken) Gets multiple different personal lists for multiple different users at once. OAuth authorization optional. See \"Trakt API Doc - Users: List\" for more information. See also GetPersonalListAsync(string, string, CancellationToken). public IAsyncEnumerable<TraktResponse<ITraktList>> GetPersonalListsStreamAsync(TraktMultipleUserListsQueryParams userListsQueryParams, CancellationToken cancellationToken = default) Parameters userListsQueryParams TraktMultipleUserListsQueryParams A list of usernames and list ids. See also TraktMultipleUserListsQueryParams. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns IAsyncEnumerable<TraktResponse<ITraktList>> An async stream of ITraktList instances with the data of each queried personal list. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetRatingsAsync(string, TraktRatingsItemType, int[], TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets an user's ratings for movies, shows, seasons and / or episodes. OAuth authorization optional. See \"Trakt API Doc - Users: Ratings\" for more information. public Task<TraktPagedResponse<ITraktRatingsItem>> GetRatingsAsync(string usernameOrSlug, TraktRatingsItemType ratingsItemType = null, int[] ratingsFilter = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the ratings should be queried. ratingsItemType TraktRatingsItemType Determines, which type of rating items should be queried. See also TraktRatingsItemType. ratingsFilter int[] An array of numbers. Numbers should be between 1 and 10. Will be ignored, if the given array contains a number higher than 10 or below 1 or if it contains more than ten numbers. Will be ignored, if the given ratingsItemType is null or unspecified. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the rating items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktRatingsItem>> A list of ITraktRatingsItem instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetSavedFiltersAsync(TraktFilterSection, TraktPagedParameters, CancellationToken) Gets the saved filters a user has created. OAuth authorization required. VIP Only. See \"Trakt API Doc - Users: Saved Filters\" for more information. public Task<TraktPagedResponse<ITraktUserSavedFilter>> GetSavedFiltersAsync(TraktFilterSection section = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters section TraktFilterSection Determines, from which section the saved filters should be queried. See also TraktFilterSection. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktUserSavedFilter>> An TraktPagedResponse<TResponseContentType> instance containing the queried saved filters and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktUserSavedFilter. Exceptions TraktException Thrown, if the request fails. GetSettingsAsync(CancellationToken) Gets the user's settings. OAuth authorization required. See \"Trakt API Doc - Users: Settings\" for more information. public Task<TraktResponse<ITraktUserSettings>> GetSettingsAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserSettings>> An ITraktUserSettings instance containing the user's settings. Exceptions TraktException Thrown, if the request fails. GetStatisticsAsync(string, CancellationToken) Gets statistics about the movies, shows and episodes an user has watched. OAuth authorization optional. See \"Trakt API Doc - Users: Stats\" for more information. public Task<TraktResponse<ITraktUserStatistics>> GetStatisticsAsync(string usernameOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the statistics should be queried. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserStatistics>> An ITraktUserStatistics instance coontaining statistics about movies, shows and episodes. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetUserNotesAsync(string, TraktNotesObjectType, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets the most recently notes for a user. OAuth authorization optional. See \"Trakt API Doc - Users: Notes\" for more information. public Task<TraktPagedResponse<ITraktNoteItem>> GetUserNotesAsync(string usernameOrSlug, TraktNotesObjectType notesObjectType = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the notes should be queried. notesObjectType TraktNotesObjectType Determines, which type of notes should be queried. See also TraktNotesObjectType. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the notes media items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktNoteItem>> An TraktPagedResponse<TResponseContentType> instance containing the notes items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktNoteItem. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetUserProfileAsync(string, TraktExtendedInfo, CancellationToken) Gets an user's profile information. OAuth authorization optional. See \"Trakt API Doc - Users: Profile\" for more information. public Task<TraktResponse<ITraktUser>> GetUserProfileAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the profile should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the user's profile should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUser>> An ITraktUser instance containing the user's profile information. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchedHistoryAsync(string, TraktSyncItemType, uint?, DateTime?, DateTime?, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all movies, shows, seasons and / or episodes an user has watched, sorted by most recent. OAuth authorization optional. See \"Trakt API Doc - Users: History\" for more information. public Task<TraktPagedResponse<ITraktHistoryItem>> GetWatchedHistoryAsync(string usernameOrSlug, TraktSyncItemType historyItemType = null, uint? itemId = null, DateTime? startAt = null, DateTime? endAt = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the watched history should be queried. historyItemType TraktSyncItemType Determines, which type of history items should be queried. See also TraktSyncItemType. itemId uint? The Trakt Id for the item, which should be specifically queried. Will be ignored, if historyItemType is not set or unspecified. startAt DateTime? The datetime, after which history items should be queried. Will be converted to the Trakt UTC-datetime and -format. endAt DateTime? The datetime, until which history items should be queried. Will be converted to the Trakt UTC-datetime and -format. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the history items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktHistoryItem>> A TraktPagedResponse<TResponseContentType> instance containing the queried history items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktHistoryItem. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchedMoviesAsync(string, TraktExtendedInfo, CancellationToken) Gets all movies an user has watched, sorted by most plays. OAuth authorization optional. See \"Trakt API Doc - Users: Watched\" for more information. public Task<TraktListResponse<ITraktWatchedMovie>> GetWatchedMoviesAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the watched movies should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the watched movies should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktWatchedMovie>> A list of ITraktWatchedMovie instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchedShowsAsync(string, TraktExtendedInfo, CancellationToken) Gets all shows an user has watched, sorted by most plays. OAuth authorization optional. See \"Trakt API Doc - Users: Watched\" for more information. public Task<TraktListResponse<ITraktWatchedShow>> GetWatchedShowsAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the watched shows should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the watched shows should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktListResponse<ITraktWatchedShow>> A list of ITraktWatchedShow instances. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchingAsync(string, TraktExtendedInfo, CancellationToken) Gets the movie or episode an user is currently watching. OAuth authorization optional. See \"Trakt API Doc - Users: Watching\" for more information. public Task<TraktResponse<ITraktUserWatchingItem>> GetWatchingAsync(string usernameOrSlug, TraktExtendedInfo extendedInfo = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the currently watching item should be queried. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the currently watching item should be queried. See also TraktExtendedInfo. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserWatchingItem>> An ITraktUserWatchingItem instance containing the movie or episode an user is currently watching. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchlistAsync(string, TraktSyncItemType, TraktWatchlistSortOrder, TraktExtendedInfo, TraktPagedParameters, CancellationToken) Gets all items in an user's watchlist. OAuth authorization optional. See \"Trakt API Doc - Users: Watchlist\" for more information. public Task<TraktPagedResponse<ITraktWatchlistItem>> GetWatchlistAsync(string usernameOrSlug, TraktSyncItemType watchlistItemType = null, TraktWatchlistSortOrder sortOrder = null, TraktExtendedInfo extendedInfo = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the watchlist items should be queried. watchlistItemType TraktSyncItemType Determines, which type of items in the watchlist should be queried. See also TraktSyncItemType. sortOrder TraktWatchlistSortOrder Determines the sort order of the returned watchlist items. See also TraktWatchlistSortOrder. extendedInfo TraktExtendedInfo The extended info, which determines how much data about the watchlist items should be queried. See also TraktExtendedInfo. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktWatchlistItem>> An TraktPagedResponse<TResponseContentType> instance containing the queried watchlist items and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktWatchlistItem. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. GetWatchlistCommentsAsync(string, TraktCommentSortOrder, TraktPagedParameters, CancellationToken) Returns all top level comments for the watchlist. OAuth authorization optional. See \"Trakt API Doc - Users: Watchlist Comments\" for more information. public Task<TraktPagedResponse<ITraktComment>> GetWatchlistCommentsAsync(string usernameOrSlug, TraktCommentSortOrder sortOrder = null, TraktPagedParameters pagedParameters = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the watchlist comments should be queried. sortOrder TraktCommentSortOrder Determines the sort order of the returned watchlist comments. See also TraktCommentSortOrder. pagedParameters TraktPagedParameters Specifies pagination parameters. TraktPagedParameters. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<ITraktComment>> An TraktPagedResponse<TResponseContentType> instance containing the queried watchlist comments and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and ITraktComment. Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. LikeListAsync(string, string, CancellationToken) Likes an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(string usernameOrSlug, string listIdOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list should be liked. listIdOrSlug string The id or slug of the list, which should be liked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. LikeListAsync(string, uint, CancellationToken) Likes an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(string usernameOrSlug, uint traktListId, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list should be liked. traktListId uint The Trakt-ID of the list, which should be liked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. LikeListAsync(string, ITraktList, CancellationToken) Likes an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(string usernameOrSlug, ITraktList list, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list should be liked. list ITraktList The list, which should be liked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. LikeListAsync(string, ITraktListIds, CancellationToken) Likes an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> LikeListAsync(string usernameOrSlug, ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the list should be liked. listIds ITraktListIds The ids of the list, which should be liked. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. RemoveHiddenItemsAsync(ITraktUserHiddenItemsRemovePost, TraktHiddenItemsSection, CancellationToken) Removes items from an user's hidden list. Accepts shows, seasons and movies. OAuth authorization required. See \"Trakt API Doc - Users: Remove Hidden Items\" for more information. It is recommended to use the ITraktUserHiddenItemsRemovePostBuilder to create an instance of the required ITraktUserHiddenItemsRemovePost. See also NewUserHiddenItemsRemovePost(). public Task<TraktResponse<ITraktUserHiddenItemsRemovePostResponse>> RemoveHiddenItemsAsync(ITraktUserHiddenItemsRemovePost hiddenItemsRemovePost, TraktHiddenItemsSection hiddenItemsSection, CancellationToken cancellationToken = default) Parameters hiddenItemsRemovePost ITraktUserHiddenItemsRemovePost An ITraktUserHiddenItemsRemovePost instance containing all shows, seasons and movies, which should be removed. hiddenItemsSection TraktHiddenItemsSection Determines, which type of hidden items section should be queried. TraktHiddenItemsSection cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserHiddenItemsRemovePostResponse>> An ITraktUserHiddenItemsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemovePersonalListItemsAsync(string, string, ITraktUserPersonalListItemsRemovePost, CancellationToken) Removes items from an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: Remove List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsRemovePostBuilder to create an instance of the required ITraktUserPersonalListItemsRemovePost. See also NewUserPersonalListItemsRemovePost(). public Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> RemovePersonalListItemsAsync(string usernameOrSlug, string listIdOrSlug, ITraktUserPersonalListItemsRemovePost listItemsRemovePost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be removed from a personal list. listIdOrSlug string The id or slug of the personal list, from which items should be removed. listItemsRemovePost ITraktUserPersonalListItemsRemovePost An ITraktUserPersonalListItemsRemovePost instance containing all shows, seasons, episodes, movies and people, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> An TraktUserPersonalListItemsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. RemovePersonalListItemsAsync(string, uint, ITraktUserPersonalListItemsRemovePost, CancellationToken) Removes items from an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: Remove List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsRemovePostBuilder to create an instance of the required ITraktUserPersonalListItemsRemovePost. See also NewUserPersonalListItemsRemovePost(). public Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> RemovePersonalListItemsAsync(string usernameOrSlug, uint traktListId, ITraktUserPersonalListItemsRemovePost listItemsRemovePost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be removed from a personal list. traktListId uint The Trakt-ID of the personal list, from which items should be removed. listItemsRemovePost ITraktUserPersonalListItemsRemovePost An ITraktUserPersonalListItemsRemovePost instance containing all shows, seasons, episodes, movies and people, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> An TraktUserPersonalListItemsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. RemovePersonalListItemsAsync(string, ITraktList, ITraktUserPersonalListItemsRemovePost, CancellationToken) Removes items from an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: Remove List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsRemovePostBuilder to create an instance of the required ITraktUserPersonalListItemsRemovePost. See also NewUserPersonalListItemsRemovePost(). public Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> RemovePersonalListItemsAsync(string usernameOrSlug, ITraktList list, ITraktUserPersonalListItemsRemovePost listItemsRemovePost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be removed from a personal list. list ITraktList The personal list, from which items should be removed. listItemsRemovePost ITraktUserPersonalListItemsRemovePost An ITraktUserPersonalListItemsRemovePost instance containing all shows, seasons, episodes, movies and people, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> An TraktUserPersonalListItemsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. RemovePersonalListItemsAsync(string, ITraktListIds, ITraktUserPersonalListItemsRemovePost, CancellationToken) Removes items from an user's personal list. Accepts shows, seasons, episodes, movies and people. OAuth authorization required. See \"Trakt API Doc - Users: Remove List Items\" for more information. It is recommended to use the ITraktUserPersonalListItemsRemovePostBuilder to create an instance of the required ITraktUserPersonalListItemsRemovePost. See also NewUserPersonalListItemsRemovePost(). public Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> RemovePersonalListItemsAsync(string usernameOrSlug, ITraktListIds listIds, ITraktUserPersonalListItemsRemovePost listItemsRemovePost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which items should be removed from a personal list. listIds ITraktListIds The ids of the personal list, from which items should be removed. listItemsRemovePost ITraktUserPersonalListItemsRemovePost An ITraktUserPersonalListItemsRemovePost instance containing all shows, seasons, episodes, movies and people, which should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktUserPersonalListItemsRemovePostResponse>> An TraktUserPersonalListItemsRemovePostResponse instance, which contains information about which items were deleted and not found. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. ReorderPersonalListItemsAsync(string, string, IList<uint>, CancellationToken) Reorders an user's personal list items. OAuth authorization required. See \"Trakt API Doc - Users: Reorder List Items\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderPersonalListItemsAsync(string usernameOrSlug, string listIdOrSlug, IList<uint> reorderedListItemsRank, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be reordered. listIdOrSlug string The id or slug of the list, for which the items should be reordered. reorderedListItemsRank IList<uint> A collection of list item ids. Represents the new order of an user's personal list items. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated personal list items order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ReorderPersonalListItemsAsync(string, uint, IList<uint>, CancellationToken) Reorders an user's personal list items. OAuth authorization required. See \"Trakt API Doc - Users: Reorder List Items\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderPersonalListItemsAsync(string usernameOrSlug, uint traktListId, IList<uint> reorderedListItemsRank, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be reordered. traktListId uint The Trakt-ID of the list, for which the items should be reordered. reorderedListItemsRank IList<uint> A collection of list item ids. Represents the new order of an user's personal list items. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated personal list items order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. ReorderPersonalListItemsAsync(string, ITraktList, IList<uint>, CancellationToken) Reorders an user's personal list items. OAuth authorization required. See \"Trakt API Doc - Users: Reorder List Items\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderPersonalListItemsAsync(string usernameOrSlug, ITraktList list, IList<uint> reorderedListItemsRank, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be reordered. list ITraktList The list, for which the items should be reordered. reorderedListItemsRank IList<uint> A collection of list item ids. Represents the new order of an user's personal list items. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated personal list items order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. ReorderPersonalListItemsAsync(string, ITraktListIds, IList<uint>, CancellationToken) Reorders an user's personal list items. OAuth authorization required. See \"Trakt API Doc - Users: Reorder List Items\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderPersonalListItemsAsync(string usernameOrSlug, ITraktListIds listIds, IList<uint> reorderedListItemsRank, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list items should be reordered. listIds ITraktListIds The ids of the list, for which the items should be reordered. reorderedListItemsRank IList<uint> A collection of list item ids. Represents the new order of an user's personal list items. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated personal list items order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. ReorderPersonalListsAsync(string, IList<uint>, CancellationToken) Reorders an user's personal lists. OAuth authorization required. See \"Trakt API Doc - Users: Reorder Lists\" for more information. public Task<TraktResponse<ITraktListItemsReorderPostResponse>> ReorderPersonalListsAsync(string usernameOrSlug, IList<uint> reorderedListsRank, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal lists should be reordered. reorderedListsRank IList<uint> A collection of list ids. Represents the new order of an user's personal lists. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktListItemsReorderPostResponse>> An ITraktListItemsReorderPostResponse instance containing information about the successfully updated personal lists order. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UnfollowUserAsync(string, CancellationToken) Sends an unfollow request for an user with the given username. OAuth authorization required. See \"Trakt API Doc - Users: Follow\" for more information. public Task<TraktNoContentResponse> UnfollowUserAsync(string usernameOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, which should be unfollowed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UnlikeListAsync(string, string, CancellationToken) Removes like on an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(string usernameOrSlug, string listIdOrSlug, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which a like on a list should be removed. listIdOrSlug string The id or slug of the list, for which a like should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UnlikeListAsync(string, uint, CancellationToken) Removes like on an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(string usernameOrSlug, uint traktListId, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which a like on a list should be removed. traktListId uint The Trakt-ID or slug of the list, for which a like should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. UnlikeListAsync(string, ITraktList, CancellationToken) Removes like on an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(string usernameOrSlug, ITraktList list, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which a like on a list should be removed. list ITraktList The list, for which a like should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. UnlikeListAsync(string, ITraktListIds, CancellationToken) Removes like on an user's list. OAuth authorization required. See \"Trakt API Doc - Users: List Like\" for more information. public Task<TraktNoContentResponse> UnlikeListAsync(string usernameOrSlug, ITraktListIds listIds, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which a like on a list should be removed. listIds ITraktListIds The ids of the list, for which a like should be removed. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. UpdatePersonalListAsync(string, string, ITraktUserPersonalListPost, CancellationToken) Updates an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktResponse<ITraktList>> UpdatePersonalListAsync(string usernameOrSlug, string listIdOrSlug, ITraktUserPersonalListPost personalListPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be updated. listIdOrSlug string The id or slug of the personal list, which should be updated. personalListPost ITraktUserPersonalListPost An ITraktUserPersonalListPost instance containing the data about the to be updated list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance containing information about the successfully updated personal list. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdatePersonalListAsync(string, uint, ITraktUserPersonalListPost, CancellationToken) Updates an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktResponse<ITraktList>> UpdatePersonalListAsync(string usernameOrSlug, uint traktListId, ITraktUserPersonalListPost personalListPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be updated. traktListId uint The Trakt-ID of the personal list, which should be updated. personalListPost ITraktUserPersonalListPost An ITraktUserPersonalListPost instance containing the data about the to be updated list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance containing information about the successfully updated personal list. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. UpdatePersonalListAsync(string, ITraktList, ITraktUserPersonalListPost, CancellationToken) Updates an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktResponse<ITraktList>> UpdatePersonalListAsync(string usernameOrSlug, ITraktList list, ITraktUserPersonalListPost personalListPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be updated. list ITraktList The personal list, which should be updated. personalListPost ITraktUserPersonalListPost An ITraktUserPersonalListPost instance containing the data about the to be updated list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance containing information about the successfully updated personal list. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. UpdatePersonalListAsync(string, ITraktListIds, ITraktUserPersonalListPost, CancellationToken) Updates an user's personal list. OAuth authorization required. See \"Trakt API Doc - Users: List\" for more information. public Task<TraktResponse<ITraktList>> UpdatePersonalListAsync(string usernameOrSlug, ITraktListIds listIds, ITraktUserPersonalListPost personalListPost, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list should be updated. listIds ITraktListIds The ids of the personal list, which should be updated. personalListPost ITraktUserPersonalListPost An ITraktUserPersonalListPost instance containing the data about the to be updated list. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktResponse<ITraktList>> An ITraktList instance containing information about the successfully updated personal list. Exceptions TraktException Thrown, if the request fails. TraktPostValidationException Thrown, if validation of post data fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set. UpdatePersonalListItemAsync(string, string, uint, string, CancellationToken) Update the notes on a single list item. OAuth authorization required. See \"Trakt API Doc - Users: Update List Item\" for more information. public Task<TraktNoContentResponse> UpdatePersonalListItemAsync(string usernameOrSlug, string listIdOrSlug, uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list item should be updated. listIdOrSlug string The id or slug of the list, for which the item should be updated. listItemId uint The id of the list item which should be updated. notes string The new list item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. UpdatePersonalListItemAsync(string, uint, uint, string, CancellationToken) Update the notes on a single list item. OAuth authorization required. See \"Trakt API Doc - Users: Update List Item\" for more information. public Task<TraktNoContentResponse> UpdatePersonalListItemAsync(string usernameOrSlug, uint traktListId, uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list item should be updated. traktListId uint The Trakt-ID of the list, for which the item should be updated. listItemId uint The id of the list item which should be updated. notes string The new list item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentException Thrown, if the given traktListId is 0. UpdatePersonalListItemAsync(string, ITraktList, uint, string, CancellationToken) Update the notes on a single list item. OAuth authorization required. See \"Trakt API Doc - Users: Update List Item\" for more information. public Task<TraktNoContentResponse> UpdatePersonalListItemAsync(string usernameOrSlug, ITraktList list, uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list item should be updated. list ITraktList The list, for which the item should be updated. listItemId uint The id of the list item which should be updated. notes string The new list item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given list is null. UpdatePersonalListItemAsync(string, ITraktListIds, uint, string, CancellationToken) Update the notes on a single list item. OAuth authorization required. See \"Trakt API Doc - Users: Update List Item\" for more information. public Task<TraktNoContentResponse> UpdatePersonalListItemAsync(string usernameOrSlug, ITraktListIds listIds, uint listItemId, string notes = null, CancellationToken cancellationToken = default) Parameters usernameOrSlug string The username or slug of the user, for which the personal list item should be updated. listIds ITraktListIds The ids of the list, for which the item should be updated. listItemId uint The id of the list item which should be updated. notes string The new list item's notes value. Can be null to delete the content of the notes. cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktNoContentResponse> Exceptions TraktException Thrown, if the request fails. TraktRequestValidationException Thrown, if validation of request data fails. ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIds has not any ids set."
  },
  "api/TraktNet.Modules.html": {
    "href": "api/TraktNet.Modules.html",
    "title": "Namespace TraktNet.Modules | Trakt.NET",
    "keywords": "Namespace TraktNet.Modules Classes ATraktModule TraktAuthenticationModule Provides access to OAuth and device authentication and authorization. This module contains all methods of the \"Trakt API Doc - Authentication - OAuth\" section and the \"Trakt API Doc - Authentication - Devices\" section. TraktCalendarModule Provides access to data retrieving methods specific to calendars. This module contains all methods of the \"Trakt API Doc - Calendars\" section. TraktCertificationsModule Provides access to data retrieving methods specific to certifications. This module contains all methods of the \"Trakt API Doc - Certifications\" section. TraktCheckinsModule Provides access to data retrieving methods specific to checkins. This module contains all methods of the \"Trakt API Doc - Checkin\" section. TraktCommentsModule Provides access to data retrieving methods specific to comments. This module contains all methods of the \"Trakt API Doc - Comments\" section. TraktCountriesModule Provides access to data retrieving methods specific to countries. This module contains all methods of the \"Trakt API Doc - Countries\" section. TraktEpisodesModule Provides access to data retrieving methods specific to episodes. This module contains all methods of the \"Trakt API Doc - Episodes\" section. TraktGenresModule Provides access to data retrieving methods specific to genres. This module contains all methods of the \"Trakt API Doc - Genres\" section. TraktLanguagesModule Provides access to data retrieving methods specific to languages. This module contains all methods of the \"Trakt API Doc - Languages\" section. TraktListsModule Provides access to data retrieving methods specific to lists. This module contains all methods of the \"Trakt API Doc - Lists\" section. TraktMoviesModule Provides access to data retrieving methods specific to movies. This module contains all methods of the \"Trakt API Doc - Movies\" section. TraktNetworksModule Provides access to data retrieving methods specific to networks. This module contains all methods of the \"Trakt API Doc - Networks\" section. TraktNotesModule Provides access to data retrieving methods specific to notes. This module contains all methods of the \"Trakt API Doc - Notes\" section. TraktPeopleModule Provides access to data retrieving methods specific to people. This module contains all methods of the \"Trakt API Doc - People\" section. TraktRecommendationsModule Provides access to data retrieving methods specific to recommendations. This module contains all methods of the \"Trakt API Doc - Recommendations\" section. TraktScrobbleModule Provides access to data retrieving methods specific to scrobbles. This module contains all methods of the \"Trakt API Doc - Scrobble\" section. TraktSearchModule Provides access to data retrieving methods specific to search. This module contains all methods of the \"Trakt API Doc - Search\" section. TraktSeasonsModule Provides access to data retrieving methods specific to seasons. This module contains all methods of the \"Trakt API Doc - Seasons\" section. TraktShowsModule Provides access to data retrieving methods specific to shows. This module contains all methods of the \"Trakt API Doc - Shows\" section. TraktSyncModule Provides access to data retrieving methods specific to sync. This module contains all methods of the \"Trakt API Doc - Sync\" section. TraktUsersModule Provides access to data retrieving methods specific to users. This module contains all methods of the \"Trakt API Doc - Users\" section."
  },
  "api/TraktNet.Objects.Authentication.ITraktAuthorization.html": {
    "href": "api/TraktNet.Objects.Authentication.ITraktAuthorization.html",
    "title": "Interface ITraktAuthorization | Trakt.NET",
    "keywords": "Interface ITraktAuthorization Namespace TraktNet.Objects.Authentication Assembly Trakt.NET.dll Represents a Trakt authorization response, which contains information, such as access token and refresh token. public interface ITraktAuthorization : IEquatable<ITraktAuthorization> Inherited Members IEquatable<ITraktAuthorization>.Equals(ITraktAuthorization) Properties AccessToken Gets or sets the access token. string AccessToken { get; set; } Property Value string CreatedAt Returns the UTC DateTime, when this authorization information was created. DateTime CreatedAt { get; } Property Value DateTime CreatedAtTimestamp Gets or sets the timestamp, when this token was created. ulong CreatedAtTimestamp { get; set; } Property Value ulong ExpiresInSeconds Gets or sets the seconds, after which this authorization will expire. uint ExpiresInSeconds { get; set; } Property Value uint IgnoreExpiration Gets or sets, whether token expiration should be ignored. bool IgnoreExpiration { get; set; } Property Value bool IsExpired Returns, whether this authorization information is expired. Returns false, if IsValid returns false, or, if the authorization information is expired. bool IsExpired { get; } Property Value bool IsRefreshPossible Returns, whether this authorization information can be refreshed with a refresh token. Returns false, if RefreshToken is null, empty or contains spaces. bool IsRefreshPossible { get; } Property Value bool IsValid Returns, whether this authorization information is valid. Returns false, if AccessToken is null, empty or contains spaces. bool IsValid { get; } Property Value bool RefreshToken Gets or sets the refresh token. Use this to exchange it for a new access token. string RefreshToken { get; set; } Property Value string Scope Gets or sets the token scope. See also TraktAccessScope. TraktAccessScope Scope { get; set; } Property Value TraktAccessScope TokenType Gets or sets the token type. See also TraktAccessTokenType. TraktAccessTokenType TokenType { get; set; } Property Value TraktAccessTokenType Methods ToString() Gets a string representation of the authorization token. string ToString() Returns string A string representation of the authorization token."
  },
  "api/TraktNet.Objects.Authentication.ITraktDevice.html": {
    "href": "api/TraktNet.Objects.Authentication.ITraktDevice.html",
    "title": "Interface ITraktDevice | Trakt.NET",
    "keywords": "Interface ITraktDevice Namespace TraktNet.Objects.Authentication Assembly Trakt.NET.dll Represents a Trakt device response. public interface ITraktDevice : IEquatable<ITraktDevice> Inherited Members IEquatable<ITraktDevice>.Equals(ITraktDevice) Properties CreatedAt Gets the UTC DateTime, when this device was created. DateTime CreatedAt { get; } Property Value DateTime DeviceCode Gets or sets the actual device code. string DeviceCode { get; set; } Property Value string ExpiresInSeconds Gets or sets the seconds, after which this device will expire. uint ExpiresInSeconds { get; set; } Property Value uint IntervalInMilliseconds Gets the interval in milliseconds, at which the access token should be polled. uint IntervalInMilliseconds { get; } Property Value uint IntervalInSeconds Gets or sets the interval, at which the access token should be polled. uint IntervalInSeconds { get; set; } Property Value uint IsExpiredUnused Gets, whether this device is expired without actually using it for polling for an access token. bool IsExpiredUnused { get; } Property Value bool IsValid Returns, whether this device is valid. A Trakt device is valid, as long as the actual DeviceCode is neither null nor empty and as long as this device is not expired. See also ExpiresInSeconds. See also IsExpiredUnused. bool IsValid { get; } Property Value bool UserCode Gets or sets the user code. string UserCode { get; set; } Property Value string VerificationUrl Gets or sets the verification URL. string VerificationUrl { get; set; } Property Value string Methods ToString() Gets a string representation of the device. string ToString() Returns string A string representation of the device."
  },
  "api/TraktNet.Objects.Authentication.TraktAuthorization.html": {
    "href": "api/TraktNet.Objects.Authentication.TraktAuthorization.html",
    "title": "Class TraktAuthorization | Trakt.NET",
    "keywords": "Class TraktAuthorization Namespace TraktNet.Objects.Authentication Assembly Trakt.NET.dll Represents a Trakt authorization response, which contains information, such as access token and refresh token. public sealed class TraktAuthorization : ITraktAuthorization, IEquatable<ITraktAuthorization> Inheritance object TraktAuthorization Implements ITraktAuthorization IEquatable<ITraktAuthorization> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Properties AccessToken Gets or sets the access token. public string AccessToken { get; set; } Property Value string CreatedAt Returns the UTC DateTime, when this authorization information was created. public DateTime CreatedAt { get; } Property Value DateTime CreatedAtTimestamp Gets or sets the timestamp, when this token was created. public ulong CreatedAtTimestamp { get; set; } Property Value ulong ExpiresInSeconds Gets or sets the seconds, after which this authorization will expire. public uint ExpiresInSeconds { get; set; } Property Value uint IgnoreExpiration Gets or sets, whether token expiration should be ignored. public bool IgnoreExpiration { get; set; } Property Value bool IsExpired Returns, whether this authorization information is expired. Returns false, if IsValid returns false, or, if the authorization information is expired. public bool IsExpired { get; } Property Value bool IsRefreshPossible Returns, whether this authorization information can be refreshed with a refresh token. Returns false, if RefreshToken is null, empty or contains spaces. public bool IsRefreshPossible { get; } Property Value bool IsValid Returns, whether this authorization information is valid. Returns false, if AccessToken is null, empty or contains spaces. public bool IsValid { get; } Property Value bool RefreshToken Gets or sets the refresh token. Use this to exchange it for a new access token. public string RefreshToken { get; set; } Property Value string Scope Gets or sets the token scope. See also TraktAccessScope. public TraktAccessScope Scope { get; set; } Property Value TraktAccessScope TokenType Gets or sets the token type. See also TraktAccessTokenType. public TraktAccessTokenType TokenType { get; set; } Property Value TraktAccessTokenType Methods CreateWith(DateTime, string, string) Creates a new ITraktAuthorization instance with the given values. ExpiresInSeconds of the created ITraktAuthorization instance will have the default value of 3600 * 24 * 90 seconds, equal to 90 days. public static ITraktAuthorization CreateWith(DateTime createdAt, string accessToken, string refreshToken = null) Parameters createdAt DateTime The datetime, when the given access token was created. Will be converted to UTC datetime. accessToken string The access token for the new ITraktAuthorization instance. refreshToken string The optional refresh token for the new ITraktAuthorization instance. Returns ITraktAuthorization A new ITraktAuthorization instance with the given values. CreateWith(DateTime, uint, string, string) Creates a new ITraktAuthorization instance with the given values. public static ITraktAuthorization CreateWith(DateTime createdAt, uint expiresInSeconds, string accessToken, string refreshToken = null) Parameters createdAt DateTime The datetime, when the given access token was created. Will be converted to UTC datetime. expiresInSeconds uint The seconds, after which the given access token will expire. accessToken string The access token for the new ITraktAuthorization instance. refreshToken string The optional refresh token for the new ITraktAuthorization instance. Returns ITraktAuthorization A new ITraktAuthorization instance with the given values. CreateWith(string, string) Creates a new ITraktAuthorization instance with the given values. public static ITraktAuthorization CreateWith(string accessToken, string refreshToken = null) Parameters accessToken string The access token for the new ITraktAuthorization instance. refreshToken string The optional refresh token for the new ITraktAuthorization instance. Returns ITraktAuthorization A new ITraktAuthorization instance with the given values. CreateWith(uint, string, string) Creates a new ITraktAuthorization instance with the given values. public static ITraktAuthorization CreateWith(uint expiresInSeconds, string accessToken, string refreshToken = null) Parameters expiresInSeconds uint The seconds, after which the given access token will expire. accessToken string The access token for the new ITraktAuthorization instance. refreshToken string The optional refresh token for the new ITraktAuthorization instance. Returns ITraktAuthorization A new ITraktAuthorization instance with the given values. Equals(ITraktAuthorization) Compares this instance with another ITraktAuthorization instance. public bool Equals(ITraktAuthorization other) Parameters other ITraktAuthorization The other ITraktAuthorization instance, with which this instance will be compared. Returns bool True, if both instances are equal, otherwise false. ToString() Gets a string representation of the authorization token. public override string ToString() Returns string A string representation of the authorization token."
  },
  "api/TraktNet.Objects.Authentication.TraktDevice.html": {
    "href": "api/TraktNet.Objects.Authentication.TraktDevice.html",
    "title": "Class TraktDevice | Trakt.NET",
    "keywords": "Class TraktDevice Namespace TraktNet.Objects.Authentication Assembly Trakt.NET.dll Represents a Trakt device response. public sealed class TraktDevice : ITraktDevice, IEquatable<ITraktDevice> Inheritance object TraktDevice Implements ITraktDevice IEquatable<ITraktDevice> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Constructors TraktDevice() Initializes a new instance of the TraktDevice class. Sets CreatedAt to the DateTime, when it is initialized. The instantiated device instance is invalid. public TraktDevice() Properties CreatedAt Gets the UTC DateTime, when this device was created. public DateTime CreatedAt { get; } Property Value DateTime DeviceCode Gets or sets the actual device code. public string DeviceCode { get; set; } Property Value string ExpiresInSeconds Gets or sets the seconds, after which this device will expire. public uint ExpiresInSeconds { get; set; } Property Value uint IntervalInMilliseconds Gets the interval in milliseconds, at which the access token should be polled. public uint IntervalInMilliseconds { get; } Property Value uint IntervalInSeconds Gets or sets the interval, at which the access token should be polled. public uint IntervalInSeconds { get; set; } Property Value uint IsExpiredUnused Gets, whether this device is expired without actually using it for polling for an access token. public bool IsExpiredUnused { get; } Property Value bool IsValid Returns, whether this device is valid. A Trakt device is valid, as long as the actual DeviceCode is neither null nor empty and as long as this device is not expired. See also ExpiresInSeconds. See also IsExpiredUnused. public bool IsValid { get; } Property Value bool UserCode Gets or sets the user code. public string UserCode { get; set; } Property Value string VerificationUrl Gets or sets the verification URL. public string VerificationUrl { get; set; } Property Value string Methods Equals(ITraktDevice) Compares this instance with another ITraktDevice instance. public bool Equals(ITraktDevice other) Parameters other ITraktDevice The other ITraktDevice instance, with which this instance will be compared. Returns bool True, if both instances are equal, otherwise false. ToString() Gets a string representation of the device. public override string ToString() Returns string A string representation of the device."
  },
  "api/TraktNet.Objects.Authentication.html": {
    "href": "api/TraktNet.Objects.Authentication.html",
    "title": "Namespace TraktNet.Objects.Authentication | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Authentication Classes TraktAuthorization Represents a Trakt authorization response, which contains information, such as access token and refresh token. TraktDevice Represents a Trakt device response. Interfaces ITraktAuthorization Represents a Trakt authorization response, which contains information, such as access token and refresh token. ITraktDevice Represents a Trakt device response."
  },
  "api/TraktNet.Objects.Basic.IIds.html": {
    "href": "api/TraktNet.Objects.Basic.IIds.html",
    "title": "Interface IIds | Trakt.NET",
    "keywords": "Interface IIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public interface IIds Properties HasAnyId Returns, whether any id has been set. bool HasAnyId { get; } Property Value bool Methods GetBestId() Gets the most reliable id from those that have been set. string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Basic.ITraktCastAndCrew.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCastAndCrew.html",
    "title": "Interface ITraktCastAndCrew | Trakt.NET",
    "keywords": "Interface ITraktCastAndCrew Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a collection of cast- and crew-members. public interface ITraktCastAndCrew Properties Cast Gets or sets a list of cast members. See also ITraktCastMember. Nullable IList<ITraktCastMember> Cast { get; set; } Property Value IList<ITraktCastMember> Crew Gets or sets the crew members. See also ITraktCrew. Nullable ITraktCrew Crew { get; set; } Property Value ITraktCrew"
  },
  "api/TraktNet.Objects.Basic.ITraktCastMember.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCastMember.html",
    "title": "Interface ITraktCastMember | Trakt.NET",
    "keywords": "Interface ITraktCastMember Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt cast member. public interface ITraktCastMember Properties Characters Gets or sets the characters collection of the cast member. Nullable IList<string> Characters { get; set; } Property Value IList<string> Person Gets or sets the cast member. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson"
  },
  "api/TraktNet.Objects.Basic.ITraktCertification.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCertification.html",
    "title": "Interface ITraktCertification | Trakt.NET",
    "keywords": "Interface ITraktCertification Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt certification. public interface ITraktCertification Properties Description Gets or sets the certification description. Nullable string Description { get; set; } Property Value string Name Gets or sets the certification name. Nullable string Name { get; set; } Property Value string Slug Gets or sets the certification slug. Nullable string Slug { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktCertifications.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCertifications.html",
    "title": "Interface ITraktCertifications | Trakt.NET",
    "keywords": "Interface ITraktCertifications Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a collection of Trakt certifications. public interface ITraktCertifications Properties US Gets or sets the certifications for the country code \"us\". See also ITraktCertification. Nullable IList<ITraktCertification> US { get; set; } Property Value IList<ITraktCertification>"
  },
  "api/TraktNet.Objects.Basic.ITraktComment.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktComment.html",
    "title": "Interface ITraktComment | Trakt.NET",
    "keywords": "Interface ITraktComment Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt comment or reply. public interface ITraktComment Properties Comment Gets or sets the comment's content. Nullable string Comment { get; set; } Property Value string CreatedAt Gets or sets the UTC datetime, when this comment was created. DateTime CreatedAt { get; set; } Property Value DateTime Id Gets or sets the Trakt id of the comment. uint Id { get; set; } Property Value uint Likes Gets or sets the number of likes for the comment. int? Likes { get; set; } Property Value int? ParentId Gets or sets the parent comment id, if this comment is a reply. uint? ParentId { get; set; } Property Value uint? Replies Gets or sets the number of replies for the comment. int? Replies { get; set; } Property Value int? Review Gets or sets, whether the comment is a review. bool Review { get; set; } Property Value bool Spoiler Gets or sets, whether the comment contains spoiler. bool Spoiler { get; set; } Property Value bool UpdatedAt Gets or sets the UTC datetime, when this comment was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the user, which has written the comment. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser UserStats Gets or sets the user stats for the comment. See also ITraktCommentUserStats. Nullable ITraktCommentUserStats UserStats { get; set; } Property Value ITraktCommentUserStats"
  },
  "api/TraktNet.Objects.Basic.ITraktCommentItem.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCommentItem.html",
    "title": "Interface ITraktCommentItem | Trakt.NET",
    "keywords": "Interface ITraktCommentItem Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt comment object item. public interface ITraktCommentItem Properties Episode Gets or sets the comment episode item, if Type is set to Episode. ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the comment list item, if Type is set to List. ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the comment movie item, if Type is set to Movie. ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the comment season item, if Type is set to Season. ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the comment show item, if Type is set to Show. ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type of the comment item. TraktObjectType Type { get; set; } Property Value TraktObjectType"
  },
  "api/TraktNet.Objects.Basic.ITraktCommentLike.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCommentLike.html",
    "title": "Interface ITraktCommentLike | Trakt.NET",
    "keywords": "Interface ITraktCommentLike Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt comment like. public interface ITraktCommentLike Properties LikedAt Gets or sets the UTC datetime, when the comment was liked. DateTime? LikedAt { get; set; } Property Value DateTime? User Gets or sets the user, who liked the comment. ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Basic.ITraktCommentUserStats.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCommentUserStats.html",
    "title": "Interface ITraktCommentUserStats | Trakt.NET",
    "keywords": "Interface ITraktCommentUserStats Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt user stats for a comment or reply. public interface ITraktCommentUserStats Properties CompletedCount Gets or sets the user completed count for the comment. int? CompletedCount { get; set; } Property Value int? PlayCount Gets or sets the user play count for the comment. int? PlayCount { get; set; } Property Value int? Rating Gets or sets the user rating for the comment. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Basic.ITraktConnections.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktConnections.html",
    "title": "Interface ITraktConnections | Trakt.NET",
    "keywords": "Interface ITraktConnections Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents Trakt connection options. public interface ITraktConnections Properties Apple Gets or sets, whether Apple connection is enabled. bool? Apple { get; set; } Property Value bool? Dropbox Gets or sets, whether Dropbox connection is enabled. bool? Dropbox { get; set; } Property Value bool? Facebook Gets or sets, whether Facebook connection is enabled. bool? Facebook { get; set; } Property Value bool? Google Gets or sets, whether Google connection is enabled. bool? Google { get; set; } Property Value bool? Mastodon Gets or sets, whether Mastodon connection is enabled. bool? Mastodon { get; set; } Property Value bool? Medium Gets or sets, whether Medium connection is enabled. bool? Medium { get; set; } Property Value bool? Microsoft Gets or sets, whether Microsoft connection is enabled. bool? Microsoft { get; set; } Property Value bool? Slack Gets or sets, whether Slack connection is enabled. bool? Slack { get; set; } Property Value bool? Tumblr Gets or sets, whether Tumblr connection is enabled. bool? Tumblr { get; set; } Property Value bool? Twitter Gets or sets, whether Twitter connection is enabled. bool? Twitter { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Basic.ITraktCountry.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCountry.html",
    "title": "Interface ITraktCountry | Trakt.NET",
    "keywords": "Interface ITraktCountry Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public interface ITraktCountry Properties Code string Code { get; set; } Property Value string Name string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktCrew.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCrew.html",
    "title": "Interface ITraktCrew | Trakt.NET",
    "keywords": "Interface ITraktCrew Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of crew members in different categories. public interface ITraktCrew Properties Art Gets or sets a list of crew members in the art category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Art { get; set; } Property Value IList<ITraktCrewMember> Camera Gets or sets a list of crew members in the camera category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Camera { get; set; } Property Value IList<ITraktCrewMember> CostumeAndMakeup Gets or sets a list of crew members in the costume and make-up category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> CostumeAndMakeup { get; set; } Property Value IList<ITraktCrewMember> Crew Gets or sets a list of crew members. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Crew { get; set; } Property Value IList<ITraktCrewMember> Directing Gets or sets a list of crew members in the directing category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Directing { get; set; } Property Value IList<ITraktCrewMember> Editing Gets or sets a list of crew members in the editing category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Editing { get; set; } Property Value IList<ITraktCrewMember> Lighting Gets or sets a list of crew members in the lighting category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Lighting { get; set; } Property Value IList<ITraktCrewMember> Production Gets or sets a list of crew members in the production category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Production { get; set; } Property Value IList<ITraktCrewMember> Sound Gets or sets a list of crew members in the sound category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Sound { get; set; } Property Value IList<ITraktCrewMember> VisualEffects Gets or sets a list of crew members in the visual effects category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> VisualEffects { get; set; } Property Value IList<ITraktCrewMember> Writing Gets or sets a list of crew members in the writing category. See also ITraktCrewMember. Nullable IList<ITraktCrewMember> Writing { get; set; } Property Value IList<ITraktCrewMember>"
  },
  "api/TraktNet.Objects.Basic.ITraktCrewMember.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktCrewMember.html",
    "title": "Interface ITraktCrewMember | Trakt.NET",
    "keywords": "Interface ITraktCrewMember Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt crew member. public interface ITraktCrewMember Properties Jobs Gets or sets the jobs collection of the crew member. Nullable IList<string> Jobs { get; set; } Property Value IList<string> Person Gets or sets the crew member. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson"
  },
  "api/TraktNet.Objects.Basic.ITraktError.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktError.html",
    "title": "Interface ITraktError | Trakt.NET",
    "keywords": "Interface ITraktError Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt error response. public interface ITraktError Properties Description Gets or sets the error description. Nullable string Description { get; set; } Property Value string Error Gets or sets the error name. Nullable string Error { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktGenre.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktGenre.html",
    "title": "Interface ITraktGenre | Trakt.NET",
    "keywords": "Interface ITraktGenre Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt genre. public interface ITraktGenre Properties Name Gets or sets the genre name. Nullable string Name { get; set; } Property Value string Slug Gets or sets the Trakt slug of the genre. Nullable string Slug { get; set; } Property Value string Type Gets or sets the genre type. See also TraktGenreType. Nullable TraktGenreType Type { get; set; } Property Value TraktGenreType"
  },
  "api/TraktNet.Objects.Basic.ITraktIds.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktIds.html",
    "title": "Interface ITraktIds | Trakt.NET",
    "keywords": "Interface ITraktIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id. public interface ITraktIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Imdb Gets or sets the id from imdb.com Nullable string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com uint? Tvdb { get; set; } Property Value uint?"
  },
  "api/TraktNet.Objects.Basic.ITraktImage.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktImage.html",
    "title": "Interface ITraktImage | Trakt.NET",
    "keywords": "Interface ITraktImage Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll An image for an item available in only one size. public interface ITraktImage Properties Full The address to the full size image. Nullable string Full { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktLanguage.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktLanguage.html",
    "title": "Interface ITraktLanguage | Trakt.NET",
    "keywords": "Interface ITraktLanguage Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public interface ITraktLanguage Properties Code string Code { get; set; } Property Value string Name string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktMetadata.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktMetadata.html",
    "title": "Interface ITraktMetadata | Trakt.NET",
    "keywords": "Interface ITraktMetadata Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Contains metadata information for collection items. public interface ITraktMetadata Properties Audio Gets or sets the media audio type. See also TraktMediaAudio. Nullable TraktMediaAudio Audio { get; set; } Property Value TraktMediaAudio AudioChannels Gets or sets the media audio channels. See also TraktMediaAudioChannel. Nullable TraktMediaAudioChannel AudioChannels { get; set; } Property Value TraktMediaAudioChannel HDR TraktMediaHDR HDR { get; set; } Property Value TraktMediaHDR MediaResolution Gets or sets the media resolution. See also TraktMediaResolution. Nullable TraktMediaResolution MediaResolution { get; set; } Property Value TraktMediaResolution MediaType Gets or sets the media type. See also TraktMediaType. Nullable TraktMediaType MediaType { get; set; } Property Value TraktMediaType ThreeDimensional Gets or sets, whether the media is in 3D. bool? ThreeDimensional { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Basic.ITraktNetwork.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktNetwork.html",
    "title": "Interface ITraktNetwork | Trakt.NET",
    "keywords": "Interface ITraktNetwork Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt network. public interface ITraktNetwork Properties Country Gets or sets the country code for the network. Nullable string Country { get; set; } Property Value string Ids Gets or sets the collection of ids for the network for various web services. See also ITraktNetworkIds. Nullable ITraktNetworkIds Ids { get; set; } Property Value ITraktNetworkIds Name Gets or sets the network name. Nullable string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktNetworkIds.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktNetworkIds.html",
    "title": "Interface ITraktNetworkIds | Trakt.NET",
    "keywords": "Interface ITraktNetworkIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id. public interface ITraktNetworkIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Tmdb Gets or sets the numeric id from themoviedb.org uint Tmdb { get; set; } Property Value uint Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint"
  },
  "api/TraktNet.Objects.Basic.ITraktRateLimitInfo.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktRateLimitInfo.html",
    "title": "Interface ITraktRateLimitInfo | Trakt.NET",
    "keywords": "Interface ITraktRateLimitInfo Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public interface ITraktRateLimitInfo Properties Limit int? Limit { get; set; } Property Value int? Name string Name { get; set; } Property Value string Period int? Period { get; set; } Property Value int? Remaining int? Remaining { get; set; } Property Value int? Until DateTime? Until { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Basic.ITraktRating.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktRating.html",
    "title": "Interface ITraktRating | Trakt.NET",
    "keywords": "Interface ITraktRating Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt rating. public interface ITraktRating Properties Distribution Gets or sets the rating distribution. Nullable IDictionary<string, int> Distribution { get; set; } Property Value IDictionary<string, int> Rating Gets or sets the rating value. float? Rating { get; set; } Property Value float? Votes Gets or sets the number of votes for this rating. int? Votes { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Basic.ITraktSearchResult.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktSearchResult.html",
    "title": "Interface ITraktSearchResult | Trakt.NET",
    "keywords": "Interface ITraktSearchResult Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt search result. public interface ITraktSearchResult Properties Episode Gets or sets the result episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the result list, if Type is List. See also ITraktList. Nullable ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the result movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Person Gets or sets the result person, if Type is Person. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson Score Gets or sets the result score. float? Score { get; set; } Property Value float? Show Gets or sets the result show, if Type is Show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the result type. See also TraktSearchResultType. Nullable TraktSearchResultType Type { get; set; } Property Value TraktSearchResultType"
  },
  "api/TraktNet.Objects.Basic.ITraktStatistics.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktStatistics.html",
    "title": "Interface ITraktStatistics | Trakt.NET",
    "keywords": "Interface ITraktStatistics Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents Trakt statistics. public interface ITraktStatistics Properties CollectedEpisodes Gets or sets the number of collected episodes. int? CollectedEpisodes { get; set; } Property Value int? Collectors Gets or sets the number of collectors. int? Collectors { get; set; } Property Value int? Comments Gets or sets the number of comments. int? Comments { get; set; } Property Value int? Lists Gets or sets the number of lists. int? Lists { get; set; } Property Value int? Plays Gets or sets the number of playes. int? Plays { get; set; } Property Value int? Recommended Gets or sets the number of recommendations. int? Recommended { get; set; } Property Value int? Votes Gets or sets the number of votes. int? Votes { get; set; } Property Value int? Watchers Gets or sets the number of watchers. int? Watchers { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Basic.ITraktStudio.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktStudio.html",
    "title": "Interface ITraktStudio | Trakt.NET",
    "keywords": "Interface ITraktStudio Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt studio. public interface ITraktStudio Properties CountryCode Gets or sets the content country code of the studio. Nullable string CountryCode { get; set; } Property Value string Ids Gets or sets the collection of ids for the studio for various web services. See also ITraktStudioIds. Nullable ITraktStudioIds Ids { get; set; } Property Value ITraktStudioIds Name Gets or sets the studio name. Nullable string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.ITraktStudioIds.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktStudioIds.html",
    "title": "Interface ITraktStudioIds | Trakt.NET",
    "keywords": "Interface ITraktStudioIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt studio. public interface ITraktStudioIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Slug Gets or sets the Trakt slug. Nullable string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint"
  },
  "api/TraktNet.Objects.Basic.ITraktTranslation.html": {
    "href": "api/TraktNet.Objects.Basic.ITraktTranslation.html",
    "title": "Interface ITraktTranslation | Trakt.NET",
    "keywords": "Interface ITraktTranslation Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt translation. public interface ITraktTranslation Properties CountryCode Gets or sets the two letter country code for the translation. Nullable string CountryCode { get; set; } Property Value string LanguageCode Gets or sets the two letter language code for the translation. Nullable string LanguageCode { get; set; } Property Value string Overview Gets or sets the synopsis of the release. Nullable string Overview { get; set; } Property Value string Title Gets or sets the title of the translation. Nullable string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktCastAndCrew.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCastAndCrew.html",
    "title": "Class TraktCastAndCrew | Trakt.NET",
    "keywords": "Class TraktCastAndCrew Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a collection of cast- and crew-members. public class TraktCastAndCrew : ITraktCastAndCrew Inheritance object TraktCastAndCrew Implements ITraktCastAndCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cast Gets or sets a list of cast members. See also ITraktCastMember. Nullable public IList<ITraktCastMember> Cast { get; set; } Property Value IList<ITraktCastMember> Crew Gets or sets the crew members. See also ITraktCrew. Nullable public ITraktCrew Crew { get; set; } Property Value ITraktCrew"
  },
  "api/TraktNet.Objects.Basic.TraktCastMember.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCastMember.html",
    "title": "Class TraktCastMember | Trakt.NET",
    "keywords": "Class TraktCastMember Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt cast member. public class TraktCastMember : ITraktCastMember Inheritance object TraktCastMember Implements ITraktCastMember Derived TraktShowCastMember Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Characters Gets or sets the characters collection of the cast member. Nullable public IList<string> Characters { get; set; } Property Value IList<string> Person Gets or sets the cast member. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson"
  },
  "api/TraktNet.Objects.Basic.TraktCertification.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCertification.html",
    "title": "Class TraktCertification | Trakt.NET",
    "keywords": "Class TraktCertification Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt certification. public class TraktCertification : ITraktCertification Inheritance object TraktCertification Implements ITraktCertification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Gets or sets the certification description. Nullable public string Description { get; set; } Property Value string Name Gets or sets the certification name. Nullable public string Name { get; set; } Property Value string Slug Gets or sets the certification slug. Nullable public string Slug { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktCertifications.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCertifications.html",
    "title": "Class TraktCertifications | Trakt.NET",
    "keywords": "Class TraktCertifications Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a collection of Trakt certifications. public class TraktCertifications : ITraktCertifications Inheritance object TraktCertifications Implements ITraktCertifications Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties US Gets or sets the certifications for the country code \"us\". See also ITraktCertification. Nullable public IList<ITraktCertification> US { get; set; } Property Value IList<ITraktCertification>"
  },
  "api/TraktNet.Objects.Basic.TraktComment.html": {
    "href": "api/TraktNet.Objects.Basic.TraktComment.html",
    "title": "Class TraktComment | Trakt.NET",
    "keywords": "Class TraktComment Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt comment or reply. public class TraktComment : ITraktComment Inheritance object TraktComment Implements ITraktComment Derived TraktCommentPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comment Gets or sets the comment's content. Nullable public string Comment { get; set; } Property Value string CreatedAt Gets or sets the UTC datetime, when this comment was created. public DateTime CreatedAt { get; set; } Property Value DateTime Id Gets or sets the Trakt id of the comment. public uint Id { get; set; } Property Value uint Likes Gets or sets the number of likes for the comment. public int? Likes { get; set; } Property Value int? ParentId Gets or sets the parent comment id, if this comment is a reply. public uint? ParentId { get; set; } Property Value uint? Replies Gets or sets the number of replies for the comment. public int? Replies { get; set; } Property Value int? Review Gets or sets, whether the comment is a review. public bool Review { get; set; } Property Value bool Spoiler Gets or sets, whether the comment contains spoiler. public bool Spoiler { get; set; } Property Value bool UpdatedAt Gets or sets the UTC datetime, when this comment was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the user, which has written the comment. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser UserStats Gets or sets the user stats for the comment. See also ITraktCommentUserStats. Nullable public ITraktCommentUserStats UserStats { get; set; } Property Value ITraktCommentUserStats"
  },
  "api/TraktNet.Objects.Basic.TraktCommentItem.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCommentItem.html",
    "title": "Class TraktCommentItem | Trakt.NET",
    "keywords": "Class TraktCommentItem Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt comment object item. public class TraktCommentItem : ITraktCommentItem Inheritance object TraktCommentItem Implements ITraktCommentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the comment episode item, if Type is set to Episode. public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the comment list item, if Type is set to List. public ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the comment movie item, if Type is set to Movie. public ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the comment season item, if Type is set to Season. public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the comment show item, if Type is set to Show. public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type of the comment item. public TraktObjectType Type { get; set; } Property Value TraktObjectType"
  },
  "api/TraktNet.Objects.Basic.TraktCommentLike.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCommentLike.html",
    "title": "Class TraktCommentLike | Trakt.NET",
    "keywords": "Class TraktCommentLike Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt comment like. public class TraktCommentLike : ITraktCommentLike Inheritance object TraktCommentLike Implements ITraktCommentLike Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LikedAt Gets or sets the UTC datetime, when the comment was liked. public DateTime? LikedAt { get; set; } Property Value DateTime? User Gets or sets the user, who liked the comment. public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Basic.TraktCommentUserStats.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCommentUserStats.html",
    "title": "Class TraktCommentUserStats | Trakt.NET",
    "keywords": "Class TraktCommentUserStats Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt user stats for a comment or reply. public class TraktCommentUserStats : ITraktCommentUserStats Inheritance object TraktCommentUserStats Implements ITraktCommentUserStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CompletedCount Gets or sets the user completed count for the comment. public int? CompletedCount { get; set; } Property Value int? PlayCount Gets or sets the user play count for the comment. public int? PlayCount { get; set; } Property Value int? Rating Gets or sets the user rating for the comment. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Basic.TraktConnections.html": {
    "href": "api/TraktNet.Objects.Basic.TraktConnections.html",
    "title": "Class TraktConnections | Trakt.NET",
    "keywords": "Class TraktConnections Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents Trakt connection options. public class TraktConnections : ITraktConnections Inheritance object TraktConnections Implements ITraktConnections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Apple Gets or sets, whether Apple connection is enabled. public bool? Apple { get; set; } Property Value bool? Dropbox Gets or sets, whether Dropbox connection is enabled. public bool? Dropbox { get; set; } Property Value bool? Facebook Gets or sets, whether Facebook connection is enabled. public bool? Facebook { get; set; } Property Value bool? Google Gets or sets, whether Google connection is enabled. public bool? Google { get; set; } Property Value bool? Mastodon Gets or sets, whether Mastodon connection is enabled. public bool? Mastodon { get; set; } Property Value bool? Medium Gets or sets, whether Medium connection is enabled. public bool? Medium { get; set; } Property Value bool? Microsoft Gets or sets, whether Microsoft connection is enabled. public bool? Microsoft { get; set; } Property Value bool? Slack Gets or sets, whether Slack connection is enabled. public bool? Slack { get; set; } Property Value bool? Tumblr Gets or sets, whether Tumblr connection is enabled. public bool? Tumblr { get; set; } Property Value bool? Twitter Gets or sets, whether Twitter connection is enabled. public bool? Twitter { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Basic.TraktCountry.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCountry.html",
    "title": "Class TraktCountry | Trakt.NET",
    "keywords": "Class TraktCountry Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public class TraktCountry : ITraktCountry Inheritance object TraktCountry Implements ITraktCountry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Code public string Code { get; set; } Property Value string Name public string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktCrew.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCrew.html",
    "title": "Class TraktCrew | Trakt.NET",
    "keywords": "Class TraktCrew Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of crew members in different categories. public class TraktCrew : ITraktCrew Inheritance object TraktCrew Implements ITraktCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Art Gets or sets a list of crew members in the art category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Art { get; set; } Property Value IList<ITraktCrewMember> Camera Gets or sets a list of crew members in the camera category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Camera { get; set; } Property Value IList<ITraktCrewMember> CostumeAndMakeup Gets or sets a list of crew members in the costume and make-up category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> CostumeAndMakeup { get; set; } Property Value IList<ITraktCrewMember> Crew Gets or sets a list of crew members. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Crew { get; set; } Property Value IList<ITraktCrewMember> Directing Gets or sets a list of crew members in the directing category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Directing { get; set; } Property Value IList<ITraktCrewMember> Editing Gets or sets a list of crew members in the editing category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Editing { get; set; } Property Value IList<ITraktCrewMember> Lighting Gets or sets a list of crew members in the lighting category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Lighting { get; set; } Property Value IList<ITraktCrewMember> Production Gets or sets a list of crew members in the production category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Production { get; set; } Property Value IList<ITraktCrewMember> Sound Gets or sets a list of crew members in the sound category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Sound { get; set; } Property Value IList<ITraktCrewMember> VisualEffects Gets or sets a list of crew members in the visual effects category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> VisualEffects { get; set; } Property Value IList<ITraktCrewMember> Writing Gets or sets a list of crew members in the writing category. See also ITraktCrewMember. Nullable public IList<ITraktCrewMember> Writing { get; set; } Property Value IList<ITraktCrewMember>"
  },
  "api/TraktNet.Objects.Basic.TraktCrewMember.html": {
    "href": "api/TraktNet.Objects.Basic.TraktCrewMember.html",
    "title": "Class TraktCrewMember | Trakt.NET",
    "keywords": "Class TraktCrewMember Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt crew member. public class TraktCrewMember : ITraktCrewMember Inheritance object TraktCrewMember Implements ITraktCrewMember Derived TraktShowCrewMember Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Jobs Gets or sets the jobs collection of the crew member. Nullable public IList<string> Jobs { get; set; } Property Value IList<string> Person Gets or sets the crew member. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson"
  },
  "api/TraktNet.Objects.Basic.TraktError.html": {
    "href": "api/TraktNet.Objects.Basic.TraktError.html",
    "title": "Class TraktError | Trakt.NET",
    "keywords": "Class TraktError Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt error response. public class TraktError : ITraktError Inheritance object TraktError Implements ITraktError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Gets or sets the error description. Nullable public string Description { get; set; } Property Value string Error Gets or sets the error name. Nullable public string Error { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktGenre.html": {
    "href": "api/TraktNet.Objects.Basic.TraktGenre.html",
    "title": "Class TraktGenre | Trakt.NET",
    "keywords": "Class TraktGenre Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt genre. public class TraktGenre : ITraktGenre Inheritance object TraktGenre Implements ITraktGenre Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Name Gets or sets the genre name. Nullable public string Name { get; set; } Property Value string Slug Gets or sets the Trakt slug of the genre. Nullable public string Slug { get; set; } Property Value string Type Gets or sets the genre type. See also TraktGenreType. Nullable public TraktGenreType Type { get; set; } Property Value TraktGenreType Methods ToString() Gets a string representation of the genre. public override string ToString() Returns string A string representation of the genre."
  },
  "api/TraktNet.Objects.Basic.TraktIds.html": {
    "href": "api/TraktNet.Objects.Basic.TraktIds.html",
    "title": "Class TraktIds | Trakt.NET",
    "keywords": "Class TraktIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id. public class TraktIds : ITraktIds, IIds Inheritance object TraktIds Implements ITraktIds IIds Derived TraktShowIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Imdb Gets or sets the id from imdb.com Nullable public string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable public string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com public uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com public uint? Tvdb { get; set; } Property Value uint? Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set. ToString() Gets a string representation of the ids. public override string ToString() Returns string A string representation of the ids."
  },
  "api/TraktNet.Objects.Basic.TraktImage.html": {
    "href": "api/TraktNet.Objects.Basic.TraktImage.html",
    "title": "Class TraktImage | Trakt.NET",
    "keywords": "Class TraktImage Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll An image for an item available in only one size. public class TraktImage : ITraktImage Inheritance object TraktImage Implements ITraktImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Full The address to the full size image. Nullable public string Full { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktLanguage.html": {
    "href": "api/TraktNet.Objects.Basic.TraktLanguage.html",
    "title": "Class TraktLanguage | Trakt.NET",
    "keywords": "Class TraktLanguage Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt language. public class TraktLanguage : ITraktLanguage Inheritance object TraktLanguage Implements ITraktLanguage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Code Gets or sets the code of the language. public string Code { get; set; } Property Value string Name Gets or sets the name of the language. public string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktMetadata.html": {
    "href": "api/TraktNet.Objects.Basic.TraktMetadata.html",
    "title": "Class TraktMetadata | Trakt.NET",
    "keywords": "Class TraktMetadata Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Contains metadata information for collection items. public class TraktMetadata : ITraktMetadata Inheritance object TraktMetadata Implements ITraktMetadata Derived TraktSyncCollectionPostEpisode TraktSyncCollectionPostMovie TraktSyncCollectionPostSeason TraktSyncCollectionPostShow TraktSyncCollectionPostShowEpisode TraktSyncCollectionPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Audio Gets or sets the media audio type. See also TraktMediaAudio. Nullable public TraktMediaAudio Audio { get; set; } Property Value TraktMediaAudio AudioChannels Gets or sets the media audio channels. See also TraktMediaAudioChannel. Nullable public TraktMediaAudioChannel AudioChannels { get; set; } Property Value TraktMediaAudioChannel HDR Gets or sets the media HDR support. See also TraktMediaHDR. Nullable public TraktMediaHDR HDR { get; set; } Property Value TraktMediaHDR MediaResolution Gets or sets the media resolution. See also TraktMediaResolution. Nullable public TraktMediaResolution MediaResolution { get; set; } Property Value TraktMediaResolution MediaType Gets or sets the media type. See also TraktMediaType. Nullable public TraktMediaType MediaType { get; set; } Property Value TraktMediaType ThreeDimensional Gets or sets, whether the media is in 3D. public bool? ThreeDimensional { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Basic.TraktNetwork.html": {
    "href": "api/TraktNet.Objects.Basic.TraktNetwork.html",
    "title": "Class TraktNetwork | Trakt.NET",
    "keywords": "Class TraktNetwork Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt network. public class TraktNetwork : ITraktNetwork Inheritance object TraktNetwork Implements ITraktNetwork Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Country Gets or sets the country code for the network. Nullable public string Country { get; set; } Property Value string Ids Gets or sets the collection of ids for the network for various web services. See also ITraktNetworkIds. Nullable public ITraktNetworkIds Ids { get; set; } Property Value ITraktNetworkIds Name Gets or sets the network name. Nullable public string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktNetworkIds.html": {
    "href": "api/TraktNet.Objects.Basic.TraktNetworkIds.html",
    "title": "Class TraktNetworkIds | Trakt.NET",
    "keywords": "Class TraktNetworkIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id. public class TraktNetworkIds : ITraktNetworkIds, IIds Inheritance object TraktNetworkIds Implements ITraktNetworkIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Tmdb Gets or sets the numeric id from themoviedb.org public uint Tmdb { get; set; } Property Value uint Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Basic.TraktRateLimitInfo.html": {
    "href": "api/TraktNet.Objects.Basic.TraktRateLimitInfo.html",
    "title": "Class TraktRateLimitInfo | Trakt.NET",
    "keywords": "Class TraktRateLimitInfo Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll public class TraktRateLimitInfo : ITraktRateLimitInfo Inheritance object TraktRateLimitInfo Implements ITraktRateLimitInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Limit public int? Limit { get; set; } Property Value int? Name public string Name { get; set; } Property Value string Period public int? Period { get; set; } Property Value int? Remaining public int? Remaining { get; set; } Property Value int? Until public DateTime? Until { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Basic.TraktRating.html": {
    "href": "api/TraktNet.Objects.Basic.TraktRating.html",
    "title": "Class TraktRating | Trakt.NET",
    "keywords": "Class TraktRating Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents a Trakt rating. public class TraktRating : ITraktRating Inheritance object TraktRating Implements ITraktRating Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Distribution Gets or sets the rating distribution. Nullable public IDictionary<string, int> Distribution { get; set; } Property Value IDictionary<string, int> Rating Gets or sets the rating value. public float? Rating { get; set; } Property Value float? Votes Gets or sets the number of votes for this rating. public int? Votes { get; set; } Property Value int? Methods ToString() Gets a string representation of the rating. public override string ToString() Returns string A string representation of the rating."
  },
  "api/TraktNet.Objects.Basic.TraktSearchResult.html": {
    "href": "api/TraktNet.Objects.Basic.TraktSearchResult.html",
    "title": "Class TraktSearchResult | Trakt.NET",
    "keywords": "Class TraktSearchResult Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt search result. public class TraktSearchResult : ITraktSearchResult Inheritance object TraktSearchResult Implements ITraktSearchResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the result episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the result list, if Type is List. See also ITraktList. Nullable public ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the result movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Person Gets or sets the result person, if Type is Person. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson Score Gets or sets the result score. public float? Score { get; set; } Property Value float? Show Gets or sets the result show, if Type is Show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the result type. See also TraktSearchResultType. Nullable public TraktSearchResultType Type { get; set; } Property Value TraktSearchResultType"
  },
  "api/TraktNet.Objects.Basic.TraktStatistics.html": {
    "href": "api/TraktNet.Objects.Basic.TraktStatistics.html",
    "title": "Class TraktStatistics | Trakt.NET",
    "keywords": "Class TraktStatistics Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll Represents Trakt statistics. public class TraktStatistics : ITraktStatistics Inheritance object TraktStatistics Implements ITraktStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedEpisodes Gets or sets the number of collected episodes. public int? CollectedEpisodes { get; set; } Property Value int? Collectors Gets or sets the number of collectors. public int? Collectors { get; set; } Property Value int? Comments Gets or sets the number of comments. public int? Comments { get; set; } Property Value int? Lists Gets or sets the number of lists. public int? Lists { get; set; } Property Value int? Plays Gets or sets the number of playes. public int? Plays { get; set; } Property Value int? Recommended Gets or sets the number of recommendations. public int? Recommended { get; set; } Property Value int? Votes Gets or sets the number of votes. public int? Votes { get; set; } Property Value int? Watchers Gets or sets the number of watchers. public int? Watchers { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Basic.TraktStudio.html": {
    "href": "api/TraktNet.Objects.Basic.TraktStudio.html",
    "title": "Class TraktStudio | Trakt.NET",
    "keywords": "Class TraktStudio Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt studio. public class TraktStudio : ITraktStudio Inheritance object TraktStudio Implements ITraktStudio Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CountryCode Gets or sets the content country code of the studio. Nullable public string CountryCode { get; set; } Property Value string Ids Gets or sets the collection of ids for the studio for various web services. See also ITraktStudioIds. Nullable public ITraktStudioIds Ids { get; set; } Property Value ITraktStudioIds Name Gets or sets the studio name. Nullable public string Name { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Basic.TraktStudioIds.html": {
    "href": "api/TraktNet.Objects.Basic.TraktStudioIds.html",
    "title": "Class TraktStudioIds | Trakt.NET",
    "keywords": "Class TraktStudioIds Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt studio. public class TraktStudioIds : ITraktStudioIds, IIds Inheritance object TraktStudioIds Implements ITraktStudioIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Slug Gets or sets the Trakt slug. Nullable public string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Basic.TraktTranslation.html": {
    "href": "api/TraktNet.Objects.Basic.TraktTranslation.html",
    "title": "Class TraktTranslation | Trakt.NET",
    "keywords": "Class TraktTranslation Namespace TraktNet.Objects.Basic Assembly Trakt.NET.dll A Trakt translation. public abstract class TraktTranslation : ITraktTranslation Inheritance object TraktTranslation Implements ITraktTranslation Derived TraktEpisodeTranslation TraktMovieTranslation TraktSeasonTranslation TraktShowTranslation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CountryCode Gets or sets the two letter country code for the translation. Nullable public string CountryCode { get; set; } Property Value string LanguageCode Gets or sets the two letter language code for the translation. Nullable public string LanguageCode { get; set; } Property Value string Overview Gets or sets the synopsis of the release. Nullable public string Overview { get; set; } Property Value string Title Gets or sets the title of the translation. Nullable public string Title { get; set; } Property Value string Methods ToString() Gets a string representation of the translation. public override string ToString() Returns string A string representation of the translation."
  },
  "api/TraktNet.Objects.Basic.html": {
    "href": "api/TraktNet.Objects.Basic.html",
    "title": "Namespace TraktNet.Objects.Basic | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Basic Classes TraktCastAndCrew Represents a collection of cast- and crew-members. TraktCastMember A Trakt cast member. TraktCertification A Trakt certification. TraktCertifications Represents a collection of Trakt certifications. TraktComment A Trakt comment or reply. TraktCommentItem Represents a Trakt comment object item. TraktCommentLike Represents a Trakt comment like. TraktCommentUserStats A Trakt user stats for a comment or reply. TraktConnections Represents Trakt connection options. TraktCountry TraktCrew A collection of crew members in different categories. TraktCrewMember A Trakt crew member. TraktError Represents a Trakt error response. TraktGenre A Trakt genre. TraktIds A collection of ids for various web services, including the Trakt id. TraktImage An image for an item available in only one size. TraktLanguage A Trakt language. TraktMetadata Contains metadata information for collection items. TraktNetwork A Trakt network. TraktNetworkIds A collection of ids for various web services, including the Trakt id. TraktRateLimitInfo TraktRating Represents a Trakt rating. TraktSearchResult A Trakt search result. TraktStatistics Represents Trakt statistics. TraktStudio A Trakt studio. TraktStudioIds A collection of ids for various web services, including the Trakt id, for a Trakt studio. TraktTranslation A Trakt translation. Interfaces IIds ITraktCastAndCrew Represents a collection of cast- and crew-members. ITraktCastMember A Trakt cast member. ITraktCertification A Trakt certification. ITraktCertifications Represents a collection of Trakt certifications. ITraktComment A Trakt comment or reply. ITraktCommentItem Represents a Trakt comment object item. ITraktCommentLike Represents a Trakt comment like. ITraktCommentUserStats A Trakt user stats for a comment or reply. ITraktConnections Represents Trakt connection options. ITraktCountry ITraktCrew A collection of crew members in different categories. ITraktCrewMember A Trakt crew member. ITraktError Represents a Trakt error response. ITraktGenre A Trakt genre. ITraktIds A collection of ids for various web services, including the Trakt id. ITraktImage An image for an item available in only one size. ITraktLanguage ITraktMetadata Contains metadata information for collection items. ITraktNetwork A Trakt network. ITraktNetworkIds A collection of ids for various web services, including the Trakt id. ITraktRateLimitInfo ITraktRating Represents a Trakt rating. ITraktSearchResult A Trakt search result. ITraktStatistics Represents Trakt statistics. ITraktStudio A Trakt studio. ITraktStudioIds A collection of ids for various web services, including the Trakt id, for a Trakt studio. ITraktTranslation A Trakt translation."
  },
  "api/TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.ITraktCalendarEpisode.html",
    "title": "Interface ITraktCalendarEpisode | Trakt.NET",
    "keywords": "Interface ITraktCalendarEpisode Namespace TraktNet.Objects.Get.Calendars Assembly Trakt.NET.dll public interface ITraktCalendarEpisode Properties AbsoluteEpisodeNumber Gets or sets the absolute episode number of all episodes in all seasons. int? AbsoluteEpisodeNumber { get; set; } Property Value int? AvailableEpisodeTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the episode. Nullable IList<string> AvailableEpisodeTranslationLanguageCodes { get; set; } Property Value IList<string> EpisodeAiredFirstAt Gets or sets the UTC datetime when the episode was first aired. DateTime? EpisodeAiredFirstAt { get; set; } Property Value DateTime? EpisodeCommentCount Gets or sets the comment count of the episode. Nullable int? EpisodeCommentCount { get; set; } Property Value int? EpisodeIds Gets or sets the collection of ids for the episode for various web services. See also ITraktEpisodeIds. Nullable ITraktEpisodeIds EpisodeIds { get; set; } Property Value ITraktEpisodeIds EpisodeNumber Gets or sets the episode number within the season to which it belongs. int? EpisodeNumber { get; set; } Property Value int? EpisodeOverview Gets or sets the synopsis of the episode. Nullable string EpisodeOverview { get; set; } Property Value string EpisodeRating Gets or sets the average user rating of the episode. float? EpisodeRating { get; set; } Property Value float? EpisodeRuntime Gets or sets the runtime of the episode. int? EpisodeRuntime { get; set; } Property Value int? EpisodeTitle Gets or sets the episode title. Nullable string EpisodeTitle { get; set; } Property Value string EpisodeTranslations Gets or sets the list of ITraktEpisodeTranslations for the episode. Nullable IList<ITraktEpisodeTranslation> EpisodeTranslations { get; set; } Property Value IList<ITraktEpisodeTranslation> Remarks This property is set automatically if this episode is in a Episodes collection and the episode's season is in a collection of seasons returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. This property is also set automatically if this episode is in a collection returned by GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. See Also Episodes EpisodeUpdatedAt Gets or sets the UTC datetime when the episode was last updated. DateTime? EpisodeUpdatedAt { get; set; } Property Value DateTime? EpisodeVotes Gets or sets the number of votes for the episode. int? EpisodeVotes { get; set; } Property Value int? SeasonNumber Gets or sets the season number in which the episode was aired. int? SeasonNumber { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Calendars.ITraktCalendarMovie.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.ITraktCalendarMovie.html",
    "title": "Interface ITraktCalendarMovie | Trakt.NET",
    "keywords": "Interface ITraktCalendarMovie Namespace TraktNet.Objects.Get.Calendars Assembly Trakt.NET.dll A Trakt calendar movie. public interface ITraktCalendarMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties CalendarRelease Gets or sets the release date of the Movie. Nullable DateTime? CalendarRelease { get; set; } Property Value DateTime? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.Calendars.ITraktCalendarShow.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.ITraktCalendarShow.html",
    "title": "Interface ITraktCalendarShow | Trakt.NET",
    "keywords": "Interface ITraktCalendarShow Namespace TraktNet.Objects.Get.Calendars Assembly Trakt.NET.dll A Trakt calendar show, containing episode and show information. public interface ITraktCalendarShow : ITraktShow, ITraktCalendarEpisode Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount ITraktCalendarEpisode.SeasonNumber ITraktCalendarEpisode.EpisodeNumber ITraktCalendarEpisode.EpisodeTitle ITraktCalendarEpisode.EpisodeIds ITraktCalendarEpisode.AbsoluteEpisodeNumber ITraktCalendarEpisode.EpisodeOverview ITraktCalendarEpisode.EpisodeRuntime ITraktCalendarEpisode.EpisodeRating ITraktCalendarEpisode.EpisodeVotes ITraktCalendarEpisode.EpisodeAiredFirstAt ITraktCalendarEpisode.EpisodeUpdatedAt ITraktCalendarEpisode.AvailableEpisodeTranslationLanguageCodes ITraktCalendarEpisode.EpisodeTranslations ITraktCalendarEpisode.EpisodeCommentCount Properties Episode Gets or sets the Trakt episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode FirstAiredInCalendar Gets or sets the UTC datetime, when the Episode first aired. DateTime? FirstAiredInCalendar { get; set; } Property Value DateTime? Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.Calendars.TraktCalendarMovie.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.TraktCalendarMovie.html",
    "title": "Class TraktCalendarMovie | Trakt.NET",
    "keywords": "Class TraktCalendarMovie Namespace TraktNet.Objects.Get.Calendars Assembly Trakt.NET.dll A Trakt calendar movie. public class TraktCalendarMovie : ITraktCalendarMovie, ITraktMovie Inheritance object TraktCalendarMovie Implements ITraktCalendarMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> CalendarRelease Gets or sets the release date of the Movie. Nullable public DateTime? CalendarRelease { get; set; } Property Value DateTime? Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Calendars.TraktCalendarShow.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.TraktCalendarShow.html",
    "title": "Class TraktCalendarShow | Trakt.NET",
    "keywords": "Class TraktCalendarShow Namespace TraktNet.Objects.Get.Calendars Assembly Trakt.NET.dll A Trakt calendar show, containing episode and show information. public class TraktCalendarShow : ITraktCalendarShow, ITraktShow, ITraktCalendarEpisode Inheritance object TraktCalendarShow Implements ITraktCalendarShow ITraktShow ITraktCalendarEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AbsoluteEpisodeNumber Gets or sets the absolute episode number of all episodes in all seasons. public int? AbsoluteEpisodeNumber { get; set; } Property Value int? AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableEpisodeTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the episode. Nullable public IList<string> AvailableEpisodeTranslationLanguageCodes { get; set; } Property Value IList<string> AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string Episode Gets or sets the Trakt episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode EpisodeAiredFirstAt Gets or sets the UTC datetime when the episode was first aired. public DateTime? EpisodeAiredFirstAt { get; set; } Property Value DateTime? EpisodeCommentCount Gets or sets the comment count of the episode. Nullable public int? EpisodeCommentCount { get; set; } Property Value int? EpisodeIds Gets or sets the collection of ids for the episode for various web services. See also ITraktEpisodeIds. Nullable public ITraktEpisodeIds EpisodeIds { get; set; } Property Value ITraktEpisodeIds EpisodeNumber Gets or sets the episode number within the season to which it belongs. public int? EpisodeNumber { get; set; } Property Value int? EpisodeOverview Gets or sets the synopsis of the episode. Nullable public string EpisodeOverview { get; set; } Property Value string EpisodeRating Gets or sets the average user rating of the episode. public float? EpisodeRating { get; set; } Property Value float? EpisodeRuntime Gets or sets the runtime of the episode. public int? EpisodeRuntime { get; set; } Property Value int? EpisodeTitle Gets or sets the episode title. Nullable public string EpisodeTitle { get; set; } Property Value string EpisodeTranslations Gets or sets the list of ITraktEpisodeTranslations for the episode. Nullable public IList<ITraktEpisodeTranslation> EpisodeTranslations { get; set; } Property Value IList<ITraktEpisodeTranslation> Remarks This property is set automatically if this episode is in a Episodes collection and the episode's season is in a collection of seasons returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. This property is also set automatically if this episode is in a collection returned by GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. See Also Episodes EpisodeUpdatedAt Gets or sets the UTC datetime when the episode was last updated. public DateTime? EpisodeUpdatedAt { get; set; } Property Value DateTime? EpisodeVotes Gets or sets the number of votes for the episode. public int? EpisodeVotes { get; set; } Property Value int? FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? FirstAiredInCalendar Gets or sets the UTC datetime, when the Episode first aired. public DateTime? FirstAiredInCalendar { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? SeasonNumber Gets or sets the season number in which the episode was aired. public int? SeasonNumber { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Calendars.html": {
    "href": "api/TraktNet.Objects.Get.Calendars.html",
    "title": "Namespace TraktNet.Objects.Get.Calendars | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Calendars Classes TraktCalendarMovie A Trakt calendar movie. TraktCalendarShow A Trakt calendar show, containing episode and show information. Interfaces ITraktCalendarEpisode ITraktCalendarMovie A Trakt calendar movie. ITraktCalendarShow A Trakt calendar show, containing episode and show information."
  },
  "api/TraktNet.Objects.Get.Collections.ITraktCollectionMovie.html": {
    "href": "api/TraktNet.Objects.Get.Collections.ITraktCollectionMovie.html",
    "title": "Interface ITraktCollectionMovie | Trakt.NET",
    "keywords": "Interface ITraktCollectionMovie Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt movie. public interface ITraktCollectionMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties CollectedAt Gets or sets the UTC datetime, when the movie was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Metadata Gets or sets metadata about the collected movie. See also ITraktMetadata. Nullable ITraktMetadata Metadata { get; set; } Property Value ITraktMetadata Movie Gets or sets the collected Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie MovieUpdatedAt DateTime? MovieUpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Collections.ITraktCollectionShow.html": {
    "href": "api/TraktNet.Objects.Get.Collections.ITraktCollectionShow.html",
    "title": "Interface ITraktCollectionShow | Trakt.NET",
    "keywords": "Interface ITraktCollectionShow Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt show. public interface ITraktCollectionShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties CollectionSeasons Gets or sets a list of collected seasons in the collected show. See also ITraktCollectionShowSeason. Nullable IList<ITraktCollectionShowSeason> CollectionSeasons { get; set; } Property Value IList<ITraktCollectionShowSeason> LastCollectedAt Gets or sets the UTC datetime, when the last episode was collected in the show. DateTime? LastCollectedAt { get; set; } Property Value DateTime? LastUpdatedAt Gets or sets the UTC datetime, when the show was last updated. DateTime? LastUpdatedAt { get; set; } Property Value DateTime? Show Gets or sets the collected Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Collections.ITraktCollectionShowEpisode.html",
    "title": "Interface ITraktCollectionShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktCollectionShowEpisode Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt episode. public interface ITraktCollectionShowEpisode Properties CollectedAt Gets or sets the UTC datetime, when the episode was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Metadata Gets or sets metadata about the collected episode. See also ITraktMetadata. Nullable ITraktMetadata Metadata { get; set; } Property Value ITraktMetadata Number Gets or sets the number of the collected episode. int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason.html": {
    "href": "api/TraktNet.Objects.Get.Collections.ITraktCollectionShowSeason.html",
    "title": "Interface ITraktCollectionShowSeason | Trakt.NET",
    "keywords": "Interface ITraktCollectionShowSeason Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt season. public interface ITraktCollectionShowSeason Properties Episodes Gets or sets a list of collected episodes in the collected season. See also ITraktCollectionShowEpisode. Nullable IList<ITraktCollectionShowEpisode> Episodes { get; set; } Property Value IList<ITraktCollectionShowEpisode> Number Gets or sets the number of the collected season. int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.TraktCollectionMovie.html": {
    "href": "api/TraktNet.Objects.Get.Collections.TraktCollectionMovie.html",
    "title": "Class TraktCollectionMovie | Trakt.NET",
    "keywords": "Class TraktCollectionMovie Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt movie. public class TraktCollectionMovie : ITraktCollectionMovie, ITraktMovie Inheritance object TraktCollectionMovie Implements ITraktCollectionMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CollectedAt Gets or sets the UTC datetime, when the movie was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Metadata Gets or sets metadata about the collected movie. See also ITraktMetadata. Nullable public ITraktMetadata Metadata { get; set; } Property Value ITraktMetadata Movie Gets or sets the collected Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie MovieUpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? MovieUpdatedAt { get; set; } Property Value DateTime? Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime, when the movie was updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.TraktCollectionShow.html": {
    "href": "api/TraktNet.Objects.Get.Collections.TraktCollectionShow.html",
    "title": "Class TraktCollectionShow | Trakt.NET",
    "keywords": "Class TraktCollectionShow Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt show. public class TraktCollectionShow : ITraktCollectionShow, ITraktShow Inheritance object TraktCollectionShow Implements ITraktCollectionShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CollectionSeasons Gets or sets a list of collected seasons in the collected show. See also ITraktCollectionShowSeason. Nullable public IList<ITraktCollectionShowSeason> CollectionSeasons { get; set; } Property Value IList<ITraktCollectionShowSeason> CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string LastCollectedAt Gets or sets the UTC datetime, when the last episode was collected in the show. public DateTime? LastCollectedAt { get; set; } Property Value DateTime? LastUpdatedAt Gets or sets the UTC datetime, when the show was last updated. public DateTime? LastUpdatedAt { get; set; } Property Value DateTime? Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the collected Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Collections.TraktCollectionShowEpisode.html",
    "title": "Class TraktCollectionShowEpisode | Trakt.NET",
    "keywords": "Class TraktCollectionShowEpisode Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt episode. public class TraktCollectionShowEpisode : ITraktCollectionShowEpisode Inheritance object TraktCollectionShowEpisode Implements ITraktCollectionShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the UTC datetime, when the episode was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? Metadata Gets or sets metadata about the collected episode. See also ITraktMetadata. Nullable public ITraktMetadata Metadata { get; set; } Property Value ITraktMetadata Number Gets or sets the number of the collected episode. public int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.TraktCollectionShowSeason.html": {
    "href": "api/TraktNet.Objects.Get.Collections.TraktCollectionShowSeason.html",
    "title": "Class TraktCollectionShowSeason | Trakt.NET",
    "keywords": "Class TraktCollectionShowSeason Namespace TraktNet.Objects.Get.Collections Assembly Trakt.NET.dll Contains information about a collected Trakt season. public class TraktCollectionShowSeason : ITraktCollectionShowSeason Inheritance object TraktCollectionShowSeason Implements ITraktCollectionShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets a list of collected episodes in the collected season. See also ITraktCollectionShowEpisode. Nullable public IList<ITraktCollectionShowEpisode> Episodes { get; set; } Property Value IList<ITraktCollectionShowEpisode> Number Gets or sets the number of the collected season. public int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Collections.html": {
    "href": "api/TraktNet.Objects.Get.Collections.html",
    "title": "Namespace TraktNet.Objects.Get.Collections | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Collections Classes TraktCollectionMovie Contains information about a collected Trakt movie. TraktCollectionShow Contains information about a collected Trakt show. TraktCollectionShowEpisode Contains information about a collected Trakt episode. TraktCollectionShowSeason Contains information about a collected Trakt season. Interfaces ITraktCollectionMovie Contains information about a collected Trakt movie. ITraktCollectionShow Contains information about a collected Trakt show. ITraktCollectionShowEpisode Contains information about a collected Trakt episode. ITraktCollectionShowSeason Contains information about a collected Trakt season."
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisode.html",
    "title": "Interface ITraktEpisode | Trakt.NET",
    "keywords": "Interface ITraktEpisode Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A Trakt episode of a Trakt season. public interface ITraktEpisode Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the episode. Nullable IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> CommentCount Gets or sets the comment count of the episode. Nullable int? CommentCount { get; set; } Property Value int? EpisodeType Gets or sets the episode type. See also TraktEpisodeType. Nullable TraktEpisodeType EpisodeType { get; set; } Property Value TraktEpisodeType FirstAired Gets or sets the UTC datetime when the episode was first aired. DateTime? FirstAired { get; set; } Property Value DateTime? Ids Gets or sets the collection of ids for the episode for various web services. See also ITraktEpisodeIds. Nullable ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Number Gets or sets the episode number within the season to which it belongs. int? Number { get; set; } Property Value int? NumberAbsolute Gets or sets the absolute episode number of all episodes in all seasons. int? NumberAbsolute { get; set; } Property Value int? Overview Gets or sets the synopsis of the episode. Nullable string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the episode. float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime of the episode. int? Runtime { get; set; } Property Value int? SeasonNumber Gets or sets the season number in which the episode was aired. int? SeasonNumber { get; set; } Property Value int? Title Gets or sets the episode title. Nullable string Title { get; set; } Property Value string Translations Gets or sets the list of ITraktEpisodeTranslations for the episode. Nullable IList<ITraktEpisodeTranslation> Translations { get; set; } Property Value IList<ITraktEpisodeTranslation> Remarks This property is set automatically if this episode is in a Episodes collection and the episode's season is in a collection of seasons returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. This property is also set automatically if this episode is in a collection returned by GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. See Also Episodes UpdatedAt Gets or sets the UTC datetime when the episode was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the episode. int? Votes { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeCollectionProgress.html",
    "title": "Interface ITraktEpisodeCollectionProgress | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCollectionProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the collection progress of a Trakt episode. public interface ITraktEpisodeCollectionProgress : ITraktEpisodeProgress Inherited Members ITraktEpisodeProgress.Number ITraktEpisodeProgress.Completed Properties CollectedAt Gets or sets the UTC datetime, when the episode was collected. DateTime? CollectedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeIds.html",
    "title": "Interface ITraktEpisodeIds | Trakt.NET",
    "keywords": "Interface ITraktEpisodeIds Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt episode. public interface ITraktEpisodeIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Imdb Gets or sets the id from imdb.com Nullable string Imdb { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com uint? Tvdb { get; set; } Property Value uint?"
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeProgress.html",
    "title": "Interface ITraktEpisodeProgress | Trakt.NET",
    "keywords": "Interface ITraktEpisodeProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the progress of a Trakt episode. public interface ITraktEpisodeProgress Properties Completed Gets or sets, whether the episode was collected or watched. bool? Completed { get; set; } Property Value bool? Number Gets or sets the number of the collected or watched episode. int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeTranslation.html",
    "title": "Interface ITraktEpisodeTranslation | Trakt.NET",
    "keywords": "Interface ITraktEpisodeTranslation Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A translation for a Trakt episode. public interface ITraktEpisodeTranslation : ITraktTranslation Inherited Members ITraktTranslation.Title ITraktTranslation.Overview ITraktTranslation.LanguageCode ITraktTranslation.CountryCode"
  },
  "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.ITraktEpisodeWatchedProgress.html",
    "title": "Interface ITraktEpisodeWatchedProgress | Trakt.NET",
    "keywords": "Interface ITraktEpisodeWatchedProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the watched progress of a Trakt episode. public interface ITraktEpisodeWatchedProgress : ITraktEpisodeProgress Inherited Members ITraktEpisodeProgress.Number ITraktEpisodeProgress.Completed Properties LastWatchedAt Gets or sets the UTC datetime, when the last watch occured. DateTime? LastWatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisode.html",
    "title": "Class TraktEpisode | Trakt.NET",
    "keywords": "Class TraktEpisode Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A Trakt episode of a Trakt season. public class TraktEpisode : ITraktEpisode Inheritance object TraktEpisode Implements ITraktEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the episode. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> CommentCount Gets or sets the comment count of the episode. Nullable public int? CommentCount { get; set; } Property Value int? EpisodeType Gets or sets the episode type. See also TraktEpisodeType. Nullable public TraktEpisodeType EpisodeType { get; set; } Property Value TraktEpisodeType FirstAired Gets or sets the UTC datetime when the episode was first aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Ids Gets or sets the collection of ids for the episode for various web services. See also ITraktEpisodeIds. Nullable public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Number Gets or sets the episode number within the season to which it belongs. public int? Number { get; set; } Property Value int? NumberAbsolute Gets or sets the absolute episode number of all episodes in all seasons. public int? NumberAbsolute { get; set; } Property Value int? Overview Gets or sets the synopsis of the episode. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the episode. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime of the episode. public int? Runtime { get; set; } Property Value int? SeasonNumber Gets or sets the season number in which the episode was aired. public int? SeasonNumber { get; set; } Property Value int? Title Gets or sets the episode title. Nullable public string Title { get; set; } Property Value string Translations Gets or sets the list of ITraktEpisodeTranslations for the episode. Nullable public IList<ITraktEpisodeTranslation> Translations { get; set; } Property Value IList<ITraktEpisodeTranslation> Remarks This property is set automatically if this episode is in a Episodes collection and the episode's season is in a collection of seasons returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. This property is also set automatically if this episode is in a collection returned by GetSeasonAsync(string, uint, TraktExtendedInfo, string, CancellationToken) and a translation language code was specified. See Also Episodes UpdatedAt Gets or sets the UTC datetime when the episode was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the episode. public int? Votes { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisodeCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisodeCollectionProgress.html",
    "title": "Class TraktEpisodeCollectionProgress | Trakt.NET",
    "keywords": "Class TraktEpisodeCollectionProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the collection progress of a Trakt episode. public class TraktEpisodeCollectionProgress : TraktEpisodeProgress, ITraktEpisodeCollectionProgress, ITraktEpisodeProgress Inheritance object TraktEpisodeProgress TraktEpisodeCollectionProgress Implements ITraktEpisodeCollectionProgress ITraktEpisodeProgress Inherited Members TraktEpisodeProgress.Number TraktEpisodeProgress.Completed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the UTC datetime, when the episode was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisodeIds.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisodeIds.html",
    "title": "Class TraktEpisodeIds | Trakt.NET",
    "keywords": "Class TraktEpisodeIds Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt episode. public class TraktEpisodeIds : ITraktEpisodeIds, IIds Inheritance object TraktEpisodeIds Implements ITraktEpisodeIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Imdb Gets or sets the id from imdb.com Nullable public string Imdb { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com public uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com public uint? Tvdb { get; set; } Property Value uint? Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisodeProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisodeProgress.html",
    "title": "Class TraktEpisodeProgress | Trakt.NET",
    "keywords": "Class TraktEpisodeProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the progress of a Trakt episode. public abstract class TraktEpisodeProgress : ITraktEpisodeProgress Inheritance object TraktEpisodeProgress Implements ITraktEpisodeProgress Derived TraktEpisodeCollectionProgress TraktEpisodeWatchedProgress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Completed Gets or sets, whether the episode was collected or watched. public bool? Completed { get; set; } Property Value bool? Number Gets or sets the number of the collected or watched episode. public int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisodeTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisodeTranslation.html",
    "title": "Class TraktEpisodeTranslation | Trakt.NET",
    "keywords": "Class TraktEpisodeTranslation Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll A translation for a Trakt episode. public class TraktEpisodeTranslation : TraktTranslation, ITraktEpisodeTranslation, ITraktTranslation Inheritance object TraktTranslation TraktEpisodeTranslation Implements ITraktEpisodeTranslation ITraktTranslation Inherited Members TraktTranslation.Title TraktTranslation.Overview TraktTranslation.LanguageCode TraktTranslation.CountryCode TraktTranslation.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/TraktNet.Objects.Get.Episodes.TraktEpisodeWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.TraktEpisodeWatchedProgress.html",
    "title": "Class TraktEpisodeWatchedProgress | Trakt.NET",
    "keywords": "Class TraktEpisodeWatchedProgress Namespace TraktNet.Objects.Get.Episodes Assembly Trakt.NET.dll Represents the watched progress of a Trakt episode. public class TraktEpisodeWatchedProgress : TraktEpisodeProgress, ITraktEpisodeWatchedProgress, ITraktEpisodeProgress Inheritance object TraktEpisodeProgress TraktEpisodeWatchedProgress Implements ITraktEpisodeWatchedProgress ITraktEpisodeProgress Inherited Members TraktEpisodeProgress.Number TraktEpisodeProgress.Completed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastWatchedAt Gets or sets the UTC datetime, when the last watch occured. public DateTime? LastWatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Episodes.html": {
    "href": "api/TraktNet.Objects.Get.Episodes.html",
    "title": "Namespace TraktNet.Objects.Get.Episodes | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Episodes Classes TraktEpisode A Trakt episode of a Trakt season. TraktEpisodeCollectionProgress Represents the collection progress of a Trakt episode. TraktEpisodeIds A collection of ids for various web services, including the Trakt id, for a Trakt episode. TraktEpisodeProgress Represents the progress of a Trakt episode. TraktEpisodeTranslation A translation for a Trakt episode. TraktEpisodeWatchedProgress Represents the watched progress of a Trakt episode. Interfaces ITraktEpisode A Trakt episode of a Trakt season. ITraktEpisodeCollectionProgress Represents the collection progress of a Trakt episode. ITraktEpisodeIds A collection of ids for various web services, including the Trakt id, for a Trakt episode. ITraktEpisodeProgress Represents the progress of a Trakt episode. ITraktEpisodeTranslation A translation for a Trakt episode. ITraktEpisodeWatchedProgress Represents the watched progress of a Trakt episode."
  },
  "api/TraktNet.Objects.Get.History.ITraktHistoryItem.html": {
    "href": "api/TraktNet.Objects.Get.History.ITraktHistoryItem.html",
    "title": "Interface ITraktHistoryItem | Trakt.NET",
    "keywords": "Interface ITraktHistoryItem Namespace TraktNet.Objects.Get.History Assembly Trakt.NET.dll A Trakt history item, containing a movie, show, season and / or episode and information about it. public interface ITraktHistoryItem Properties Action Gets or sets the type of action. See also TraktHistoryActionType. Nullable TraktHistoryActionType Action { get; set; } Property Value TraktHistoryActionType Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of this history item. ulong Id { get; set; } Property Value ulong Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this history item contains. See also TraktSyncItemType. Nullable TraktSyncItemType Type { get; set; } Property Value TraktSyncItemType WatchedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.History.TraktHistoryItem.html": {
    "href": "api/TraktNet.Objects.Get.History.TraktHistoryItem.html",
    "title": "Class TraktHistoryItem | Trakt.NET",
    "keywords": "Class TraktHistoryItem Namespace TraktNet.Objects.Get.History Assembly Trakt.NET.dll A Trakt history item, containing a movie, show, season and / or episode and information about it. public class TraktHistoryItem : ITraktHistoryItem Inheritance object TraktHistoryItem Implements ITraktHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Action Gets or sets the type of action. See also TraktHistoryActionType. Nullable public TraktHistoryActionType Action { get; set; } Property Value TraktHistoryActionType Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of this history item. public ulong Id { get; set; } Property Value ulong Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this history item contains. See also TraktSyncItemType. Nullable public TraktSyncItemType Type { get; set; } Property Value TraktSyncItemType WatchedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.History.html": {
    "href": "api/TraktNet.Objects.Get.History.html",
    "title": "Namespace TraktNet.Objects.Get.History | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.History Classes TraktHistoryItem A Trakt history item, containing a movie, show, season and / or episode and information about it. Interfaces ITraktHistoryItem A Trakt history item, containing a movie, show, season and / or episode and information about it."
  },
  "api/TraktNet.Objects.Get.Lists.ATraktTrendingOrPopularList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ATraktTrendingOrPopularList.html",
    "title": "Class ATraktTrendingOrPopularList | Trakt.NET",
    "keywords": "Class ATraktTrendingOrPopularList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll public abstract class ATraktTrendingOrPopularList : ITraktTrendingOrPopularList Inheritance object ATraktTrendingOrPopularList Implements ITraktTrendingOrPopularList Derived TraktPopularList TraktTrendingList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CommentCount Gets or sets the list comment count. public int? CommentCount { get; set; } Property Value int? LikeCount Gets or sets the list like count. public int? LikeCount { get; set; } Property Value int? List Gets or sets the actual list. See also ITraktList. Nullable public ITraktList List { get; set; } Property Value ITraktList"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktList.html",
    "title": "Interface ITraktList | Trakt.NET",
    "keywords": "Interface ITraktList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A Trakt list. public interface ITraktList Properties AllowComments Gets or sets, whether the list allows comments. bool? AllowComments { get; set; } Property Value bool? CommentCount Gets or sets the list comment count. int? CommentCount { get; set; } Property Value int? CreatedAt Gets or sets the UTC datetime when the list was created. DateTime? CreatedAt { get; set; } Property Value DateTime? Description Gets or sets the list description. Nullable string Description { get; set; } Property Value string DisplayNumbers Gets or sets, whether the list displays ranking numbers. bool? DisplayNumbers { get; set; } Property Value bool? Ids Gets or sets the collection of ids for the list for various web services. See also ITraktListIds. Nullable ITraktListIds Ids { get; set; } Property Value ITraktListIds ItemCount Gets or sets the list item count. int? ItemCount { get; set; } Property Value int? Likes Gets or sets the count of likes of the list. int? Likes { get; set; } Property Value int? Name Gets or sets the list title. Nullable string Name { get; set; } Property Value string Privacy Gets or sets the list's visibility status. See also TraktListPrivacy. Nullable TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy ShareLink Gets or sets the list's share link. Nullable string ShareLink { get; set; } Property Value string SortBy Gets or sets the property, by which the list is sorted. See also TraktSortBy. Nullable TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets or sets the sort order of the list. See also TraktSortHow. Nullable TraktSortHow SortHow { get; set; } Property Value TraktSortHow Type Gets or sets the list type. See also TraktListType. Nullable TraktListType Type { get; set; } Property Value TraktListType UpdatedAt Gets or sets the UTC datetime when the list was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the list's user, which created this list. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktListIds.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktListIds.html",
    "title": "Interface ITraktListIds | Trakt.NET",
    "keywords": "Interface ITraktListIds Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt list. public interface ITraktListIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Slug Gets or sets the Trakt slug. string Slug { get; set; } Property Value string Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktListItem.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktListItem.html",
    "title": "Interface ITraktListItem | Trakt.NET",
    "keywords": "Interface ITraktListItem Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll Represents a Trakt user list item. public interface ITraktListItem Properties Episode Gets or sets the list item episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of the list item. Nullable uint? Id { get; set; } Property Value uint? ListedAt Gets or sets the UTC datetime, when the list item was added to a list. DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the list item movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the list item notes. string Notes { get; set; } Property Value string Person Gets or sets the list item person, if Type is Person. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson Rank Gets or sets the ranking number of the list item. Nullable int? Rank { get; set; } Property Value int? Season Gets or sets the list item season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the list item show, if Type is Show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the list item type. See also TraktListItemType. Nullable TraktListItemType Type { get; set; } Property Value TraktListItemType"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktListLike.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktListLike.html",
    "title": "Interface ITraktListLike | Trakt.NET",
    "keywords": "Interface ITraktListLike Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll Represents a Trakt user list like. public interface ITraktListLike Properties LikedAt Gets or sets the UTC datetime, when the list was liked. DateTime? LikedAt { get; set; } Property Value DateTime? User Gets or sets the Trakt user who liked the list. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktPopularList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktPopularList.html",
    "title": "Interface ITraktPopularList | Trakt.NET",
    "keywords": "Interface ITraktPopularList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A popular Trakt list. public interface ITraktPopularList : ITraktTrendingOrPopularList Inherited Members ITraktTrendingOrPopularList.LikeCount ITraktTrendingOrPopularList.CommentCount ITraktTrendingOrPopularList.List"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktTrendingList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktTrendingList.html",
    "title": "Interface ITraktTrendingList | Trakt.NET",
    "keywords": "Interface ITraktTrendingList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A trending Trakt list. public interface ITraktTrendingList : ITraktTrendingOrPopularList Inherited Members ITraktTrendingOrPopularList.LikeCount ITraktTrendingOrPopularList.CommentCount ITraktTrendingOrPopularList.List"
  },
  "api/TraktNet.Objects.Get.Lists.ITraktTrendingOrPopularList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.ITraktTrendingOrPopularList.html",
    "title": "Interface ITraktTrendingOrPopularList | Trakt.NET",
    "keywords": "Interface ITraktTrendingOrPopularList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll public interface ITraktTrendingOrPopularList Properties CommentCount Gets or sets the list comment count. int? CommentCount { get; set; } Property Value int? LikeCount Gets or sets the list like count. int? LikeCount { get; set; } Property Value int? List Gets or sets the actual list. See also ITraktList. Nullable ITraktList List { get; set; } Property Value ITraktList"
  },
  "api/TraktNet.Objects.Get.Lists.TraktList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktList.html",
    "title": "Class TraktList | Trakt.NET",
    "keywords": "Class TraktList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A Trakt list. public class TraktList : ITraktList Inheritance object TraktList Implements ITraktList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowComments Gets or sets, whether the list allows comments. public bool? AllowComments { get; set; } Property Value bool? CommentCount Gets or sets the list comment count. public int? CommentCount { get; set; } Property Value int? CreatedAt Gets or sets the UTC datetime when the list was created. public DateTime? CreatedAt { get; set; } Property Value DateTime? Description Gets or sets the list description. Nullable public string Description { get; set; } Property Value string DisplayNumbers Gets or sets, whether the list displays ranking numbers. public bool? DisplayNumbers { get; set; } Property Value bool? Ids Gets or sets the collection of ids for the list for various web services. See also ITraktListIds. Nullable public ITraktListIds Ids { get; set; } Property Value ITraktListIds ItemCount Gets or sets the list item count. public int? ItemCount { get; set; } Property Value int? Likes Gets or sets the count of likes of the list. public int? Likes { get; set; } Property Value int? Name Gets or sets the list title. Nullable public string Name { get; set; } Property Value string Privacy Gets or sets the list's visibility status. See also TraktListPrivacy. Nullable public TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy ShareLink Gets or sets the list's share link. Nullable public string ShareLink { get; set; } Property Value string SortBy Gets or sets the property, by which the list is sorted. See also TraktSortBy. Nullable public TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets or sets the sort order of the list. See also TraktSortHow. Nullable public TraktSortHow SortHow { get; set; } Property Value TraktSortHow Type Gets or sets the list type. See also TraktListType. Nullable public TraktListType Type { get; set; } Property Value TraktListType UpdatedAt Gets or sets the UTC datetime when the list was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the list's username of the user, which created this list. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Lists.TraktListIds.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktListIds.html",
    "title": "Class TraktListIds | Trakt.NET",
    "keywords": "Class TraktListIds Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt list. public class TraktListIds : ITraktListIds, IIds Inheritance object TraktListIds Implements ITraktListIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Slug Gets or sets the Trakt slug. public string Slug { get; set; } Property Value string Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.Lists.TraktListItem.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktListItem.html",
    "title": "Class TraktListItem | Trakt.NET",
    "keywords": "Class TraktListItem Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll Represents a Trakt user list item. public class TraktListItem : ITraktListItem Inheritance object TraktListItem Implements ITraktListItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the list item episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of the list item. Nullable public uint? Id { get; set; } Property Value uint? ListedAt Gets or sets the UTC datetime, when the list item was added to a list. public DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the list item movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the list item notes. public string Notes { get; set; } Property Value string Person Gets or sets the list item person, if Type is Person. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson Rank Gets or sets the ranking number of the list item. Nullable public int? Rank { get; set; } Property Value int? Season Gets or sets the list item season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the list item show, if Type is Show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the list item type. See also TraktListItemType. Nullable public TraktListItemType Type { get; set; } Property Value TraktListItemType"
  },
  "api/TraktNet.Objects.Get.Lists.TraktListLike.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktListLike.html",
    "title": "Class TraktListLike | Trakt.NET",
    "keywords": "Class TraktListLike Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll Represents a Trakt user list like. public class TraktListLike : ITraktListLike Inheritance object TraktListLike Implements ITraktListLike Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LikedAt Gets or sets the UTC datetime, when the list was liked. public DateTime? LikedAt { get; set; } Property Value DateTime? User Gets or sets the Trakt user who liked the list. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Lists.TraktPopularList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktPopularList.html",
    "title": "Class TraktPopularList | Trakt.NET",
    "keywords": "Class TraktPopularList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A popular Trakt list. public class TraktPopularList : ATraktTrendingOrPopularList, ITraktPopularList, ITraktTrendingOrPopularList Inheritance object ATraktTrendingOrPopularList TraktPopularList Implements ITraktPopularList ITraktTrendingOrPopularList Inherited Members ATraktTrendingOrPopularList.LikeCount ATraktTrendingOrPopularList.CommentCount ATraktTrendingOrPopularList.List object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Get.Lists.TraktTrendingList.html": {
    "href": "api/TraktNet.Objects.Get.Lists.TraktTrendingList.html",
    "title": "Class TraktTrendingList | Trakt.NET",
    "keywords": "Class TraktTrendingList Namespace TraktNet.Objects.Get.Lists Assembly Trakt.NET.dll A trending Trakt list. public class TraktTrendingList : ATraktTrendingOrPopularList, ITraktTrendingList, ITraktTrendingOrPopularList Inheritance object ATraktTrendingOrPopularList TraktTrendingList Implements ITraktTrendingList ITraktTrendingOrPopularList Inherited Members ATraktTrendingOrPopularList.LikeCount ATraktTrendingOrPopularList.CommentCount ATraktTrendingOrPopularList.List object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Get.Lists.html": {
    "href": "api/TraktNet.Objects.Get.Lists.html",
    "title": "Namespace TraktNet.Objects.Get.Lists | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Lists Classes ATraktTrendingOrPopularList TraktList A Trakt list. TraktListIds A collection of ids for various web services, including the Trakt id, for a Trakt list. TraktListItem Represents a Trakt user list item. TraktListLike Represents a Trakt user list like. TraktPopularList A popular Trakt list. TraktTrendingList A trending Trakt list. Interfaces ITraktList A Trakt list. ITraktListIds A collection of ids for various web services, including the Trakt id, for a Trakt list. ITraktListItem Represents a Trakt user list item. ITraktListLike Represents a Trakt user list like. ITraktPopularList A popular Trakt list. ITraktTrendingList A trending Trakt list. ITraktTrendingOrPopularList"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktBoxOfficeMovie.html",
    "title": "Interface ITraktBoxOfficeMovie | Trakt.NET",
    "keywords": "Interface ITraktBoxOfficeMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A Trakt box office movie. public interface ITraktBoxOfficeMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Revenue Gets or sets the revenue of the Movie. int? Revenue { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMostAnticipatedMovie.html",
    "title": "Interface ITraktMostAnticipatedMovie | Trakt.NET",
    "keywords": "Interface ITraktMostAnticipatedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A anticipated Trakt movie. public interface ITraktMostAnticipatedMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties ListCount Gets or sets the list count for the Movie. int? ListCount { get; set; } Property Value int? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMostFavoritedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMostFavoritedMovie.html",
    "title": "Interface ITraktMostFavoritedMovie | Trakt.NET",
    "keywords": "Interface ITraktMostFavoritedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A favorited Trakt movie. public interface ITraktMostFavoritedMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie UserCount Gets or sets the user count for the Movie. int? UserCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMostPWCMovie.html",
    "title": "Interface ITraktMostPWCMovie | Trakt.NET",
    "keywords": "Interface ITraktMostPWCMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A played Trakt movie. public interface ITraktMostPWCMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties CollectedCount Gets or sets the collected count for the Movie. int? CollectedCount { get; set; } Property Value int? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie PlayCount Gets or sets the play count for the Movie. int? PlayCount { get; set; } Property Value int? WatcherCount Gets or sets the watcher count for the Movie. int? WatcherCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMovie.html",
    "title": "Interface ITraktMovie | Trakt.NET",
    "keywords": "Interface ITraktMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A Trakt movie. public interface ITraktMovie Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable string LanguageCode { get; set; } Property Value string Overview Gets or sets the synopsis of the movie. Nullable string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMovieAlias.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMovieAlias.html",
    "title": "Interface ITraktMovieAlias | Trakt.NET",
    "keywords": "Interface ITraktMovieAlias Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll An alias for a Trakt movie. public interface ITraktMovieAlias Properties CountryCode Gets or sets the two letter country code for the movie alias. Nullable string CountryCode { get; set; } Property Value string Title Gets or sets the title of the movie alias. Nullable string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMovieIds.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMovieIds.html",
    "title": "Interface ITraktMovieIds | Trakt.NET",
    "keywords": "Interface ITraktMovieIds Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt movie. public interface ITraktMovieIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Imdb Gets or sets the id from imdb.com Nullable string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMovieRelease.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMovieRelease.html",
    "title": "Interface ITraktMovieRelease | Trakt.NET",
    "keywords": "Interface ITraktMovieRelease Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A release of a Trakt movie. public interface ITraktMovieRelease Properties Certification Gets or sets the content certification for the movie release. Nullable string Certification { get; set; } Property Value string CountryCode Gets or sets the two letter country code for the movie release. Nullable string CountryCode { get; set; } Property Value string Note Gets or sets a note for the movie release. Nullable string Note { get; set; } Property Value string ReleaseDate Gets or sets the release date of the movie release. DateTime? ReleaseDate { get; set; } Property Value DateTime? ReleaseType Gets or sets the release type for the movie release. See also TraktReleaseType. Nullable TraktReleaseType ReleaseType { get; set; } Property Value TraktReleaseType"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktMovieTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktMovieTranslation.html",
    "title": "Interface ITraktMovieTranslation | Trakt.NET",
    "keywords": "Interface ITraktMovieTranslation Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A translation for a Trakt movie. public interface ITraktMovieTranslation : ITraktTranslation Inherited Members ITraktTranslation.Title ITraktTranslation.Overview ITraktTranslation.LanguageCode ITraktTranslation.CountryCode Properties Tagline Gets or sets the tagline for the release. Nullable string Tagline { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktRecentlyUpdatedMovie.html",
    "title": "Interface ITraktRecentlyUpdatedMovie | Trakt.NET",
    "keywords": "Interface ITraktRecentlyUpdatedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll An updated Trakt movie. public interface ITraktRecentlyUpdatedMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie RecentlyUpdatedAt Gets or sets the UTC datetime, when the Movie was updated. DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Movies.ITraktTrendingMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.ITraktTrendingMovie.html",
    "title": "Interface ITraktTrendingMovie | Trakt.NET",
    "keywords": "Interface ITraktTrendingMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A trending Trakt movie. public interface ITraktTrendingMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Watchers Gets or sets the watcher count for the Movie. int? Watchers { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktBoxOfficeMovie.html",
    "title": "Class TraktBoxOfficeMovie | Trakt.NET",
    "keywords": "Class TraktBoxOfficeMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A Trakt box office movie. public class TraktBoxOfficeMovie : ITraktBoxOfficeMovie, ITraktMovie Inheritance object TraktBoxOfficeMovie Implements ITraktBoxOfficeMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Revenue Gets or sets the revenue of the Movie. public int? Revenue { get; set; } Property Value int? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMostAnticipatedMovie.html",
    "title": "Class TraktMostAnticipatedMovie | Trakt.NET",
    "keywords": "Class TraktMostAnticipatedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A anticipated Trakt movie. public class TraktMostAnticipatedMovie : ITraktMostAnticipatedMovie, ITraktMovie Inheritance object TraktMostAnticipatedMovie Implements ITraktMostAnticipatedMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string ListCount Gets or sets the list count for the Movie. public int? ListCount { get; set; } Property Value int? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMostFavoritedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMostFavoritedMovie.html",
    "title": "Class TraktMostFavoritedMovie | Trakt.NET",
    "keywords": "Class TraktMostFavoritedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A favorited Trakt movie. public class TraktMostFavoritedMovie : ITraktMostFavoritedMovie, ITraktMovie Inheritance object TraktMostFavoritedMovie Implements ITraktMostFavoritedMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? UserCount Gets or sets the user count for the Movie. public int? UserCount { get; set; } Property Value int? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMostPWCMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMostPWCMovie.html",
    "title": "Class TraktMostPWCMovie | Trakt.NET",
    "keywords": "Class TraktMostPWCMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A played Trakt movie. public class TraktMostPWCMovie : ITraktMostPWCMovie, ITraktMovie Inheritance object TraktMostPWCMovie Implements ITraktMostPWCMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CollectedCount Gets or sets the collected count for the Movie. public int? CollectedCount { get; set; } Property Value int? CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string PlayCount Gets or sets the play count for the Movie. public int? PlayCount { get; set; } Property Value int? Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? WatcherCount Gets or sets the watcher count for the Movie. public int? WatcherCount { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMovie.html",
    "title": "Class TraktMovie | Trakt.NET",
    "keywords": "Class TraktMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A Trakt movie. public class TraktMovie : ITraktMovie Inheritance object TraktMovie Implements ITraktMovie Derived TraktRecommendedMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMovieAlias.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMovieAlias.html",
    "title": "Class TraktMovieAlias | Trakt.NET",
    "keywords": "Class TraktMovieAlias Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll An alias for a Trakt movie. public class TraktMovieAlias : ITraktMovieAlias Inheritance object TraktMovieAlias Implements ITraktMovieAlias Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CountryCode Gets or sets the two letter country code for the movie alias. Nullable public string CountryCode { get; set; } Property Value string Title Gets or sets the title of the movie alias. Nullable public string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMovieIds.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMovieIds.html",
    "title": "Class TraktMovieIds | Trakt.NET",
    "keywords": "Class TraktMovieIds Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt movie. public class TraktMovieIds : ITraktMovieIds, IIds Inheritance object TraktMovieIds Implements ITraktMovieIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Imdb Gets or sets the id from imdb.com Nullable public string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable public string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.Movies.TraktMovieRelease.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMovieRelease.html",
    "title": "Class TraktMovieRelease | Trakt.NET",
    "keywords": "Class TraktMovieRelease Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A release of a Trakt movie. public class TraktMovieRelease : ITraktMovieRelease Inheritance object TraktMovieRelease Implements ITraktMovieRelease Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Certification Gets or sets the content certification for the movie release. Nullable public string Certification { get; set; } Property Value string CountryCode Gets or sets the two letter country code for the movie release. Nullable public string CountryCode { get; set; } Property Value string Note Gets or sets a note for the movie release. Nullable public string Note { get; set; } Property Value string ReleaseDate Gets or sets the release date of the movie release. public DateTime? ReleaseDate { get; set; } Property Value DateTime? ReleaseType Gets or sets the release type for the movie release. See also TraktReleaseType. Nullable public TraktReleaseType ReleaseType { get; set; } Property Value TraktReleaseType"
  },
  "api/TraktNet.Objects.Get.Movies.TraktMovieTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktMovieTranslation.html",
    "title": "Class TraktMovieTranslation | Trakt.NET",
    "keywords": "Class TraktMovieTranslation Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A translation for a Trakt movie. public class TraktMovieTranslation : TraktTranslation, ITraktMovieTranslation, ITraktTranslation Inheritance object TraktTranslation TraktMovieTranslation Implements ITraktMovieTranslation ITraktTranslation Inherited Members TraktTranslation.Title TraktTranslation.Overview TraktTranslation.LanguageCode TraktTranslation.CountryCode TraktTranslation.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Tagline Gets or sets the tagline for the release. Nullable public string Tagline { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktRecentlyUpdatedMovie.html",
    "title": "Class TraktRecentlyUpdatedMovie | Trakt.NET",
    "keywords": "Class TraktRecentlyUpdatedMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll An updated Trakt movie. public class TraktRecentlyUpdatedMovie : ITraktRecentlyUpdatedMovie, ITraktMovie Inheritance object TraktRecentlyUpdatedMovie Implements ITraktRecentlyUpdatedMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? RecentlyUpdatedAt Gets or sets the UTC datetime, when the Movie was updated. public DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.TraktTrendingMovie.html": {
    "href": "api/TraktNet.Objects.Get.Movies.TraktTrendingMovie.html",
    "title": "Class TraktTrendingMovie | Trakt.NET",
    "keywords": "Class TraktTrendingMovie Namespace TraktNet.Objects.Get.Movies Assembly Trakt.NET.dll A trending Trakt movie. public class TraktTrendingMovie : ITraktTrendingMovie, ITraktMovie Inheritance object TraktTrendingMovie Implements ITraktTrendingMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Watchers Gets or sets the watcher count for the Movie. public int? Watchers { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Movies.html": {
    "href": "api/TraktNet.Objects.Get.Movies.html",
    "title": "Namespace TraktNet.Objects.Get.Movies | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Movies Classes TraktBoxOfficeMovie A Trakt box office movie. TraktMostAnticipatedMovie A anticipated Trakt movie. TraktMostFavoritedMovie A favorited Trakt movie. TraktMostPWCMovie A played Trakt movie. TraktMovie A Trakt movie. TraktMovieAlias An alias for a Trakt movie. TraktMovieIds A collection of ids for various web services, including the Trakt id, for a Trakt movie. TraktMovieRelease A release of a Trakt movie. TraktMovieTranslation A translation for a Trakt movie. TraktRecentlyUpdatedMovie An updated Trakt movie. TraktTrendingMovie A trending Trakt movie. Interfaces ITraktBoxOfficeMovie A Trakt box office movie. ITraktMostAnticipatedMovie A anticipated Trakt movie. ITraktMostFavoritedMovie A favorited Trakt movie. ITraktMostPWCMovie A played Trakt movie. ITraktMovie A Trakt movie. ITraktMovieAlias An alias for a Trakt movie. ITraktMovieIds A collection of ids for various web services, including the Trakt id, for a Trakt movie. ITraktMovieRelease A release of a Trakt movie. ITraktMovieTranslation A translation for a Trakt movie. ITraktRecentlyUpdatedMovie An updated Trakt movie. ITraktTrendingMovie A trending Trakt movie."
  },
  "api/TraktNet.Objects.Get.Notes.ITraktNote.html": {
    "href": "api/TraktNet.Objects.Get.Notes.ITraktNote.html",
    "title": "Interface ITraktNote | Trakt.NET",
    "keywords": "Interface ITraktNote Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll A Trakt user note. public interface ITraktNote Properties CreatedAt Gets or sets the UTC datetime, when the note was created. DateTime? CreatedAt { get; set; } Property Value DateTime? Id Gets or sets the id of the note. ulong Id { get; set; } Property Value ulong Notes Gets or sets the content of the note. string Notes { get; set; } Property Value string Privacy Gets or sets the privacy setting of the note. TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy Spoiler Gets or sets whether the note contains any spoilers. bool? Spoiler { get; set; } Property Value bool? UpdatedAt Gets or sets the UTC datetime, when the note was updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the user, who wrote the note. See also ITraktUser. ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Notes.ITraktNoteAttachedTo.html": {
    "href": "api/TraktNet.Objects.Get.Notes.ITraktNoteAttachedTo.html",
    "title": "Interface ITraktNoteAttachedTo | Trakt.NET",
    "keywords": "Interface ITraktNoteAttachedTo Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll Contains information about to which media a Trakt user note is attached. public interface ITraktNoteAttachedTo Properties Id Gets or sets the history id of the history item, if Type is set to History and a note is attached to an history item. ulong? Id { get; set; } Property Value ulong? Type Gets or sets the media type to which a note is attached. See also TraktNotesObjectType. TraktNotesObjectType Type { get; set; } Property Value TraktNotesObjectType"
  },
  "api/TraktNet.Objects.Get.Notes.ITraktNoteItem.html": {
    "href": "api/TraktNet.Objects.Get.Notes.ITraktNoteItem.html",
    "title": "Interface ITraktNoteItem | Trakt.NET",
    "keywords": "Interface ITraktNoteItem Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll A Trakt user note item containing the note including the media object to which the note is attached. public interface ITraktNoteItem Properties AttachedTo Gets or sets information to which this note item is attached. If it is attached to an history item, this property contains the history item id. See also ITraktNoteAttachedTo. ITraktNoteAttachedTo AttachedTo { get; set; } Property Value ITraktNoteAttachedTo Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Note Gets or sets the note content of this item. See also ITraktNote. ITraktNote Note { get; set; } Property Value ITraktNote Person Gets or sets the person, if Type is Person. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this note item contains. See also TraktListItemType. TraktListItemType Type { get; set; } Property Value TraktListItemType"
  },
  "api/TraktNet.Objects.Get.Notes.TraktNote.html": {
    "href": "api/TraktNet.Objects.Get.Notes.TraktNote.html",
    "title": "Class TraktNote | Trakt.NET",
    "keywords": "Class TraktNote Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll A Trakt user note. public class TraktNote : ITraktNote Inheritance object TraktNote Implements ITraktNote Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CreatedAt Gets or sets the UTC datetime, when the note was created. public DateTime? CreatedAt { get; set; } Property Value DateTime? Id Gets or sets the id of the note. public ulong Id { get; set; } Property Value ulong Notes Gets or sets the content of the note. public string Notes { get; set; } Property Value string Privacy Gets or sets the privacy setting of the note. public TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy Spoiler Gets or sets whether the note contains any spoilers. public bool? Spoiler { get; set; } Property Value bool? UpdatedAt Gets or sets the UTC datetime, when the note was updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? User Gets or sets the user, who wrote the note. See also ITraktUser. public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Notes.TraktNoteAttachedTo.html": {
    "href": "api/TraktNet.Objects.Get.Notes.TraktNoteAttachedTo.html",
    "title": "Class TraktNoteAttachedTo | Trakt.NET",
    "keywords": "Class TraktNoteAttachedTo Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll Contains information about to which media a Trakt user note is attached. public class TraktNoteAttachedTo : ITraktNoteAttachedTo Inheritance object TraktNoteAttachedTo Implements ITraktNoteAttachedTo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the history id of the history item, if Type is set to History and a note is attached to an history item. public ulong? Id { get; set; } Property Value ulong? Type Gets or sets the media type to which a note is attached. See also TraktNotesObjectType. public TraktNotesObjectType Type { get; set; } Property Value TraktNotesObjectType"
  },
  "api/TraktNet.Objects.Get.Notes.TraktNoteItem.html": {
    "href": "api/TraktNet.Objects.Get.Notes.TraktNoteItem.html",
    "title": "Class TraktNoteItem | Trakt.NET",
    "keywords": "Class TraktNoteItem Namespace TraktNet.Objects.Get.Notes Assembly Trakt.NET.dll A Trakt user note item containing the note including the media object to which the note is attached. public class TraktNoteItem : ITraktNoteItem Inheritance object TraktNoteItem Implements ITraktNoteItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AttachedTo Gets or sets information to which this note item is attached. If it is attached to an history item, this property contains the history item id. See also ITraktNoteAttachedTo. public ITraktNoteAttachedTo AttachedTo { get; set; } Property Value ITraktNoteAttachedTo Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Note Gets or sets the note content of this item. See also ITraktNote. public ITraktNote Note { get; set; } Property Value ITraktNote Person Gets or sets the person, if Type is Person. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this note item contains. See also TraktListItemType. public TraktListItemType Type { get; set; } Property Value TraktListItemType"
  },
  "api/TraktNet.Objects.Get.Notes.html": {
    "href": "api/TraktNet.Objects.Get.Notes.html",
    "title": "Namespace TraktNet.Objects.Get.Notes | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Notes Classes TraktNote A Trakt user note. TraktNoteAttachedTo Contains information about to which media a Trakt user note is attached. TraktNoteItem A Trakt user note item containing the note including the media object to which the note is attached. Interfaces ITraktNote A Trakt user note. ITraktNoteAttachedTo Contains information about to which media a Trakt user note is attached. ITraktNoteItem A Trakt user note item containing the note including the media object to which the note is attached."
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCredits.html",
    "title": "Interface ITraktPersonMovieCredits | Trakt.NET",
    "keywords": "Interface ITraktPersonMovieCredits Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains all Trakt movies where a Trakt person is in the cast or crew. public interface ITraktPersonMovieCredits Properties Cast Gets or sets a list of cast positions, in which a person is. See also ITraktPersonMovieCreditsCastItem. Nullable IList<ITraktPersonMovieCreditsCastItem> Cast { get; set; } Property Value IList<ITraktPersonMovieCreditsCastItem> Crew Gets or sets a collection of crew positions, which a person has. See also ITraktPersonMovieCreditsCrew. Nullable ITraktPersonMovieCreditsCrew Crew { get; set; } Property Value ITraktPersonMovieCreditsCrew"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCastItem.html",
    "title": "Interface ITraktPersonMovieCreditsCastItem | Trakt.NET",
    "keywords": "Interface ITraktPersonMovieCreditsCastItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's cast position. public interface ITraktPersonMovieCreditsCastItem Properties Characters Gets or sets the characters collection of the cast position. Nullable IList<string> Characters { get; set; } Property Value IList<string> Movie Gets or sets the movie of the cast position. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrew.html",
    "title": "Interface ITraktPersonMovieCreditsCrew | Trakt.NET",
    "keywords": "Interface ITraktPersonMovieCreditsCrew Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll A collection of crew positions in different categories, which a Trakt person has. public interface ITraktPersonMovieCreditsCrew Properties Art Gets or sets a list of crew positions in the art category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Art { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Camera Gets or sets a list of crew positions in the camera category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Camera { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> CostumeAndMakeup Gets or sets a list of crew positions in the costume and make-up category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> CostumeAndMakeup { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Crew Gets or sets a list of crew positions. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Crew { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Directing Gets or sets a list of crew positions in the directing category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Directing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Editing Gets or sets a list of crew positions in the editing category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Editing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Lighting Gets or sets a list of crew positions in the lighting category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Lighting { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Production Gets or sets a list of crew positions in the production category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Production { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Sound Gets or sets a list of crew positions in the sound category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Sound { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> VisualEffects Gets or sets a list of crew positions in the visual effects category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> VisualEffects { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Writing Gets or sets a list of crew positions in the writing category. See also ITraktPersonMovieCreditsCrewItem. Nullable IList<ITraktPersonMovieCreditsCrewItem> Writing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem>"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonMovieCreditsCrewItem.html",
    "title": "Interface ITraktPersonMovieCreditsCrewItem | Trakt.NET",
    "keywords": "Interface ITraktPersonMovieCreditsCrewItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's crew position. public interface ITraktPersonMovieCreditsCrewItem Properties Jobs Gets or sets the jobs collection of the crew position. Nullable IList<string> Jobs { get; set; } Property Value IList<string> Movie Gets or sets the movie of the crew position. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCredits.html",
    "title": "Interface ITraktPersonShowCredits | Trakt.NET",
    "keywords": "Interface ITraktPersonShowCredits Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains all Trakt shows where a Trakt person is in the cast or crew. public interface ITraktPersonShowCredits Properties Cast Gets or sets a list of cast positions, in which a person is. See also ITraktPersonShowCreditsCastItem. Nullable IList<ITraktPersonShowCreditsCastItem> Cast { get; set; } Property Value IList<ITraktPersonShowCreditsCastItem> Crew Gets or sets a collection of crew positions, which a person has. See also ITraktPersonShowCreditsCrew. Nullable ITraktPersonShowCreditsCrew Crew { get; set; } Property Value ITraktPersonShowCreditsCrew"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCastItem.html",
    "title": "Interface ITraktPersonShowCreditsCastItem | Trakt.NET",
    "keywords": "Interface ITraktPersonShowCreditsCastItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's cast position. public interface ITraktPersonShowCreditsCastItem Properties Characters Gets or sets the characters collection of the cast position. Nullable IList<string> Characters { get; set; } Property Value IList<string> EpisodeCount Gets or sets the episode count of the cast position. Nullable int? EpisodeCount { get; set; } Property Value int? SeriesRegular Gets or sets the series regular value of the cast position. Nullable bool? SeriesRegular { get; set; } Property Value bool? Show Gets or sets the show of the cast position. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrew.html",
    "title": "Interface ITraktPersonShowCreditsCrew | Trakt.NET",
    "keywords": "Interface ITraktPersonShowCreditsCrew Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll A collection of crew positions in different categories, which a Trakt person has. public interface ITraktPersonShowCreditsCrew Properties Art Gets or sets a list of crew positions in the art category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Art { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Camera Gets or sets a list of crew positions in the camera category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Camera { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> CostumeAndMakeup Gets or sets a list of crew positions in the costume and make-up category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> CostumeAndMakeup { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Crew Gets or sets a list of crew positions. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Crew { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Directing Gets or sets a list of crew positions in the directing category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Directing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Editing Gets or sets a list of crew positions in the editing category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Editing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Lighting Gets or sets a list of crew positions in the lighting category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Lighting { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Production Gets or sets a list of crew positions in the production category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Production { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Sound Gets or sets a list of crew positions in the sound category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Sound { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> VisualEffects Gets or sets a list of crew positions in the visual effects category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> VisualEffects { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Writing Gets or sets a list of crew positions in the writing category. See also ITraktPersonShowCreditsCrewItem. Nullable IList<ITraktPersonShowCreditsCrewItem> Writing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem>"
  },
  "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.ITraktPersonShowCreditsCrewItem.html",
    "title": "Interface ITraktPersonShowCreditsCrewItem | Trakt.NET",
    "keywords": "Interface ITraktPersonShowCreditsCrewItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's crew position. public interface ITraktPersonShowCreditsCrewItem Properties EpisodeCount Gets or sets the episode count of the crew position. Nullable int? EpisodeCount { get; set; } Property Value int? Jobs Gets or sets the jobs collection of the crew position. Nullable IList<string> Jobs { get; set; } Property Value IList<string> Show Gets or sets the show of the crew position. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCredits.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCredits.html",
    "title": "Class TraktPersonMovieCredits | Trakt.NET",
    "keywords": "Class TraktPersonMovieCredits Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains all Trakt movies where a Trakt person is in the cast or crew. public class TraktPersonMovieCredits : ITraktPersonMovieCredits Inheritance object TraktPersonMovieCredits Implements ITraktPersonMovieCredits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cast Gets or sets a list of cast positions, in which a person is. See also ITraktPersonMovieCreditsCastItem. Nullable public IList<ITraktPersonMovieCreditsCastItem> Cast { get; set; } Property Value IList<ITraktPersonMovieCreditsCastItem> Crew Gets or sets a collection of crew positions, which a person has. See also ITraktPersonMovieCreditsCrew. Nullable public ITraktPersonMovieCreditsCrew Crew { get; set; } Property Value ITraktPersonMovieCreditsCrew"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCastItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCastItem.html",
    "title": "Class TraktPersonMovieCreditsCastItem | Trakt.NET",
    "keywords": "Class TraktPersonMovieCreditsCastItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's cast position. public class TraktPersonMovieCreditsCastItem : ITraktPersonMovieCreditsCastItem Inheritance object TraktPersonMovieCreditsCastItem Implements ITraktPersonMovieCreditsCastItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Characters Gets or sets the characters collection of the cast position. Nullable public IList<string> Characters { get; set; } Property Value IList<string> Movie Gets or sets the movie of the cast position. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrew.html",
    "title": "Class TraktPersonMovieCreditsCrew | Trakt.NET",
    "keywords": "Class TraktPersonMovieCreditsCrew Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll A collection of crew positions in different categories, which a Trakt person has. public class TraktPersonMovieCreditsCrew : ITraktPersonMovieCreditsCrew Inheritance object TraktPersonMovieCreditsCrew Implements ITraktPersonMovieCreditsCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Art Gets or sets a list of crew positions in the art category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Art { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Camera Gets or sets a list of crew positions in the camera category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Camera { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> CostumeAndMakeup Gets or sets a list of crew positions in the costume and make-up category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> CostumeAndMakeup { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Crew Gets or sets a list of crew positions. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Crew { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Directing Gets or sets a list of crew positions in the directing category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Directing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Editing Gets or sets a list of crew positions in the editing category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Editing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Lighting Gets or sets a list of crew positions in the lighting category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Lighting { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Production Gets or sets a list of crew positions in the production category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Production { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Sound Gets or sets a list of crew positions in the sound category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Sound { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> VisualEffects Gets or sets a list of crew positions in the visual effects category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> VisualEffects { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem> Writing Gets or sets a list of crew positions in the writing category. See also ITraktPersonMovieCreditsCrewItem. Nullable public IList<ITraktPersonMovieCreditsCrewItem> Writing { get; set; } Property Value IList<ITraktPersonMovieCreditsCrewItem>"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrewItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonMovieCreditsCrewItem.html",
    "title": "Class TraktPersonMovieCreditsCrewItem | Trakt.NET",
    "keywords": "Class TraktPersonMovieCreditsCrewItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's crew position. public class TraktPersonMovieCreditsCrewItem : ITraktPersonMovieCreditsCrewItem Inheritance object TraktPersonMovieCreditsCrewItem Implements ITraktPersonMovieCreditsCrewItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Jobs Gets or sets the jobs collection of the crew position. Nullable public IList<string> Jobs { get; set; } Property Value IList<string> Movie Gets or sets the movie of the crew position. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCredits.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCredits.html",
    "title": "Class TraktPersonShowCredits | Trakt.NET",
    "keywords": "Class TraktPersonShowCredits Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains all Trakt shows where a Trakt person is in the cast or crew. public class TraktPersonShowCredits : ITraktPersonShowCredits Inheritance object TraktPersonShowCredits Implements ITraktPersonShowCredits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cast Gets or sets a list of cast positions, in which a person is. See also ITraktPersonShowCreditsCastItem. Nullable public IList<ITraktPersonShowCreditsCastItem> Cast { get; set; } Property Value IList<ITraktPersonShowCreditsCastItem> Crew Gets or sets a collection of crew positions, which a person has. See also ITraktPersonShowCreditsCrew. Nullable public ITraktPersonShowCreditsCrew Crew { get; set; } Property Value ITraktPersonShowCreditsCrew"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCastItem.html",
    "title": "Class TraktPersonShowCreditsCastItem | Trakt.NET",
    "keywords": "Class TraktPersonShowCreditsCastItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's cast position. public class TraktPersonShowCreditsCastItem : ITraktPersonShowCreditsCastItem Inheritance object TraktPersonShowCreditsCastItem Implements ITraktPersonShowCreditsCastItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Characters Gets or sets the characters collection of the cast position. Nullable public IList<string> Characters { get; set; } Property Value IList<string> EpisodeCount Gets or sets the episode count of the cast position. Nullable public int? EpisodeCount { get; set; } Property Value int? SeriesRegular Gets or sets the series regular value of the cast position. Nullable public bool? SeriesRegular { get; set; } Property Value bool? Show Gets or sets the show of the cast position. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrew.html",
    "title": "Class TraktPersonShowCreditsCrew | Trakt.NET",
    "keywords": "Class TraktPersonShowCreditsCrew Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll A collection of crew positions in different categories, which a Trakt person has. public class TraktPersonShowCreditsCrew : ITraktPersonShowCreditsCrew Inheritance object TraktPersonShowCreditsCrew Implements ITraktPersonShowCreditsCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Art Gets or sets a list of crew positions in the art category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Art { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Camera Gets or sets a list of crew positions in the camera category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Camera { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> CostumeAndMakeup Gets or sets a list of crew positions in the costume and make-up category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> CostumeAndMakeup { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Crew Gets or sets a list of crew positions. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Crew { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Directing Gets or sets a list of crew positions in the directing category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Directing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Editing Gets or sets a list of crew positions in the editing category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Editing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Lighting Gets or sets a list of crew positions in the lighting category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Lighting { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Production Gets or sets a list of crew positions in the production category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Production { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Sound Gets or sets a list of crew positions in the sound category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Sound { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> VisualEffects Gets or sets a list of crew positions in the visual effects category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> VisualEffects { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem> Writing Gets or sets a list of crew positions in the writing category. See also ITraktPersonShowCreditsCrewItem. Nullable public IList<ITraktPersonShowCreditsCrewItem> Writing { get; set; } Property Value IList<ITraktPersonShowCreditsCrewItem>"
  },
  "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.TraktPersonShowCreditsCrewItem.html",
    "title": "Class TraktPersonShowCreditsCrewItem | Trakt.NET",
    "keywords": "Class TraktPersonShowCreditsCrewItem Namespace TraktNet.Objects.Get.People.Credits Assembly Trakt.NET.dll Contains information about a Trakt person's crew position. public class TraktPersonShowCreditsCrewItem : ITraktPersonShowCreditsCrewItem Inheritance object TraktPersonShowCreditsCrewItem Implements ITraktPersonShowCreditsCrewItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EpisodeCount Gets or sets the episode count of the crew position. Nullable public int? EpisodeCount { get; set; } Property Value int? Jobs Gets or sets the jobs collection of the crew position. Nullable public IList<string> Jobs { get; set; } Property Value IList<string> Show Gets or sets the show of the crew position. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.People.Credits.html": {
    "href": "api/TraktNet.Objects.Get.People.Credits.html",
    "title": "Namespace TraktNet.Objects.Get.People.Credits | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.People.Credits Classes TraktPersonMovieCredits Contains all Trakt movies where a Trakt person is in the cast or crew. TraktPersonMovieCreditsCastItem Contains information about a Trakt person's cast position. TraktPersonMovieCreditsCrew A collection of crew positions in different categories, which a Trakt person has. TraktPersonMovieCreditsCrewItem Contains information about a Trakt person's crew position. TraktPersonShowCredits Contains all Trakt shows where a Trakt person is in the cast or crew. TraktPersonShowCreditsCastItem Contains information about a Trakt person's cast position. TraktPersonShowCreditsCrew A collection of crew positions in different categories, which a Trakt person has. TraktPersonShowCreditsCrewItem Contains information about a Trakt person's crew position. Interfaces ITraktPersonMovieCredits Contains all Trakt movies where a Trakt person is in the cast or crew. ITraktPersonMovieCreditsCastItem Contains information about a Trakt person's cast position. ITraktPersonMovieCreditsCrew A collection of crew positions in different categories, which a Trakt person has. ITraktPersonMovieCreditsCrewItem Contains information about a Trakt person's crew position. ITraktPersonShowCredits Contains all Trakt shows where a Trakt person is in the cast or crew. ITraktPersonShowCreditsCastItem Contains information about a Trakt person's cast position. ITraktPersonShowCreditsCrew A collection of crew positions in different categories, which a Trakt person has. ITraktPersonShowCreditsCrewItem Contains information about a Trakt person's crew position."
  },
  "api/TraktNet.Objects.Get.People.ITraktPerson.html": {
    "href": "api/TraktNet.Objects.Get.People.ITraktPerson.html",
    "title": "Interface ITraktPerson | Trakt.NET",
    "keywords": "Interface ITraktPerson Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A Trakt person. public interface ITraktPerson Properties Age Returns the age of the person, if Birthday is set, otherwise zero. int Age { get; } Property Value int Biography Gets or sets the biography of the person. Nullable string Biography { get; set; } Property Value string Birthday Gets or sets the UTC datetime when the person was born. DateTime? Birthday { get; set; } Property Value DateTime? Birthplace Gets or sets the birthplace of the person. Nullable string Birthplace { get; set; } Property Value string Death Gets or sets the UTC datetime when the person died. DateTime? Death { get; set; } Property Value DateTime? Gender Gets or sets the gender of the person. See also TraktGender. Nullable TraktGender Gender { get; set; } Property Value TraktGender Homepage Gets or sets the web address of the homepage of the person. Nullable string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the person for various web services. See also ITraktPersonIds. Nullable ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds KnownForDepartment Gets or sets the known department of the person. See also TraktKnownForDepartment. Nullable TraktKnownForDepartment KnownForDepartment { get; set; } Property Value TraktKnownForDepartment Name Gets or sets the person name. Nullable string Name { get; set; } Property Value string SocialIds Gets or sets the collection of social ids for the person for various web services. See also ITraktPersonSocialIds. Nullable ITraktPersonSocialIds SocialIds { get; set; } Property Value ITraktPersonSocialIds UpdatedAt Gets or sets when the person was lastly updated. Nullable DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.People.ITraktPersonIds.html": {
    "href": "api/TraktNet.Objects.Get.People.ITraktPersonIds.html",
    "title": "Interface ITraktPersonIds | Trakt.NET",
    "keywords": "Interface ITraktPersonIds Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt person. public interface ITraktPersonIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Imdb Gets or sets the id from imdb.com Nullable string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com uint? TvRage { get; set; } Property Value uint?"
  },
  "api/TraktNet.Objects.Get.People.ITraktPersonSocialIds.html": {
    "href": "api/TraktNet.Objects.Get.People.ITraktPersonSocialIds.html",
    "title": "Interface ITraktPersonSocialIds | Trakt.NET",
    "keywords": "Interface ITraktPersonSocialIds Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A collection of social ids for various web services for a Trakt person. public interface ITraktPersonSocialIds Properties Facebook Gets or sets the Facebook Id of a person. Nullable string Facebook { get; set; } Property Value string Instagram Gets or sets the Instagram Id of a person. Nullable string Instagram { get; set; } Property Value string Twitter Gets or sets the Twitter Id of a person. Nullable string Twitter { get; set; } Property Value string Wikipedia Gets or sets the Wikipedia link of a person. Nullable string Wikipedia { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.People.ITraktRecentlyUpdatedPerson.html": {
    "href": "api/TraktNet.Objects.Get.People.ITraktRecentlyUpdatedPerson.html",
    "title": "Interface ITraktRecentlyUpdatedPerson | Trakt.NET",
    "keywords": "Interface ITraktRecentlyUpdatedPerson Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll An updated Trakt person. public interface ITraktRecentlyUpdatedPerson : ITraktPerson Inherited Members ITraktPerson.Name ITraktPerson.Ids ITraktPerson.Biography ITraktPerson.Birthday ITraktPerson.Death ITraktPerson.Age ITraktPerson.Birthplace ITraktPerson.Homepage ITraktPerson.Gender ITraktPerson.KnownForDepartment ITraktPerson.SocialIds ITraktPerson.UpdatedAt Properties Person Gets or sets the Trakt person. See also ITraktPerson. Nullable ITraktPerson Person { get; set; } Property Value ITraktPerson RecentlyUpdatedAt Gets or sets the UTC datetime, when the Person was updated. DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.People.TraktPerson.html": {
    "href": "api/TraktNet.Objects.Get.People.TraktPerson.html",
    "title": "Class TraktPerson | Trakt.NET",
    "keywords": "Class TraktPerson Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A Trakt person. public class TraktPerson : ITraktPerson Inheritance object TraktPerson Implements ITraktPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Age Returns the age of the person, if Birthday is set, otherwise zero. public int Age { get; } Property Value int Biography Gets or sets the biography of the person. Nullable public string Biography { get; set; } Property Value string Birthday Gets or sets the UTC datetime when the person was born. public DateTime? Birthday { get; set; } Property Value DateTime? Birthplace Gets or sets the birthplace of the person. Nullable public string Birthplace { get; set; } Property Value string Death Gets or sets the UTC datetime when the person died. public DateTime? Death { get; set; } Property Value DateTime? Gender Gets or sets the gender of the person. See also TraktGender. Nullable public TraktGender Gender { get; set; } Property Value TraktGender Homepage Gets or sets the web address of the homepage of the person. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the person for various web services. See also ITraktPersonIds. Nullable public ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds KnownForDepartment Gets or sets the known department of the person. See also TraktKnownForDepartment. Nullable public TraktKnownForDepartment KnownForDepartment { get; set; } Property Value TraktKnownForDepartment Name Gets or sets the person name. Nullable public string Name { get; set; } Property Value string SocialIds Gets or sets the collection of social ids for the person for various web services. See also ITraktPersonSocialIds. Nullable public ITraktPersonSocialIds SocialIds { get; set; } Property Value ITraktPersonSocialIds UpdatedAt Gets or sets when the person was lastly updated. Nullable public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.People.TraktPersonIds.html": {
    "href": "api/TraktNet.Objects.Get.People.TraktPersonIds.html",
    "title": "Class TraktPersonIds | Trakt.NET",
    "keywords": "Class TraktPersonIds Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt person. public class TraktPersonIds : ITraktPersonIds, IIds Inheritance object TraktPersonIds Implements ITraktPersonIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Imdb Gets or sets the id from imdb.com Nullable public string Imdb { get; set; } Property Value string Slug Gets or sets the Trakt slug. Nullable public string Slug { get; set; } Property Value string Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com public uint? TvRage { get; set; } Property Value uint? Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.People.TraktPersonSocialIds.html": {
    "href": "api/TraktNet.Objects.Get.People.TraktPersonSocialIds.html",
    "title": "Class TraktPersonSocialIds | Trakt.NET",
    "keywords": "Class TraktPersonSocialIds Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll A collection of social ids for various web services for a Trakt person. public class TraktPersonSocialIds : ITraktPersonSocialIds Inheritance object TraktPersonSocialIds Implements ITraktPersonSocialIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Facebook Gets or sets the Facebook Id of a person. Nullable public string Facebook { get; set; } Property Value string Instagram Gets or sets the Instagram Id of a person. Nullable public string Instagram { get; set; } Property Value string Twitter Gets or sets the Twitter Id of a person. Nullable public string Twitter { get; set; } Property Value string Wikipedia Gets or sets the Wikipedia link of a person. Nullable public string Wikipedia { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.People.TraktRecentlyUpdatedPerson.html": {
    "href": "api/TraktNet.Objects.Get.People.TraktRecentlyUpdatedPerson.html",
    "title": "Class TraktRecentlyUpdatedPerson | Trakt.NET",
    "keywords": "Class TraktRecentlyUpdatedPerson Namespace TraktNet.Objects.Get.People Assembly Trakt.NET.dll An updated Trakt person. public class TraktRecentlyUpdatedPerson : ITraktRecentlyUpdatedPerson, ITraktPerson Inheritance object TraktRecentlyUpdatedPerson Implements ITraktRecentlyUpdatedPerson ITraktPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Age Returns the age of the person, if Birthday is set, otherwise zero. public int Age { get; } Property Value int Biography Gets or sets the biography of the person. Nullable public string Biography { get; set; } Property Value string Birthday Gets or sets the UTC datetime when the person was born. public DateTime? Birthday { get; set; } Property Value DateTime? Birthplace Gets or sets the birthplace of the person. Nullable public string Birthplace { get; set; } Property Value string Death Gets or sets the UTC datetime when the person died. public DateTime? Death { get; set; } Property Value DateTime? Gender Gets or sets the gender of the person. See also TraktGender. Nullable public TraktGender Gender { get; set; } Property Value TraktGender Homepage Gets or sets the web address of the homepage of the person. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the person for various web services. See also ITraktPersonIds. Nullable public ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds KnownForDepartment Gets or sets the known department of the person. See also TraktKnownForDepartment. Nullable public TraktKnownForDepartment KnownForDepartment { get; set; } Property Value TraktKnownForDepartment Name Gets or sets the person name. Nullable public string Name { get; set; } Property Value string Person Gets or sets the Trakt person. See also ITraktPerson. Nullable public ITraktPerson Person { get; set; } Property Value ITraktPerson RecentlyUpdatedAt Gets or sets the UTC datetime, when the Person was updated. public DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime? SocialIds Gets or sets the collection of social ids for the person for various web services. See also ITraktPersonSocialIds. Nullable public ITraktPersonSocialIds SocialIds { get; set; } Property Value ITraktPersonSocialIds UpdatedAt Gets or sets when the person was lastly updated. Nullable public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.People.html": {
    "href": "api/TraktNet.Objects.Get.People.html",
    "title": "Namespace TraktNet.Objects.Get.People | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.People Classes TraktPerson A Trakt person. TraktPersonIds A collection of ids for various web services, including the Trakt id, for a Trakt person. TraktPersonSocialIds A collection of social ids for various web services for a Trakt person. TraktRecentlyUpdatedPerson An updated Trakt person. Interfaces ITraktPerson A Trakt person. ITraktPersonIds A collection of ids for various web services, including the Trakt id, for a Trakt person. ITraktPersonSocialIds A collection of social ids for various web services for a Trakt person. ITraktRecentlyUpdatedPerson An updated Trakt person."
  },
  "api/TraktNet.Objects.Get.Ratings.ITraktRatingsItem.html": {
    "href": "api/TraktNet.Objects.Get.Ratings.ITraktRatingsItem.html",
    "title": "Interface ITraktRatingsItem | Trakt.NET",
    "keywords": "Interface ITraktRatingsItem Namespace TraktNet.Objects.Get.Ratings Assembly Trakt.NET.dll A Trakt rating item, containing a movie, show, season and / or episode and information about it. public interface ITraktRatingsItem Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie RatedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating of the movie, show, season and / or episode. int? Rating { get; set; } Property Value int? Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this rating item contains. See also TraktRatingsItemType. Nullable TraktRatingsItemType Type { get; set; } Property Value TraktRatingsItemType"
  },
  "api/TraktNet.Objects.Get.Ratings.TraktRatingsItem.html": {
    "href": "api/TraktNet.Objects.Get.Ratings.TraktRatingsItem.html",
    "title": "Class TraktRatingsItem | Trakt.NET",
    "keywords": "Class TraktRatingsItem Namespace TraktNet.Objects.Get.Ratings Assembly Trakt.NET.dll A Trakt rating item, containing a movie, show, season and / or episode and information about it. public class TraktRatingsItem : ITraktRatingsItem Inheritance object TraktRatingsItem Implements ITraktRatingsItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie RatedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating of the movie, show, season and / or episode. public int? Rating { get; set; } Property Value int? Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this rating item contains. See also TraktRatingsItemType. Nullable public TraktRatingsItemType Type { get; set; } Property Value TraktRatingsItemType"
  },
  "api/TraktNet.Objects.Get.Ratings.html": {
    "href": "api/TraktNet.Objects.Get.Ratings.html",
    "title": "Namespace TraktNet.Objects.Get.Ratings | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Ratings Classes TraktRatingsItem A Trakt rating item, containing a movie, show, season and / or episode and information about it. Interfaces ITraktRatingsItem A Trakt rating item, containing a movie, show, season and / or episode and information about it."
  },
  "api/TraktNet.Objects.Get.Recommendations.ITraktFavoritedBy.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.ITraktFavoritedBy.html",
    "title": "Interface ITraktFavoritedBy | Trakt.NET",
    "keywords": "Interface ITraktFavoritedBy Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt favorited by entry. public interface ITraktFavoritedBy Properties Notes Gets or sets the notes of the user who favorited this. Nullable string Notes { get; set; } Property Value string User A Trakt user who favorited the movie or show. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Recommendations.ITraktRecommendedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.ITraktRecommendedMovie.html",
    "title": "Interface ITraktRecommendedMovie | Trakt.NET",
    "keywords": "Interface ITraktRecommendedMovie Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt recommended movie. public interface ITraktRecommendedMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties FavoritedBy Gets or sets the list of users who favorited this movie. See also ITraktFavoritedBy. Nullable IList<ITraktFavoritedBy> FavoritedBy { get; set; } Property Value IList<ITraktFavoritedBy>"
  },
  "api/TraktNet.Objects.Get.Recommendations.ITraktRecommendedShow.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.ITraktRecommendedShow.html",
    "title": "Interface ITraktRecommendedShow | Trakt.NET",
    "keywords": "Interface ITraktRecommendedShow Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt recommended show. public interface ITraktRecommendedShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties FavoritedBy Gets or sets the list of users who favorited this show. See also ITraktFavoritedBy. Nullable IList<ITraktFavoritedBy> FavoritedBy { get; set; } Property Value IList<ITraktFavoritedBy>"
  },
  "api/TraktNet.Objects.Get.Recommendations.TraktFavoritedBy.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.TraktFavoritedBy.html",
    "title": "Class TraktFavoritedBy | Trakt.NET",
    "keywords": "Class TraktFavoritedBy Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt favorited by entry. public class TraktFavoritedBy : ITraktFavoritedBy Inheritance object TraktFavoritedBy Implements ITraktFavoritedBy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Notes Gets or sets the notes of the user who favorited this. Nullable public string Notes { get; set; } Property Value string User A Trakt user who favorited the movie or show. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Recommendations.TraktRecommendedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.TraktRecommendedMovie.html",
    "title": "Class TraktRecommendedMovie | Trakt.NET",
    "keywords": "Class TraktRecommendedMovie Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt recommended movie. public class TraktRecommendedMovie : TraktMovie, ITraktRecommendedMovie, ITraktMovie Inheritance object TraktMovie TraktRecommendedMovie Implements ITraktRecommendedMovie ITraktMovie Inherited Members TraktMovie.Title TraktMovie.Year TraktMovie.Ids TraktMovie.Tagline TraktMovie.Overview TraktMovie.Released TraktMovie.Runtime TraktMovie.Trailer TraktMovie.Homepage TraktMovie.Rating TraktMovie.Votes TraktMovie.UpdatedAt TraktMovie.LanguageCode TraktMovie.AvailableTranslationLanguageCodes TraktMovie.Genres TraktMovie.Certification TraktMovie.CountryCode TraktMovie.CommentCount TraktMovie.Status object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FavoritedBy Gets or sets the list of users who favorited this movie. See also ITraktFavoritedBy. Nullable public IList<ITraktFavoritedBy> FavoritedBy { get; set; } Property Value IList<ITraktFavoritedBy>"
  },
  "api/TraktNet.Objects.Get.Recommendations.TraktRecommendedShow.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.TraktRecommendedShow.html",
    "title": "Class TraktRecommendedShow | Trakt.NET",
    "keywords": "Class TraktRecommendedShow Namespace TraktNet.Objects.Get.Recommendations Assembly Trakt.NET.dll A Trakt recommended show. public class TraktRecommendedShow : TraktShow, ITraktRecommendedShow, ITraktShow Inheritance object TraktShow TraktRecommendedShow Implements ITraktRecommendedShow ITraktShow Inherited Members TraktShow.Title TraktShow.Year TraktShow.Ids TraktShow.Overview TraktShow.Tagline TraktShow.FirstAired TraktShow.Airs TraktShow.Runtime TraktShow.Certification TraktShow.Network TraktShow.CountryCode TraktShow.Trailer TraktShow.Homepage TraktShow.Status TraktShow.Rating TraktShow.Votes TraktShow.UpdatedAt TraktShow.LanguageCode TraktShow.AvailableTranslationLanguageCodes TraktShow.Genres TraktShow.AiredEpisodes TraktShow.Seasons TraktShow.CommentCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FavoritedBy Gets or sets the list of users who favorited this show. See also ITraktFavoritedBy. Nullable public IList<ITraktFavoritedBy> FavoritedBy { get; set; } Property Value IList<ITraktFavoritedBy>"
  },
  "api/TraktNet.Objects.Get.Recommendations.html": {
    "href": "api/TraktNet.Objects.Get.Recommendations.html",
    "title": "Namespace TraktNet.Objects.Get.Recommendations | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Recommendations Classes TraktFavoritedBy A Trakt favorited by entry. TraktRecommendedMovie A Trakt recommended movie. TraktRecommendedShow A Trakt recommended show. Interfaces ITraktFavoritedBy A Trakt favorited by entry. ITraktRecommendedMovie A Trakt recommended movie. ITraktRecommendedShow A Trakt recommended show."
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeason.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeason.html",
    "title": "Interface ITraktSeason | Trakt.NET",
    "keywords": "Interface ITraktSeason Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A Trakt season of a Trakt show. public interface ITraktSeason Properties AiredEpisodesCount Gets or sets the number of aired episodes in the season. int? AiredEpisodesCount { get; set; } Property Value int? CommentCount Gets or sets the comment count of the season. Nullable int? CommentCount { get; set; } Property Value int? Episodes Gets or sets the collection of Trakt episodes in the season. See also ITraktEpisode. Nullable IList<ITraktEpisode> Episodes { get; set; } Property Value IList<ITraktEpisode> Remarks This property is set automatically if this season is in a collection of seasons and this collection was returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and the optional TraktExtendedInfo has Episodes set to true. FirstAired Gets or sets the UTC datetime when the season was first aired. DateTime? FirstAired { get; set; } Property Value DateTime? Ids Gets or sets the collection of ids for the season for various web services. See also ITraktSeasonIds. Nullable ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Network Gets or sets the network on which the season airs. string Network { get; set; } Property Value string Number Gets or sets the season number. int? Number { get; set; } Property Value int? Overview Gets or sets the synopsis of the season. Nullable string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the season. float? Rating { get; set; } Property Value float? Title Gets or sets the title of the season. Nullable string Title { get; set; } Property Value string TotalEpisodesCount Gets or sets the number of episodes in the season. int? TotalEpisodesCount { get; set; } Property Value int? UpdatedAt Gets or sets the UTC datetime when the season was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the season. int? Votes { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeasonCollectionProgress.html",
    "title": "Interface ITraktSeasonCollectionProgress | Trakt.NET",
    "keywords": "Interface ITraktSeasonCollectionProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the collection progress of a Trakt season. public interface ITraktSeasonCollectionProgress : ITraktSeasonProgress Inherited Members ITraktSeasonProgress.Number ITraktSeasonProgress.Title ITraktSeasonProgress.Aired ITraktSeasonProgress.Completed Properties Episodes Gets or sets the collected episodes. See also ITraktEpisodeCollectionProgress. Nullable IList<ITraktEpisodeCollectionProgress> Episodes { get; set; } Property Value IList<ITraktEpisodeCollectionProgress>"
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeasonIds.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeasonIds.html",
    "title": "Interface ITraktSeasonIds | Trakt.NET",
    "keywords": "Interface ITraktSeasonIds Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt season. public interface ITraktSeasonIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Tmdb Gets or sets the numeric id from themoviedb.org uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com uint? Tvdb { get; set; } Property Value uint?"
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeasonProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeasonProgress.html",
    "title": "Interface ITraktSeasonProgress | Trakt.NET",
    "keywords": "Interface ITraktSeasonProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the progress of a Trakt season. public interface ITraktSeasonProgress Properties Aired Gets or sets the number of episodes in the season, which already aired. int? Aired { get; set; } Property Value int? Completed Gets or sets the number of episodes in the season already collected or watched. int? Completed { get; set; } Property Value int? Number Gets or sets the number of the collected or watched season. int? Number { get; set; } Property Value int? Title Gets or sets the title of the season. Nullable string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeasonTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeasonTranslation.html",
    "title": "Interface ITraktSeasonTranslation | Trakt.NET",
    "keywords": "Interface ITraktSeasonTranslation Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A translation for a Trakt season. public interface ITraktSeasonTranslation : ITraktTranslation Inherited Members ITraktTranslation.Title ITraktTranslation.Overview ITraktTranslation.LanguageCode ITraktTranslation.CountryCode"
  },
  "api/TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.ITraktSeasonWatchedProgress.html",
    "title": "Interface ITraktSeasonWatchedProgress | Trakt.NET",
    "keywords": "Interface ITraktSeasonWatchedProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the watched progress of a Trakt season. public interface ITraktSeasonWatchedProgress : ITraktSeasonProgress Inherited Members ITraktSeasonProgress.Number ITraktSeasonProgress.Title ITraktSeasonProgress.Aired ITraktSeasonProgress.Completed Properties Episodes Gets or sets the watched episodes. See also ITraktEpisodeWatchedProgress. Nullable IList<ITraktEpisodeWatchedProgress> Episodes { get; set; } Property Value IList<ITraktEpisodeWatchedProgress>"
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeason.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeason.html",
    "title": "Class TraktSeason | Trakt.NET",
    "keywords": "Class TraktSeason Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A Trakt season of a Trakt show. public class TraktSeason : ITraktSeason Inheritance object TraktSeason Implements ITraktSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodesCount Gets or sets the number of aired episodes in the season. public int? AiredEpisodesCount { get; set; } Property Value int? CommentCount Gets or sets the comment count of the season. Nullable public int? CommentCount { get; set; } Property Value int? Episodes Gets or sets the collection of Trakt episodes in the season. See also ITraktEpisode. Nullable public IList<ITraktEpisode> Episodes { get; set; } Property Value IList<ITraktEpisode> Remarks This property is set automatically if this season is in a collection of seasons and this collection was returned by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken) and the optional TraktExtendedInfo has Episodes set to true. FirstAired Gets or sets the UTC datetime when the season was first aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Ids Gets or sets the collection of ids for the season for various web services. See also ITraktSeasonIds. Nullable public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Network Gets or sets the network on which the season airs. public string Network { get; set; } Property Value string Number Gets or sets the season number. public int? Number { get; set; } Property Value int? Overview Gets or sets the synopsis of the season. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the season. public float? Rating { get; set; } Property Value float? Title Gets or sets the title of the season. Nullable public string Title { get; set; } Property Value string TotalEpisodesCount Gets or sets the number of episodes in the season. public int? TotalEpisodesCount { get; set; } Property Value int? UpdatedAt Gets or sets the UTC datetime when the season was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the season. public int? Votes { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeasonCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeasonCollectionProgress.html",
    "title": "Class TraktSeasonCollectionProgress | Trakt.NET",
    "keywords": "Class TraktSeasonCollectionProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the collection progress of a Trakt season. public class TraktSeasonCollectionProgress : TraktSeasonProgress, ITraktSeasonCollectionProgress, ITraktSeasonProgress Inheritance object TraktSeasonProgress TraktSeasonCollectionProgress Implements ITraktSeasonCollectionProgress ITraktSeasonProgress Inherited Members TraktSeasonProgress.Number TraktSeasonProgress.Title TraktSeasonProgress.Aired TraktSeasonProgress.Completed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets the collected episodes. See also ITraktEpisodeCollectionProgress. Nullable public IList<ITraktEpisodeCollectionProgress> Episodes { get; set; } Property Value IList<ITraktEpisodeCollectionProgress>"
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeasonIds.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeasonIds.html",
    "title": "Class TraktSeasonIds | Trakt.NET",
    "keywords": "Class TraktSeasonIds Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt season. public class TraktSeasonIds : ITraktSeasonIds, IIds Inheritance object TraktSeasonIds Implements ITraktSeasonIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Tmdb Gets or sets the numeric id from themoviedb.org public uint? Tmdb { get; set; } Property Value uint? Trakt Gets or sets the Trakt numeric id. public uint Trakt { get; set; } Property Value uint TvRage Gets or sets the numeric id from tvrage.com public uint? TvRage { get; set; } Property Value uint? Tvdb Gets or sets the numeric id from thetvdb.com public uint? Tvdb { get; set; } Property Value uint? Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeasonProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeasonProgress.html",
    "title": "Class TraktSeasonProgress | Trakt.NET",
    "keywords": "Class TraktSeasonProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the progress of a Trakt season. public abstract class TraktSeasonProgress : ITraktSeasonProgress Inheritance object TraktSeasonProgress Implements ITraktSeasonProgress Derived TraktSeasonCollectionProgress TraktSeasonWatchedProgress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Aired Gets or sets the number of episodes in the season, which already aired. public int? Aired { get; set; } Property Value int? Completed Gets or sets the number of episodes in the season already collected or watched. public int? Completed { get; set; } Property Value int? Number Gets or sets the number of the collected or watched season. public int? Number { get; set; } Property Value int? Title Gets or sets the title of the season. Nullable public string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeasonTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeasonTranslation.html",
    "title": "Class TraktSeasonTranslation | Trakt.NET",
    "keywords": "Class TraktSeasonTranslation Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll A translation for a Trakt show. public class TraktSeasonTranslation : TraktTranslation, ITraktSeasonTranslation, ITraktTranslation Inheritance object TraktTranslation TraktSeasonTranslation Implements ITraktSeasonTranslation ITraktTranslation Inherited Members TraktTranslation.Title TraktTranslation.Overview TraktTranslation.LanguageCode TraktTranslation.CountryCode TraktTranslation.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/TraktNet.Objects.Get.Seasons.TraktSeasonWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.TraktSeasonWatchedProgress.html",
    "title": "Class TraktSeasonWatchedProgress | Trakt.NET",
    "keywords": "Class TraktSeasonWatchedProgress Namespace TraktNet.Objects.Get.Seasons Assembly Trakt.NET.dll Represents the watched progress of a Trakt season. public class TraktSeasonWatchedProgress : TraktSeasonProgress, ITraktSeasonWatchedProgress, ITraktSeasonProgress Inheritance object TraktSeasonProgress TraktSeasonWatchedProgress Implements ITraktSeasonWatchedProgress ITraktSeasonProgress Inherited Members TraktSeasonProgress.Number TraktSeasonProgress.Title TraktSeasonProgress.Aired TraktSeasonProgress.Completed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets the watched episodes. See also ITraktEpisodeWatchedProgress. Nullable public IList<ITraktEpisodeWatchedProgress> Episodes { get; set; } Property Value IList<ITraktEpisodeWatchedProgress>"
  },
  "api/TraktNet.Objects.Get.Seasons.html": {
    "href": "api/TraktNet.Objects.Get.Seasons.html",
    "title": "Namespace TraktNet.Objects.Get.Seasons | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Seasons Classes TraktSeason A Trakt season of a Trakt show. TraktSeasonCollectionProgress Represents the collection progress of a Trakt season. TraktSeasonIds A collection of ids for various web services, including the Trakt id, for a Trakt season. TraktSeasonProgress Represents the progress of a Trakt season. TraktSeasonTranslation A translation for a Trakt show. TraktSeasonWatchedProgress Represents the watched progress of a Trakt season. Interfaces ITraktSeason A Trakt season of a Trakt show. ITraktSeasonCollectionProgress Represents the collection progress of a Trakt season. ITraktSeasonIds A collection of ids for various web services, including the Trakt id, for a Trakt season. ITraktSeasonProgress Represents the progress of a Trakt season. ITraktSeasonTranslation A translation for a Trakt season. ITraktSeasonWatchedProgress Represents the watched progress of a Trakt season."
  },
  "api/TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktMostAnticipatedShow.html",
    "title": "Interface ITraktMostAnticipatedShow | Trakt.NET",
    "keywords": "Interface ITraktMostAnticipatedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A anticipated Trakt show. public interface ITraktMostAnticipatedShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties ListCount Gets or sets the list count for the Show. int? ListCount { get; set; } Property Value int? Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktMostFavoritedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktMostFavoritedShow.html",
    "title": "Interface ITraktMostFavoritedShow | Trakt.NET",
    "keywords": "Interface ITraktMostFavoritedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A favorited Trakt show. public interface ITraktMostFavoritedShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow UserCount Gets or sets the user count for the Show. int? UserCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktMostPWCShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktMostPWCShow.html",
    "title": "Interface ITraktMostPWCShow | Trakt.NET",
    "keywords": "Interface ITraktMostPWCShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A played Trakt show. public interface ITraktMostPWCShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties CollectedCount Gets or sets the collected count for the Show. int? CollectedCount { get; set; } Property Value int? CollectorCount Gets or sets the collectors count for the Show. int? CollectorCount { get; set; } Property Value int? PlayCount Gets or sets the play count for the Show. int? PlayCount { get; set; } Property Value int? Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow WatcherCount Gets or sets the watcher count for the Show. int? WatcherCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktRecentlyUpdatedShow.html",
    "title": "Interface ITraktRecentlyUpdatedShow | Trakt.NET",
    "keywords": "Interface ITraktRecentlyUpdatedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll An updated Trakt show. public interface ITraktRecentlyUpdatedShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties RecentlyUpdatedAt Gets or sets the UTC datetime, when the Show was updated. DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime? Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShow.html",
    "title": "Interface ITraktShow | Trakt.NET",
    "keywords": "Interface ITraktShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show. public interface ITraktShow Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Status Gets or sets the show's current status. See also TraktShowStatus. Nullable TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowAirs.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowAirs.html",
    "title": "Interface ITraktShowAirs | Trakt.NET",
    "keywords": "Interface ITraktShowAirs Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll The air time of a Trakt show. public interface ITraktShowAirs Properties Day Gets or sets the day of week on which the show airs. Nullable string Day { get; set; } Property Value string Time Gets or sets the time of day at which the show airs. Nullable string Time { get; set; } Property Value string TimeZoneId Gets or sets the time zone id (Olson) for the location in which the show airs. Nullable string TimeZoneId { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowAlias.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowAlias.html",
    "title": "Interface ITraktShowAlias | Trakt.NET",
    "keywords": "Interface ITraktShowAlias Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll An alias for a Trakt show. public interface ITraktShowAlias Properties CountryCode Gets or sets the two letter country code for the show alias. Nullable string CountryCode { get; set; } Property Value string Title Gets or sets the title of the show alias. Nullable string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCastAndCrew.html",
    "title": "Interface ITraktShowCastAndCrew | Trakt.NET",
    "keywords": "Interface ITraktShowCastAndCrew Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents a collection of show cast- and crew-members. public interface ITraktShowCastAndCrew Properties Cast Gets or sets a list of showcast members. See also ITraktShowCastMember. Nullable IList<ITraktShowCastMember> Cast { get; set; } Property Value IList<ITraktShowCastMember> Crew Gets or sets the show crew members. See also ITraktShowCrew. Nullable ITraktShowCrew Crew { get; set; } Property Value ITraktShowCrew GuestStars Gets or sets a list of guest stars. See also ITraktShowCastMember. Nullable IList<ITraktShowCastMember> GuestStars { get; set; } Property Value IList<ITraktShowCastMember>"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCastMember.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCastMember.html",
    "title": "Interface ITraktShowCastMember | Trakt.NET",
    "keywords": "Interface ITraktShowCastMember Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show cast member. public interface ITraktShowCastMember : ITraktCastMember Inherited Members ITraktCastMember.Characters ITraktCastMember.Person Properties EpisodeCount Gets or sets the episode count of the cast member. Nullable int? EpisodeCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCertification.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCertification.html",
    "title": "Interface ITraktShowCertification | Trakt.NET",
    "keywords": "Interface ITraktShowCertification Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A certification of a Trakt show. public interface ITraktShowCertification Properties Certification Gets or sets the certification name. Nullable string Certification { get; set; } Property Value string CountryCode Gets or sets the country code. Nullable string CountryCode { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCollectionProgress.html",
    "title": "Interface ITraktShowCollectionProgress | Trakt.NET",
    "keywords": "Interface ITraktShowCollectionProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the collection progress of a Trakt show. public interface ITraktShowCollectionProgress : ITraktShowProgress Inherited Members ITraktShowProgress.Aired ITraktShowProgress.Completed ITraktShowProgress.HiddenSeasons ITraktShowProgress.NextEpisode ITraktShowProgress.LastEpisode Properties LastCollectedAt Gets or sets the UTC datetime, when the last collection occured. DateTime? LastCollectedAt { get; set; } Property Value DateTime? Seasons Gets or sets the collected seasons. See also ITraktSeasonCollectionProgress. Nullable IList<ITraktSeasonCollectionProgress> Seasons { get; set; } Property Value IList<ITraktSeasonCollectionProgress>"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCrew.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCrew.html",
    "title": "Interface ITraktShowCrew | Trakt.NET",
    "keywords": "Interface ITraktShowCrew Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A collection of show crew members in different categories. public interface ITraktShowCrew Properties Art Gets or sets a list of show crew members in the art category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Art { get; set; } Property Value IList<ITraktShowCrewMember> Camera Gets or sets a list of show crew members in the camera category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Camera { get; set; } Property Value IList<ITraktShowCrewMember> CostumeAndMakeup Gets or sets a list of show crew members in the costume and make-up category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> CostumeAndMakeup { get; set; } Property Value IList<ITraktShowCrewMember> Crew Gets or sets a list of show crew members. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Crew { get; set; } Property Value IList<ITraktShowCrewMember> Directing Gets or sets a list of show crew members in the directing category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Directing { get; set; } Property Value IList<ITraktShowCrewMember> Editing Gets or sets a list of show crew members in the editing category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Editing { get; set; } Property Value IList<ITraktShowCrewMember> Lighting Gets or sets a list of show crew members in the lighting category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Lighting { get; set; } Property Value IList<ITraktShowCrewMember> Production Gets or sets a list of show crew members in the production category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Production { get; set; } Property Value IList<ITraktShowCrewMember> Sound Gets or sets a list of show crew members in the sound category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Sound { get; set; } Property Value IList<ITraktShowCrewMember> VisualEffects Gets or sets a list of show crew members in the visual effects category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> VisualEffects { get; set; } Property Value IList<ITraktShowCrewMember> Writing Gets or sets a list of show crew members in the writing category. See also ITraktShowCrewMember. Nullable IList<ITraktShowCrewMember> Writing { get; set; } Property Value IList<ITraktShowCrewMember>"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowCrewMember.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowCrewMember.html",
    "title": "Interface ITraktShowCrewMember | Trakt.NET",
    "keywords": "Interface ITraktShowCrewMember Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show crew member. public interface ITraktShowCrewMember : ITraktCrewMember Inherited Members ITraktCrewMember.Jobs ITraktCrewMember.Person Properties EpisodeCount Gets or sets the episode count of the crew member. Nullable int? EpisodeCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowIds.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowIds.html",
    "title": "Interface ITraktShowIds | Trakt.NET",
    "keywords": "Interface ITraktShowIds Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt show. public interface ITraktShowIds : ITraktIds, IIds Inherited Members ITraktIds.Trakt ITraktIds.Slug ITraktIds.Tvdb ITraktIds.Imdb ITraktIds.Tmdb ITraktIds.TvRage IIds.HasAnyId IIds.GetBestId()"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowProgress.html",
    "title": "Interface ITraktShowProgress | Trakt.NET",
    "keywords": "Interface ITraktShowProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the progress of a Trakt show. public interface ITraktShowProgress Properties Aired Gets or sets the number of episodes, which already aired. int? Aired { get; set; } Property Value int? Completed Gets or sets the number of episodes already collected or watched. int? Completed { get; set; } Property Value int? HiddenSeasons Gets or sets the hidden seasons. See also ITraktSeason. Nullable IList<ITraktSeason> HiddenSeasons { get; set; } Property Value IList<ITraktSeason> LastEpisode Gets or sets the episode, which the user collected or watched last. See also ITraktEpisode. Nullable ITraktEpisode LastEpisode { get; set; } Property Value ITraktEpisode NextEpisode Gets or sets the episode, which the user should collect or watch. See also ITraktEpisode. Nullable ITraktEpisode NextEpisode { get; set; } Property Value ITraktEpisode"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowTranslation.html",
    "title": "Interface ITraktShowTranslation | Trakt.NET",
    "keywords": "Interface ITraktShowTranslation Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A translation for a Trakt show. public interface ITraktShowTranslation : ITraktTranslation Inherited Members ITraktTranslation.Title ITraktTranslation.Overview ITraktTranslation.LanguageCode ITraktTranslation.CountryCode"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktShowWatchedProgress.html",
    "title": "Interface ITraktShowWatchedProgress | Trakt.NET",
    "keywords": "Interface ITraktShowWatchedProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the watched progress of a Trakt show. public interface ITraktShowWatchedProgress : ITraktShowProgress Inherited Members ITraktShowProgress.Aired ITraktShowProgress.Completed ITraktShowProgress.HiddenSeasons ITraktShowProgress.NextEpisode ITraktShowProgress.LastEpisode Properties LastWatchedAt Gets or sets the UTC datetime, when the last watch occured. DateTime? LastWatchedAt { get; set; } Property Value DateTime? ResetAt Gets or sets the UTC datetime, when the watched progress has been reset. DateTime? ResetAt { get; set; } Property Value DateTime? Seasons Gets or sets the watched seasons. See also ITraktSeasonWatchedProgress. Nullable IList<ITraktSeasonWatchedProgress> Seasons { get; set; } Property Value IList<ITraktSeasonWatchedProgress>"
  },
  "api/TraktNet.Objects.Get.Shows.ITraktTrendingShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.ITraktTrendingShow.html",
    "title": "Interface ITraktTrendingShow | Trakt.NET",
    "keywords": "Interface ITraktTrendingShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A trending Trakt show. public interface ITraktTrendingShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Watchers Gets or sets the watcher count for the Show. int? Watchers { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktMostAnticipatedShow.html",
    "title": "Class TraktMostAnticipatedShow | Trakt.NET",
    "keywords": "Class TraktMostAnticipatedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A anticipated Trakt show. public class TraktMostAnticipatedShow : ITraktMostAnticipatedShow, ITraktShow Inheritance object TraktMostAnticipatedShow Implements ITraktMostAnticipatedShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string ListCount Gets or sets the list count for the Show. public int? ListCount { get; set; } Property Value int? Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktMostFavoritedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktMostFavoritedShow.html",
    "title": "Class TraktMostFavoritedShow | Trakt.NET",
    "keywords": "Class TraktMostFavoritedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A favorited Trakt show. public class TraktMostFavoritedShow : ITraktMostFavoritedShow, ITraktShow Inheritance object TraktMostFavoritedShow Implements ITraktMostFavoritedShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? UserCount Gets or sets the user count for the Show. public int? UserCount { get; set; } Property Value int? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktMostPWCShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktMostPWCShow.html",
    "title": "Class TraktMostPWCShow | Trakt.NET",
    "keywords": "Class TraktMostPWCShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A played Trakt show. public class TraktMostPWCShow : ITraktMostPWCShow, ITraktShow Inheritance object TraktMostPWCShow Implements ITraktMostPWCShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CollectedCount Gets or sets the collected count for the Show. public int? CollectedCount { get; set; } Property Value int? CollectorCount Gets or sets the collectors count for the Show. public int? CollectorCount { get; set; } Property Value int? CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string PlayCount Gets or sets the play count for the Show. public int? PlayCount { get; set; } Property Value int? Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? WatcherCount Gets or sets the watcher count for the Show. public int? WatcherCount { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktRecentlyUpdatedShow.html",
    "title": "Class TraktRecentlyUpdatedShow | Trakt.NET",
    "keywords": "Class TraktRecentlyUpdatedShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll An updated Trakt show. public class TraktRecentlyUpdatedShow : ITraktRecentlyUpdatedShow, ITraktShow Inheritance object TraktRecentlyUpdatedShow Implements ITraktRecentlyUpdatedShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? RecentlyUpdatedAt Gets or sets the UTC datetime, when the Show was updated. public DateTime? RecentlyUpdatedAt { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShow.html",
    "title": "Class TraktShow | Trakt.NET",
    "keywords": "Class TraktShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show. public class TraktShow : ITraktShow Inheritance object TraktShow Implements ITraktShow Derived TraktRecommendedShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowAirs.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowAirs.html",
    "title": "Class TraktShowAirs | Trakt.NET",
    "keywords": "Class TraktShowAirs Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll The air time of a Trakt show. public class TraktShowAirs : ITraktShowAirs Inheritance object TraktShowAirs Implements ITraktShowAirs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Day Gets or sets the day of week on which the show airs. Nullable public string Day { get; set; } Property Value string Time Gets or sets the time of day at which the show airs. Nullable public string Time { get; set; } Property Value string TimeZoneId Gets or sets the time zone id (Olson) for the location in which the show airs. Nullable public string TimeZoneId { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowAlias.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowAlias.html",
    "title": "Class TraktShowAlias | Trakt.NET",
    "keywords": "Class TraktShowAlias Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll An alias for a Trakt show. public class TraktShowAlias : ITraktShowAlias Inheritance object TraktShowAlias Implements ITraktShowAlias Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CountryCode Gets or sets the two letter country code for the show alias. Nullable public string CountryCode { get; set; } Property Value string Title Gets or sets the title of the show alias. Nullable public string Title { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCastAndCrew.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCastAndCrew.html",
    "title": "Class TraktShowCastAndCrew | Trakt.NET",
    "keywords": "Class TraktShowCastAndCrew Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents a collection of show cast- and crew-members. public class TraktShowCastAndCrew : ITraktShowCastAndCrew Inheritance object TraktShowCastAndCrew Implements ITraktShowCastAndCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Cast Gets or sets a list of showcast members. See also ITraktShowCastMember. Nullable public IList<ITraktShowCastMember> Cast { get; set; } Property Value IList<ITraktShowCastMember> Crew Gets or sets the show crew members. See also ITraktShowCrew. Nullable public ITraktShowCrew Crew { get; set; } Property Value ITraktShowCrew GuestStars Gets or sets a list of guest stars. See also ITraktShowCastMember. Nullable public IList<ITraktShowCastMember> GuestStars { get; set; } Property Value IList<ITraktShowCastMember>"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCastMember.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCastMember.html",
    "title": "Class TraktShowCastMember | Trakt.NET",
    "keywords": "Class TraktShowCastMember Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show cast member. public class TraktShowCastMember : TraktCastMember, ITraktShowCastMember, ITraktCastMember Inheritance object TraktCastMember TraktShowCastMember Implements ITraktShowCastMember ITraktCastMember Inherited Members TraktCastMember.Characters TraktCastMember.Person object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EpisodeCount Gets or sets the episode count of the cast member. Nullable public int? EpisodeCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCertification.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCertification.html",
    "title": "Class TraktShowCertification | Trakt.NET",
    "keywords": "Class TraktShowCertification Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A certification of a Trakt show. public class TraktShowCertification : ITraktShowCertification Inheritance object TraktShowCertification Implements ITraktShowCertification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Certification Gets or sets the certification name. Nullable public string Certification { get; set; } Property Value string CountryCode Gets or sets the country code. Nullable public string CountryCode { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCollectionProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCollectionProgress.html",
    "title": "Class TraktShowCollectionProgress | Trakt.NET",
    "keywords": "Class TraktShowCollectionProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the collection progress of a Trakt show. public class TraktShowCollectionProgress : TraktShowProgress, ITraktShowCollectionProgress, ITraktShowProgress Inheritance object TraktShowProgress TraktShowCollectionProgress Implements ITraktShowCollectionProgress ITraktShowProgress Inherited Members TraktShowProgress.Aired TraktShowProgress.Completed TraktShowProgress.HiddenSeasons TraktShowProgress.NextEpisode TraktShowProgress.LastEpisode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastCollectedAt Gets or sets the UTC datetime, when the last collection occured. public DateTime? LastCollectedAt { get; set; } Property Value DateTime? Seasons Gets or sets the collected seasons. See also ITraktSeasonCollectionProgress. Nullable public IList<ITraktSeasonCollectionProgress> Seasons { get; set; } Property Value IList<ITraktSeasonCollectionProgress>"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCrew.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCrew.html",
    "title": "Class TraktShowCrew | Trakt.NET",
    "keywords": "Class TraktShowCrew Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A collection of show crew members in different categories. public class TraktShowCrew : ITraktShowCrew Inheritance object TraktShowCrew Implements ITraktShowCrew Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Art Gets or sets a list of show crew members in the art category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Art { get; set; } Property Value IList<ITraktShowCrewMember> Camera Gets or sets a list of show crew members in the camera category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Camera { get; set; } Property Value IList<ITraktShowCrewMember> CostumeAndMakeup Gets or sets a list of show crew members in the costume and make-up category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> CostumeAndMakeup { get; set; } Property Value IList<ITraktShowCrewMember> Crew Gets or sets a list of show crew members. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Crew { get; set; } Property Value IList<ITraktShowCrewMember> Directing Gets or sets a list of show crew members in the directing category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Directing { get; set; } Property Value IList<ITraktShowCrewMember> Editing Gets or sets a list of show crew members in the editing category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Editing { get; set; } Property Value IList<ITraktShowCrewMember> Lighting Gets or sets a list of show crew members in the lighting category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Lighting { get; set; } Property Value IList<ITraktShowCrewMember> Production Gets or sets a list of show crew members in the production category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Production { get; set; } Property Value IList<ITraktShowCrewMember> Sound Gets or sets a list of show crew members in the sound category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Sound { get; set; } Property Value IList<ITraktShowCrewMember> VisualEffects Gets or sets a list of show crew members in the visual effects category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> VisualEffects { get; set; } Property Value IList<ITraktShowCrewMember> Writing Gets or sets a list of show crew members in the writing category. See also ITraktShowCrewMember. Nullable public IList<ITraktShowCrewMember> Writing { get; set; } Property Value IList<ITraktShowCrewMember>"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowCrewMember.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowCrewMember.html",
    "title": "Class TraktShowCrewMember | Trakt.NET",
    "keywords": "Class TraktShowCrewMember Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A Trakt show crew member. public class TraktShowCrewMember : TraktCrewMember, ITraktShowCrewMember, ITraktCrewMember Inheritance object TraktCrewMember TraktShowCrewMember Implements ITraktShowCrewMember ITraktCrewMember Inherited Members TraktCrewMember.Jobs TraktCrewMember.Person object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EpisodeCount Gets or sets the episode count of the crew member. Nullable public int? EpisodeCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowIds.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowIds.html",
    "title": "Class TraktShowIds | Trakt.NET",
    "keywords": "Class TraktShowIds Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A collection of ids for various web services, including the Trakt id, for a Trakt show. public class TraktShowIds : TraktIds, ITraktShowIds, ITraktIds, IIds Inheritance object TraktIds TraktShowIds Implements ITraktShowIds ITraktIds IIds Inherited Members TraktIds.Trakt TraktIds.Slug TraktIds.Tvdb TraktIds.Imdb TraktIds.Tmdb TraktIds.TvRage TraktIds.HasAnyId TraktIds.GetBestId() TraktIds.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowProgress.html",
    "title": "Class TraktShowProgress | Trakt.NET",
    "keywords": "Class TraktShowProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the progress of a Trakt show. public abstract class TraktShowProgress : ITraktShowProgress Inheritance object TraktShowProgress Implements ITraktShowProgress Derived TraktShowCollectionProgress TraktShowWatchedProgress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Aired Gets or sets the number of episodes, which already aired. public int? Aired { get; set; } Property Value int? Completed Gets or sets the number of episodes already collected or watched. public int? Completed { get; set; } Property Value int? HiddenSeasons Gets or sets the hidden seasons. See also ITraktSeason. Nullable public IList<ITraktSeason> HiddenSeasons { get; set; } Property Value IList<ITraktSeason> LastEpisode Gets or sets the episode, which the user collected or watched last. See also ITraktEpisode. Nullable public ITraktEpisode LastEpisode { get; set; } Property Value ITraktEpisode NextEpisode Gets or sets the episode, which the user should collect or watch. See also ITraktEpisode. Nullable public ITraktEpisode NextEpisode { get; set; } Property Value ITraktEpisode"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowTranslation.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowTranslation.html",
    "title": "Class TraktShowTranslation | Trakt.NET",
    "keywords": "Class TraktShowTranslation Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A translation for a Trakt show. public class TraktShowTranslation : TraktTranslation, ITraktShowTranslation, ITraktTranslation Inheritance object TraktTranslation TraktShowTranslation Implements ITraktShowTranslation ITraktTranslation Inherited Members TraktTranslation.Title TraktTranslation.Overview TraktTranslation.LanguageCode TraktTranslation.CountryCode TraktTranslation.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/TraktNet.Objects.Get.Shows.TraktShowWatchedProgress.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktShowWatchedProgress.html",
    "title": "Class TraktShowWatchedProgress | Trakt.NET",
    "keywords": "Class TraktShowWatchedProgress Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll Represents the watched progress of a Trakt show. public class TraktShowWatchedProgress : TraktShowProgress, ITraktShowWatchedProgress, ITraktShowProgress Inheritance object TraktShowProgress TraktShowWatchedProgress Implements ITraktShowWatchedProgress ITraktShowProgress Inherited Members TraktShowProgress.Aired TraktShowProgress.Completed TraktShowProgress.HiddenSeasons TraktShowProgress.NextEpisode TraktShowProgress.LastEpisode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastWatchedAt Gets or sets the UTC datetime, when the last watch occured. public DateTime? LastWatchedAt { get; set; } Property Value DateTime? ResetAt Gets or sets the UTC datetime, when the watched progress has been reset. public DateTime? ResetAt { get; set; } Property Value DateTime? Seasons Gets or sets the watched seasons. See also ITraktSeasonWatchedProgress. Nullable public IList<ITraktSeasonWatchedProgress> Seasons { get; set; } Property Value IList<ITraktSeasonWatchedProgress>"
  },
  "api/TraktNet.Objects.Get.Shows.TraktTrendingShow.html": {
    "href": "api/TraktNet.Objects.Get.Shows.TraktTrendingShow.html",
    "title": "Class TraktTrendingShow | Trakt.NET",
    "keywords": "Class TraktTrendingShow Namespace TraktNet.Objects.Get.Shows Assembly Trakt.NET.dll A trending Trakt show. public class TraktTrendingShow : ITraktTrendingShow, ITraktShow Inheritance object TraktTrendingShow Implements ITraktTrendingShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? Watchers Gets or sets the watcher count for the Show. public int? Watchers { get; set; } Property Value int? Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Shows.html": {
    "href": "api/TraktNet.Objects.Get.Shows.html",
    "title": "Namespace TraktNet.Objects.Get.Shows | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Shows Classes TraktMostAnticipatedShow A anticipated Trakt show. TraktMostFavoritedShow A favorited Trakt show. TraktMostPWCShow A played Trakt show. TraktRecentlyUpdatedShow An updated Trakt show. TraktShow A Trakt show. TraktShowAirs The air time of a Trakt show. TraktShowAlias An alias for a Trakt show. TraktShowCastAndCrew Represents a collection of show cast- and crew-members. TraktShowCastMember A Trakt show cast member. TraktShowCertification A certification of a Trakt show. TraktShowCollectionProgress Represents the collection progress of a Trakt show. TraktShowCrew A collection of show crew members in different categories. TraktShowCrewMember A Trakt show crew member. TraktShowIds A collection of ids for various web services, including the Trakt id, for a Trakt show. TraktShowProgress Represents the progress of a Trakt show. TraktShowTranslation A translation for a Trakt show. TraktShowWatchedProgress Represents the watched progress of a Trakt show. TraktTrendingShow A trending Trakt show. Interfaces ITraktMostAnticipatedShow A anticipated Trakt show. ITraktMostFavoritedShow A favorited Trakt show. ITraktMostPWCShow A played Trakt show. ITraktRecentlyUpdatedShow An updated Trakt show. ITraktShow A Trakt show. ITraktShowAirs The air time of a Trakt show. ITraktShowAlias An alias for a Trakt show. ITraktShowCastAndCrew Represents a collection of show cast- and crew-members. ITraktShowCastMember A Trakt show cast member. ITraktShowCertification A certification of a Trakt show. ITraktShowCollectionProgress Represents the collection progress of a Trakt show. ITraktShowCrew A collection of show crew members in different categories. ITraktShowCrewMember A Trakt show crew member. ITraktShowIds A collection of ids for various web services, including the Trakt id, for a Trakt show. ITraktShowProgress Represents the progress of a Trakt show. ITraktShowTranslation A translation for a Trakt show. ITraktShowWatchedProgress Represents the watched progress of a Trakt show. ITraktTrendingShow A trending Trakt show."
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncAccountLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncAccountLastActivities.html",
    "title": "Interface ITraktSyncAccountLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncAccountLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for an account. public interface ITraktSyncAccountLastActivities Properties FollowedAt Gets or sets the UTC datetime, when a user lastly received a following. DateTime? FollowedAt { get; set; } Property Value DateTime? FollowingAt Gets or sets the UTC datetime, when a user was lastly followed. DateTime? FollowingAt { get; set; } Property Value DateTime? PendingAt Gets or sets the UTC datetime, when a follow request was lastly pended. DateTime? PendingAt { get; set; } Property Value DateTime? RequestedAt Gets or sets the UTC datetime, when a follow request lastly occured. DateTime? RequestedAt { get; set; } Property Value DateTime? SettingsAt Gets or sets the UTC datetime, when account settings were lastly updated. DateTime? SettingsAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCollaborationsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCollaborationsLastActivities.html",
    "title": "Interface ITraktSyncCollaborationsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncCollaborationsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for collaborations. public interface ITraktSyncCollaborationsLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when a user's collaborations were lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncCommentsLastActivities.html",
    "title": "Interface ITraktSyncCommentsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncCommentsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for comments. public interface ITraktSyncCommentsLastActivities Properties BlockedAt Gets or sets the UTC datetime, when a comment was lastly blocked. DateTime? BlockedAt { get; set; } Property Value DateTime? LikedAt Gets or sets the UTC datetime, when a comment was lastly liked. DateTime? LikedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncEpisodesLastActivities.html",
    "title": "Interface ITraktSyncEpisodesLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncEpisodesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for episodes. public interface ITraktSyncEpisodesLastActivities Properties CollectedAt Gets or sets the UTC datetime, when an episode was lastly collected. DateTime? CollectedAt { get; set; } Property Value DateTime? CommentedAt Gets or sets the UTC datetime, when an episode was lastly commented. DateTime? CommentedAt { get; set; } Property Value DateTime? PausedAt Gets or sets the UTC datetime, when an episode was lastly paused. DateTime? PausedAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when an episode was lastly rated. DateTime? RatedAt { get; set; } Property Value DateTime? WatchedAt Gets or sets the UTC datetime, when an episode was lastly watched. DateTime? WatchedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when an episode was lastly added to the watchlist. DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncFavoritesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncFavoritesLastActivities.html",
    "title": "Interface ITraktSyncFavoritesLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for favorites. public interface ITraktSyncFavoritesLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when a user's favorites were lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncLastActivities.html",
    "title": "Interface ITraktSyncLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities. public interface ITraktSyncLastActivities Properties Account Gets or sets a collection of UTC datetimes of last activities for an account. See also ITraktSyncAccountLastActivities. Nullable ITraktSyncAccountLastActivities Account { get; set; } Property Value ITraktSyncAccountLastActivities All Gets or sets the UTC datetime of the overall last activity. DateTime? All { get; set; } Property Value DateTime? Collaborations Gets or sets a collection of UTC datetimes of last activities for collaborations. See also ITraktSyncCollaborationsLastActivities. Nullable ITraktSyncCollaborationsLastActivities Collaborations { get; set; } Property Value ITraktSyncCollaborationsLastActivities Comments Gets or sets a collection of UTC datetimes of last activities for comments. See also ITraktSyncCommentsLastActivities. Nullable ITraktSyncCommentsLastActivities Comments { get; set; } Property Value ITraktSyncCommentsLastActivities Episodes Gets or sets a collection of UTC datetimes of last activities for episodes. See also ITraktSyncEpisodesLastActivities. Nullable ITraktSyncEpisodesLastActivities Episodes { get; set; } Property Value ITraktSyncEpisodesLastActivities Favorites Gets or sets a collection of UTC datetimes of last activities for favorites. See also ITraktSyncFavoritesLastActivities. Nullable ITraktSyncFavoritesLastActivities Favorites { get; set; } Property Value ITraktSyncFavoritesLastActivities Lists Gets or sets a collection of UTC datetimes of last activities for lists. See also ITraktSyncListsLastActivities. Nullable ITraktSyncListsLastActivities Lists { get; set; } Property Value ITraktSyncListsLastActivities Movies Gets or sets a collection of UTC datetimes of last activities for movies. See also ITraktSyncMoviesLastActivities. Nullable ITraktSyncMoviesLastActivities Movies { get; set; } Property Value ITraktSyncMoviesLastActivities Notes Gets or sets a collection of UTC datetimes of last activities for notes. See also ITraktSyncNotesLastActivities. Nullable ITraktSyncNotesLastActivities Notes { get; set; } Property Value ITraktSyncNotesLastActivities Recommendations Gets or sets a collection of UTC datetimes of last activities for recommendations. See also ITraktSyncRecommendationsLastActivities. Nullable ITraktSyncRecommendationsLastActivities Recommendations { get; set; } Property Value ITraktSyncRecommendationsLastActivities SavedFilters Gets or sets a collection of UTC datetimes of last activities for saved filters. See also ITraktSyncSavedFiltersLastActivities. Nullable ITraktSyncSavedFiltersLastActivities SavedFilters { get; set; } Property Value ITraktSyncSavedFiltersLastActivities Seasons Gets or sets a collection of UTC datetimes of last activities for seasons. See also ITraktSyncSeasonsLastActivities. Nullable ITraktSyncSeasonsLastActivities Seasons { get; set; } Property Value ITraktSyncSeasonsLastActivities Shows Gets or sets a collection of UTC datetimes of last activities for shows. See also ITraktSyncShowsLastActivities. Nullable ITraktSyncShowsLastActivities Shows { get; set; } Property Value ITraktSyncShowsLastActivities Watchlist Gets or sets a collection of UTC datetimes of last activities for watchlists. See also ITraktSyncWatchlistLastActivities. Nullable ITraktSyncWatchlistLastActivities Watchlist { get; set; } Property Value ITraktSyncWatchlistLastActivities"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncListsLastActivities.html",
    "title": "Interface ITraktSyncListsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncListsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for lists. public interface ITraktSyncListsLastActivities Properties CommentedAt Gets or sets the UTC datetime, when a list was lastly commented. DateTime? CommentedAt { get; set; } Property Value DateTime? LikedAt Gets or sets the UTC datetime, when a list was lastly liked. DateTime? LikedAt { get; set; } Property Value DateTime? UpdatedAt Gets or sets the UTC datetime, when a list was lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncMoviesLastActivities.html",
    "title": "Interface ITraktSyncMoviesLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncMoviesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for movies. public interface ITraktSyncMoviesLastActivities Properties CollectedAt Gets or sets the UTC datetime, when a movie was lastly collected. DateTime? CollectedAt { get; set; } Property Value DateTime? CommentedAt Gets or sets the UTC datetime, when a movie was lastly commented. DateTime? CommentedAt { get; set; } Property Value DateTime? FavoritedAt Gets or sets the UTC datetime, when a movie was lastly favorited. DateTime? FavoritedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a movie was lastly hidden. DateTime? HiddenAt { get; set; } Property Value DateTime? PausedAt Gets or sets the UTC datetime, when a movie was lastly paused. DateTime? PausedAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a movie was lastly rated. DateTime? RatedAt { get; set; } Property Value DateTime? RecommendationsAt Gets or sets the UTC datetime, when a movie was lastly recommended. DateTime? RecommendationsAt { get; set; } Property Value DateTime? WatchedAt Gets or sets the UTC datetime, when a movie was lastly watched. DateTime? WatchedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a movie was lastly added to the watchlist. DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncNotesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncNotesLastActivities.html",
    "title": "Interface ITraktSyncNotesLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncNotesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for notes. public interface ITraktSyncNotesLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when a user's notes were lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncRecommendationsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncRecommendationsLastActivities.html",
    "title": "Interface ITraktSyncRecommendationsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncRecommendationsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for recommendations. public interface ITraktSyncRecommendationsLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when recommendations were lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSavedFiltersLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSavedFiltersLastActivities.html",
    "title": "Interface ITraktSyncSavedFiltersLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncSavedFiltersLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for saved filters. public interface ITraktSyncSavedFiltersLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when a saved filter was lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncSeasonsLastActivities.html",
    "title": "Interface ITraktSyncSeasonsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncSeasonsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for seasons. public interface ITraktSyncSeasonsLastActivities Properties CommentedAt Gets or sets the UTC datetime, when a season was lastly commented. DateTime? CommentedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a season was lastly hidden. DateTime? HiddenAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a season was lastly rated. DateTime? RatedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a season was lastly added to the watchlist. DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncShowsLastActivities.html",
    "title": "Interface ITraktSyncShowsLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncShowsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for shows. public interface ITraktSyncShowsLastActivities Properties CommentedAt Gets or sets the UTC datetime, when a show was lastly commented. DateTime? CommentedAt { get; set; } Property Value DateTime? FavoritedAt Gets or sets the UTC datetime, when a show was lastly favorited. DateTime? FavoritedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a show was lastly hidden. DateTime? HiddenAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a show was lastly rated. DateTime? RatedAt { get; set; } Property Value DateTime? RecommendationsAt Gets or sets the UTC datetime, when a show was lastly recommended. DateTime? RecommendationsAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a show was lastly added to the watchlist. DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncWatchlistLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.ITraktSyncWatchlistLastActivities.html",
    "title": "Interface ITraktSyncWatchlistLastActivities | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for watchlists. public interface ITraktSyncWatchlistLastActivities Properties UpdatedAt Gets or sets the UTC datetime, when a watchlist was lastly updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncAccountLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncAccountLastActivities.html",
    "title": "Class TraktSyncAccountLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncAccountLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for an account. public class TraktSyncAccountLastActivities : ITraktSyncAccountLastActivities Inheritance object TraktSyncAccountLastActivities Implements ITraktSyncAccountLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FollowedAt Gets or sets the UTC datetime, when a user lastly received a following. public DateTime? FollowedAt { get; set; } Property Value DateTime? FollowingAt Gets or sets the UTC datetime, when a user was lastly followed. public DateTime? FollowingAt { get; set; } Property Value DateTime? PendingAt Gets or sets the UTC datetime, when a follow request was lastly pended. public DateTime? PendingAt { get; set; } Property Value DateTime? RequestedAt Gets or sets the UTC datetime, when a follow request lastly occured. public DateTime? RequestedAt { get; set; } Property Value DateTime? SettingsAt Gets or sets the UTC datetime, when account settings were lastly updated. public DateTime? SettingsAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncCollaborationsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncCollaborationsLastActivities.html",
    "title": "Class TraktSyncCollaborationsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncCollaborationsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for collaborations. public class TraktSyncCollaborationsLastActivities : ITraktSyncCollaborationsLastActivities Inheritance object TraktSyncCollaborationsLastActivities Implements ITraktSyncCollaborationsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when a user's collaborations were lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncCommentsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncCommentsLastActivities.html",
    "title": "Class TraktSyncCommentsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncCommentsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for comments. public class TraktSyncCommentsLastActivities : ITraktSyncCommentsLastActivities Inheritance object TraktSyncCommentsLastActivities Implements ITraktSyncCommentsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BlockedAt Gets or sets the UTC datetime, when a comment was lastly blocked. public DateTime? BlockedAt { get; set; } Property Value DateTime? LikedAt Gets or sets the UTC datetime, when a comment was lastly liked. public DateTime? LikedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncEpisodesLastActivities.html",
    "title": "Class TraktSyncEpisodesLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncEpisodesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for episodes. public class TraktSyncEpisodesLastActivities : ITraktSyncEpisodesLastActivities Inheritance object TraktSyncEpisodesLastActivities Implements ITraktSyncEpisodesLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the UTC datetime, when an episode was lastly collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? CommentedAt Gets or sets the UTC datetime, when an episode was lastly commented. public DateTime? CommentedAt { get; set; } Property Value DateTime? PausedAt Gets or sets the UTC datetime, when an episode was lastly paused. public DateTime? PausedAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when an episode was lastly rated. public DateTime? RatedAt { get; set; } Property Value DateTime? WatchedAt Gets or sets the UTC datetime, when an episode was lastly watched. public DateTime? WatchedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when an episode was lastly added to the watchlist. public DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncFavoritesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncFavoritesLastActivities.html",
    "title": "Class TraktSyncFavoritesLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for favorites. public class TraktSyncFavoritesLastActivities : ITraktSyncFavoritesLastActivities Inheritance object TraktSyncFavoritesLastActivities Implements ITraktSyncFavoritesLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when a user's favorites were lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncLastActivities.html",
    "title": "Class TraktSyncLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities. public class TraktSyncLastActivities : ITraktSyncLastActivities Inheritance object TraktSyncLastActivities Implements ITraktSyncLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Account Gets or sets a collection of UTC datetimes of last activities for an account. See also ITraktSyncAccountLastActivities. Nullable public ITraktSyncAccountLastActivities Account { get; set; } Property Value ITraktSyncAccountLastActivities All Gets or sets the UTC datetime of the overall last activity. public DateTime? All { get; set; } Property Value DateTime? Collaborations Gets or sets a collection of UTC datetimes of last activities for collaborations. See also ITraktSyncCollaborationsLastActivities. Nullable public ITraktSyncCollaborationsLastActivities Collaborations { get; set; } Property Value ITraktSyncCollaborationsLastActivities Comments Gets or sets a collection of UTC datetimes of last activities for comments. See also ITraktSyncCommentsLastActivities. Nullable public ITraktSyncCommentsLastActivities Comments { get; set; } Property Value ITraktSyncCommentsLastActivities Episodes Gets or sets a collection of UTC datetimes of last activities for episodes. See also ITraktSyncEpisodesLastActivities. Nullable public ITraktSyncEpisodesLastActivities Episodes { get; set; } Property Value ITraktSyncEpisodesLastActivities Favorites Gets or sets a collection of UTC datetimes of last activities for favorites. See also ITraktSyncFavoritesLastActivities. Nullable public ITraktSyncFavoritesLastActivities Favorites { get; set; } Property Value ITraktSyncFavoritesLastActivities Lists Gets or sets a collection of UTC datetimes of last activities for lists. See also ITraktSyncListsLastActivities. Nullable public ITraktSyncListsLastActivities Lists { get; set; } Property Value ITraktSyncListsLastActivities Movies Gets or sets a collection of UTC datetimes of last activities for movies. See also ITraktSyncMoviesLastActivities. Nullable public ITraktSyncMoviesLastActivities Movies { get; set; } Property Value ITraktSyncMoviesLastActivities Notes Gets or sets a collection of UTC datetimes of last activities for notes. See also ITraktSyncNotesLastActivities. Nullable public ITraktSyncNotesLastActivities Notes { get; set; } Property Value ITraktSyncNotesLastActivities Recommendations Gets or sets a collection of UTC datetimes of last activities for recommendations. See also ITraktSyncRecommendationsLastActivities. Nullable public ITraktSyncRecommendationsLastActivities Recommendations { get; set; } Property Value ITraktSyncRecommendationsLastActivities SavedFilters Gets or sets a collection of UTC datetimes of last activities for saved filters. See also ITraktSyncSavedFiltersLastActivities. Nullable public ITraktSyncSavedFiltersLastActivities SavedFilters { get; set; } Property Value ITraktSyncSavedFiltersLastActivities Seasons Gets or sets a collection of UTC datetimes of last activities for seasons. See also ITraktSyncSeasonsLastActivities. Nullable public ITraktSyncSeasonsLastActivities Seasons { get; set; } Property Value ITraktSyncSeasonsLastActivities Shows Gets or sets a collection of UTC datetimes of last activities for shows. See also ITraktSyncShowsLastActivities. Nullable public ITraktSyncShowsLastActivities Shows { get; set; } Property Value ITraktSyncShowsLastActivities Watchlist Gets or sets a collection of UTC datetimes of last activities for watchlists. See also ITraktSyncWatchlistLastActivities. Nullable public ITraktSyncWatchlistLastActivities Watchlist { get; set; } Property Value ITraktSyncWatchlistLastActivities"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncListsLastActivities.html",
    "title": "Class TraktSyncListsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncListsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for lists. public class TraktSyncListsLastActivities : ITraktSyncListsLastActivities Inheritance object TraktSyncListsLastActivities Implements ITraktSyncListsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CommentedAt Gets or sets the UTC datetime, when a list was lastly commented. public DateTime? CommentedAt { get; set; } Property Value DateTime? LikedAt Gets or sets the UTC datetime, when a list was lastly liked. public DateTime? LikedAt { get; set; } Property Value DateTime? UpdatedAt Gets or sets the UTC datetime, when a list was lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncMoviesLastActivities.html",
    "title": "Class TraktSyncMoviesLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncMoviesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for movies. public class TraktSyncMoviesLastActivities : ITraktSyncMoviesLastActivities Inheritance object TraktSyncMoviesLastActivities Implements ITraktSyncMoviesLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the UTC datetime, when a movie was lastly collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? CommentedAt Gets or sets the UTC datetime, when a movie was lastly commented. public DateTime? CommentedAt { get; set; } Property Value DateTime? FavoritedAt Gets or sets the UTC datetime, when a movie was lastly favorited. public DateTime? FavoritedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a movie was lastly hidden. public DateTime? HiddenAt { get; set; } Property Value DateTime? PausedAt Gets or sets the UTC datetime, when a movie was lastly paused. public DateTime? PausedAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a movie was lastly rated. public DateTime? RatedAt { get; set; } Property Value DateTime? RecommendationsAt Gets or sets the UTC datetime, when a movie was lastly recommended. public DateTime? RecommendationsAt { get; set; } Property Value DateTime? WatchedAt Gets or sets the UTC datetime, when a movie was lastly watched. public DateTime? WatchedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a movie was lastly added to the watchlist. public DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncNotesLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncNotesLastActivities.html",
    "title": "Class TraktSyncNotesLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncNotesLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for notes. public class TraktSyncNotesLastActivities : ITraktSyncNotesLastActivities Inheritance object TraktSyncNotesLastActivities Implements ITraktSyncNotesLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when a user's notes were lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncRecommendationsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncRecommendationsLastActivities.html",
    "title": "Class TraktSyncRecommendationsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncRecommendationsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for recommendations. public class TraktSyncRecommendationsLastActivities : ITraktSyncRecommendationsLastActivities Inheritance object TraktSyncRecommendationsLastActivities Implements ITraktSyncRecommendationsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when recommendations were lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncSavedFiltersLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncSavedFiltersLastActivities.html",
    "title": "Class TraktSyncSavedFiltersLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncSavedFiltersLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for saved filters. public class TraktSyncSavedFiltersLastActivities : ITraktSyncSavedFiltersLastActivities Inheritance object TraktSyncSavedFiltersLastActivities Implements ITraktSyncSavedFiltersLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when a saved filter was lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncSeasonsLastActivities.html",
    "title": "Class TraktSyncSeasonsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncSeasonsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for seasons. public class TraktSyncSeasonsLastActivities : ITraktSyncSeasonsLastActivities Inheritance object TraktSyncSeasonsLastActivities Implements ITraktSyncSeasonsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CommentedAt Gets or sets the UTC datetime, when a season was lastly commented. public DateTime? CommentedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a season was lastly hidden. public DateTime? HiddenAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a season was lastly rated. public DateTime? RatedAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a season was lastly added to the watchlist. public DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncShowsLastActivities.html",
    "title": "Class TraktSyncShowsLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncShowsLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for shows. public class TraktSyncShowsLastActivities : ITraktSyncShowsLastActivities Inheritance object TraktSyncShowsLastActivities Implements ITraktSyncShowsLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CommentedAt Gets or sets the UTC datetime, when a show was lastly commented. public DateTime? CommentedAt { get; set; } Property Value DateTime? FavoritedAt Gets or sets the UTC datetime, when a show was lastly favorited. public DateTime? FavoritedAt { get; set; } Property Value DateTime? HiddenAt Gets or sets the UTC datetime, when a show was lastly hidden. public DateTime? HiddenAt { get; set; } Property Value DateTime? RatedAt Gets or sets the UTC datetime, when a show was lastly rated. public DateTime? RatedAt { get; set; } Property Value DateTime? RecommendationsAt Gets or sets the UTC datetime, when a show was lastly recommended. public DateTime? RecommendationsAt { get; set; } Property Value DateTime? WatchlistedAt Gets or sets the UTC datetime, when a show was lastly added to the watchlist. public DateTime? WatchlistedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncWatchlistLastActivities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.TraktSyncWatchlistLastActivities.html",
    "title": "Class TraktSyncWatchlistLastActivities | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistLastActivities Namespace TraktNet.Objects.Get.Syncs.Activities Assembly Trakt.NET.dll A collection of UTC datetimes of last activities for watchlists. public class TraktSyncWatchlistLastActivities : ITraktSyncWatchlistLastActivities Inheritance object TraktSyncWatchlistLastActivities Implements ITraktSyncWatchlistLastActivities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UpdatedAt Gets or sets the UTC datetime, when a watchlist was lastly updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Syncs.Activities.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Activities.html",
    "title": "Namespace TraktNet.Objects.Get.Syncs.Activities | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Syncs.Activities Classes TraktSyncAccountLastActivities A collection of UTC datetimes of last activities for an account. TraktSyncCollaborationsLastActivities A collection of UTC datetimes of last activities for collaborations. TraktSyncCommentsLastActivities A collection of UTC datetimes of last activities for comments. TraktSyncEpisodesLastActivities A collection of UTC datetimes of last activities for episodes. TraktSyncFavoritesLastActivities A collection of UTC datetimes of last activities for favorites. TraktSyncLastActivities A collection of UTC datetimes of last activities. TraktSyncListsLastActivities A collection of UTC datetimes of last activities for lists. TraktSyncMoviesLastActivities A collection of UTC datetimes of last activities for movies. TraktSyncNotesLastActivities A collection of UTC datetimes of last activities for notes. TraktSyncRecommendationsLastActivities A collection of UTC datetimes of last activities for recommendations. TraktSyncSavedFiltersLastActivities A collection of UTC datetimes of last activities for saved filters. TraktSyncSeasonsLastActivities A collection of UTC datetimes of last activities for seasons. TraktSyncShowsLastActivities A collection of UTC datetimes of last activities for shows. TraktSyncWatchlistLastActivities A collection of UTC datetimes of last activities for watchlists. Interfaces ITraktSyncAccountLastActivities A collection of UTC datetimes of last activities for an account. ITraktSyncCollaborationsLastActivities A collection of UTC datetimes of last activities for collaborations. ITraktSyncCommentsLastActivities A collection of UTC datetimes of last activities for comments. ITraktSyncEpisodesLastActivities A collection of UTC datetimes of last activities for episodes. ITraktSyncFavoritesLastActivities A collection of UTC datetimes of last activities for favorites. ITraktSyncLastActivities A collection of UTC datetimes of last activities. ITraktSyncListsLastActivities A collection of UTC datetimes of last activities for lists. ITraktSyncMoviesLastActivities A collection of UTC datetimes of last activities for movies. ITraktSyncNotesLastActivities A collection of UTC datetimes of last activities for notes. ITraktSyncRecommendationsLastActivities A collection of UTC datetimes of last activities for recommendations. ITraktSyncSavedFiltersLastActivities A collection of UTC datetimes of last activities for saved filters. ITraktSyncSeasonsLastActivities A collection of UTC datetimes of last activities for seasons. ITraktSyncShowsLastActivities A collection of UTC datetimes of last activities for shows. ITraktSyncWatchlistLastActivities A collection of UTC datetimes of last activities for watchlists."
  },
  "api/TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Playback.ITraktSyncPlaybackProgressItem.html",
    "title": "Interface ITraktSyncPlaybackProgressItem | Trakt.NET",
    "keywords": "Interface ITraktSyncPlaybackProgressItem Namespace TraktNet.Objects.Get.Syncs.Playback Assembly Trakt.NET.dll Contains information about a Trakt playback progress, including the corresponding movie or episode. public interface ITraktSyncPlaybackProgressItem Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of this progress item. uint Id { get; set; } Property Value uint Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie PausedAt Gets or sets the UTC datetime, when the watched movie or episode was paused. DateTime? PausedAt { get; set; } Property Value DateTime? Progress Gets or sets a value between 0 and 100 representing the watched progress percentage of the movie or episode. float? Progress { get; set; } Property Value float? Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this progress item contains. See also TraktSyncType. Nullable TraktSyncType Type { get; set; } Property Value TraktSyncType"
  },
  "api/TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Playback.TraktSyncPlaybackProgressItem.html",
    "title": "Class TraktSyncPlaybackProgressItem | Trakt.NET",
    "keywords": "Class TraktSyncPlaybackProgressItem Namespace TraktNet.Objects.Get.Syncs.Playback Assembly Trakt.NET.dll Contains information about a Trakt playback progress, including the corresponding movie or episode. public class TraktSyncPlaybackProgressItem : ITraktSyncPlaybackProgressItem Inheritance object TraktSyncPlaybackProgressItem Implements ITraktSyncPlaybackProgressItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of this progress item. public uint Id { get; set; } Property Value uint Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie PausedAt Gets or sets the UTC datetime, when the watched movie or episode was paused. public DateTime? PausedAt { get; set; } Property Value DateTime? Progress Gets or sets a value between 0 and 100 representing the watched progress percentage of the movie or episode. public float? Progress { get; set; } Property Value float? Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this progress item contains. See also TraktSyncType. Nullable public TraktSyncType Type { get; set; } Property Value TraktSyncType"
  },
  "api/TraktNet.Objects.Get.Syncs.Playback.html": {
    "href": "api/TraktNet.Objects.Get.Syncs.Playback.html",
    "title": "Namespace TraktNet.Objects.Get.Syncs.Playback | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Syncs.Playback Classes TraktSyncPlaybackProgressItem Contains information about a Trakt playback progress, including the corresponding movie or episode. Interfaces ITraktSyncPlaybackProgressItem Contains information about a Trakt playback progress, including the corresponding movie or episode."
  },
  "api/TraktNet.Objects.Get.Users.ITraktAccountSettings.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktAccountSettings.html",
    "title": "Interface ITraktAccountSettings | Trakt.NET",
    "keywords": "Interface ITraktAccountSettings Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user account settings. public interface ITraktAccountSettings Properties CoverImage Gets or sets the user's cover image url. Nullable string CoverImage { get; set; } Property Value string DateFormat Gets or sets the user's date format. Nullable TraktDateFormat DateFormat { get; set; } Property Value TraktDateFormat Time24Hr Gets or sets, whether an user uses the 24h time format. bool? Time24Hr { get; set; } Property Value bool? TimeZoneId Gets or sets the user's timezone. Nullable string TimeZoneId { get; set; } Property Value string Token Gets or sets the user's token. Nullable string Token { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Users.ITraktFavorite.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktFavorite.html",
    "title": "Interface ITraktFavorite | Trakt.NET",
    "keywords": "Interface ITraktFavorite Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt favorite. public interface ITraktFavorite Properties Id Gets or sets the id of this favorite item. ulong? Id { get; set; } Property Value ulong? ListedAt Gets or sets the UTC datetime, when the favorite was listed. DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktShow. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the favorite notes. string Notes { get; set; } Property Value string Rank Gets or sets the favorite rank. int? Rank { get; set; } Property Value int? Show Gets or sets the show, if Type is Show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the favorite item type. See also TraktFavoriteObjectType. Nullable TraktFavoriteObjectType Type { get; set; } Property Value TraktFavoriteObjectType"
  },
  "api/TraktNet.Objects.Get.Users.ITraktSharingText.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktSharingText.html",
    "title": "Interface ITraktSharingText | Trakt.NET",
    "keywords": "Interface ITraktSharingText Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user social media sharing text settings. public interface ITraktSharingText Properties Rated Gets or sets the user's sharing text for rated items. Nullable string Rated { get; set; } Property Value string Watched Gets or sets the user's sharing text for watched items. Nullable string Watched { get; set; } Property Value string Watching Gets or sets the user's sharing text for watching an item. Nullable string Watching { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUser.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUser.html",
    "title": "Interface ITraktUser | Trakt.NET",
    "keywords": "Interface ITraktUser Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user. public interface ITraktUser Properties About Gets or sets the user's about information. Nullable string About { get; set; } Property Value string Age Gets or sets the user's age. int? Age { get; set; } Property Value int? Gender Gets or sets the user's gender. Nullable string Gender { get; set; } Property Value string Ids Gets or sets the collection of ids for the user. See also ITraktUserIds. Nullable ITraktUserIds Ids { get; set; } Property Value ITraktUserIds Images Gets or sets the collection of images for the user. See also ITraktUserImages. Nullable ITraktUserImages Images { get; set; } Property Value ITraktUserImages IsPrivate Gets or sets the user's privacy status. bool? IsPrivate { get; set; } Property Value bool? IsVIP Gets or sets the user's VIP status. bool? IsVIP { get; set; } Property Value bool? IsVIP_EP Gets or sets the user's VIP EP status. bool? IsVIP_EP { get; set; } Property Value bool? IsVIP_OG Gets or sets the user's VIP OG status. bool? IsVIP_OG { get; set; } Property Value bool? JoinedAt Gets or sets the UTC datetime when the user joined Trakt. DateTime? JoinedAt { get; set; } Property Value DateTime? Location Gets or sets the user's location. Nullable string Location { get; set; } Property Value string Name Gets or sets the user's name. Nullable string Name { get; set; } Property Value string Username Gets or sets the user's username. Nullable string Username { get; set; } Property Value string VIP_CoverImage Gets or sets the user's VIP cover image. string VIP_CoverImage { get; set; } Property Value string VIP_Years Gets or sets the user's VIP years. int? VIP_Years { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserComment.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserComment.html",
    "title": "Interface ITraktUserComment | Trakt.NET",
    "keywords": "Interface ITraktUserComment Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user comment. public interface ITraktUserComment Properties Comment Gets or sets the comment's content. Nullable ITraktComment Comment { get; set; } Property Value ITraktComment Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the list, if Type is Episode. See also ITraktList. Nullable ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Episode. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this comment contains. See also TraktObjectType. Nullable TraktObjectType Type { get; set; } Property Value TraktObjectType"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserFavoritesLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserFavoritesLimits.html",
    "title": "Interface ITraktUserFavoritesLimits | Trakt.NET",
    "keywords": "Interface ITraktUserFavoritesLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user favorites limits. public interface ITraktUserFavoritesLimits Properties ItemCount Gets or sets the number maximum favorites item count. int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserFollowRequest.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserFollowRequest.html",
    "title": "Interface ITraktUserFollowRequest | Trakt.NET",
    "keywords": "Interface ITraktUserFollowRequest Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents a Trakt user follow request. public interface ITraktUserFollowRequest Properties Id Gets or sets the id of the follow request. uint Id { get; set; } Property Value uint RequestedAt Gets or sets the UTC datetime, when the request was made. DateTime? RequestedAt { get; set; } Property Value DateTime? User Gets or sets the Trakt user, who is requesting. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserFollower.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserFollower.html",
    "title": "Interface ITraktUserFollower | Trakt.NET",
    "keywords": "Interface ITraktUserFollower Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user follower. public interface ITraktUserFollower : ITraktUser Inherited Members ITraktUser.Username ITraktUser.IsPrivate ITraktUser.Ids ITraktUser.Name ITraktUser.IsVIP ITraktUser.IsVIP_EP ITraktUser.JoinedAt ITraktUser.Location ITraktUser.About ITraktUser.Gender ITraktUser.Age ITraktUser.Images ITraktUser.IsVIP_OG ITraktUser.VIP_Years ITraktUser.VIP_CoverImage Properties FollowedAt Gets or sets the UTC datetime, when the relationship began. DateTime? FollowedAt { get; set; } Property Value DateTime? User Gets or sets the following / followed Trakt user. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserFriend.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserFriend.html",
    "title": "Interface ITraktUserFriend | Trakt.NET",
    "keywords": "Interface ITraktUserFriend Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user friend. public interface ITraktUserFriend : ITraktUser Inherited Members ITraktUser.Username ITraktUser.IsPrivate ITraktUser.Ids ITraktUser.Name ITraktUser.IsVIP ITraktUser.IsVIP_EP ITraktUser.JoinedAt ITraktUser.Location ITraktUser.About ITraktUser.Gender ITraktUser.Age ITraktUser.Images ITraktUser.IsVIP_OG ITraktUser.VIP_Years ITraktUser.VIP_CoverImage Properties FriendsAt Gets or sets the UTC datetime, when the relationship began. DateTime? FriendsAt { get; set; } Property Value DateTime? User Gets or sets the Trakt user friend. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserHiddenItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserHiddenItem.html",
    "title": "Interface ITraktUserHiddenItem | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about a Trakt user's hidden item, including the corresponding movie, show or season. public interface ITraktUserHiddenItem Properties HiddenAt Gets or sets the UTC datetime, when the movie, show or season was hidden. DateTime? HiddenAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this hidden item contains. See also TraktHiddenItemType. Nullable TraktHiddenItemType Type { get; set; } Property Value TraktHiddenItemType User Gets or sets the user, if Type is User. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserIds.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserIds.html",
    "title": "Interface ITraktUserIds | Trakt.NET",
    "keywords": "Interface ITraktUserIds Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of ids for a Trakt user. public interface ITraktUserIds : IIds Inherited Members IIds.HasAnyId IIds.GetBestId() Properties Slug Gets or sets the Trakt slug. Nullable string Slug { get; set; } Property Value string UUID Gets or sets a globally unique UUID. Nullable string UUID { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserImages.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserImages.html",
    "title": "Interface ITraktUserImages | Trakt.NET",
    "keywords": "Interface ITraktUserImages Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of images and image sets for a Trakt user. public interface ITraktUserImages Properties Avatar Gets or sets the avatar image. See also ITraktImage. Nullable ITraktImage Avatar { get; set; } Property Value ITraktImage"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserLikeItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserLikeItem.html",
    "title": "Interface ITraktUserLikeItem | Trakt.NET",
    "keywords": "Interface ITraktUserLikeItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about an item a Trakt user has liked, including the corresponding comment or list. public interface ITraktUserLikeItem Properties Comment Gets or sets the comment, if Type is Comment. See also ITraktComment. Nullable ITraktComment Comment { get; set; } Property Value ITraktComment LikedAt Gets or sets the UTC datetime, when the comment or list was liked. DateTime? LikedAt { get; set; } Property Value DateTime? List Gets or sets the list, if Type is List. See also ITraktList. Nullable ITraktList List { get; set; } Property Value ITraktList Type Gets or sets the object type, which this liked item contains. See also TraktUserLikeType. Nullable TraktUserLikeType Type { get; set; } Property Value TraktUserLikeType"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserLimits.html",
    "title": "Interface ITraktUserLimits | Trakt.NET",
    "keywords": "Interface ITraktUserLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user limits. public interface ITraktUserLimits Properties Favorites Gets or sets the user's favorites limits. See also ITraktUserFavoritesLimits. Nullable ITraktUserFavoritesLimits Favorites { get; set; } Property Value ITraktUserFavoritesLimits List Gets or sets the user's list limits. See also ITraktUserListLimits. Nullable ITraktUserListLimits List { get; set; } Property Value ITraktUserListLimits Recommendations Gets or sets the user's recommendations limits. See also ITraktUserRecommendationsLimits. Nullable ITraktUserRecommendationsLimits Recommendations { get; set; } Property Value ITraktUserRecommendationsLimits Watchlist Gets or sets the user's watchlist limits. See also ITraktUserWatchlistLimits. Nullable ITraktUserWatchlistLimits Watchlist { get; set; } Property Value ITraktUserWatchlistLimits"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserListLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserListLimits.html",
    "title": "Interface ITraktUserListLimits | Trakt.NET",
    "keywords": "Interface ITraktUserListLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user list limits. public interface ITraktUserListLimits Properties Count Gets or sets the number maximum lists. int? Count { get; set; } Property Value int? ItemCount Gets or sets the number maximum list's item count. int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserRecommendationsLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserRecommendationsLimits.html",
    "title": "Interface ITraktUserRecommendationsLimits | Trakt.NET",
    "keywords": "Interface ITraktUserRecommendationsLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user recommendations limits. public interface ITraktUserRecommendationsLimits Properties ItemCount Gets or sets the number maximum recommendations item count. int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserSavedFilter.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserSavedFilter.html",
    "title": "Interface ITraktUserSavedFilter | Trakt.NET",
    "keywords": "Interface ITraktUserSavedFilter Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user saved filter. public interface ITraktUserSavedFilter Properties Id Gets or sets the id of the saved filter. int Id { get; set; } Property Value int Name Gets or sets the name of the saved filter. Nullable string Name { get; set; } Property Value string Path Gets or sets the path of the saved filter. Nullable string Path { get; set; } Property Value string Query Gets or sets the query of the saved filter. Nullable string Query { get; set; } Property Value string Rank Gets or sets the rank of the saved filter. int? Rank { get; set; } Property Value int? Section Gets or sets the filter section of the saved filter. See also TraktFilterSection. Nullable TraktFilterSection Section { get; set; } Property Value TraktFilterSection UpdatedAt Gets or sets the UTC datetime, when the saved filter was updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserSettings.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserSettings.html",
    "title": "Interface ITraktUserSettings | Trakt.NET",
    "keywords": "Interface ITraktUserSettings Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user settings. public interface ITraktUserSettings Properties Account Gets or sets the account settings. See also ITraktAccountSettings. Nullable ITraktAccountSettings Account { get; set; } Property Value ITraktAccountSettings Connections Gets or sets the social media connection settings. See also ITraktConnections. Nullable ITraktConnections Connections { get; set; } Property Value ITraktConnections Limits Gets or sets the user's limits. See also ITraktUserLimits. Nullable ITraktUserLimits Limits { get; set; } Property Value ITraktUserLimits SharingText Gets or sets the social media sharing text settings. See also ITraktSharingText. Nullable ITraktSharingText SharingText { get; set; } Property Value ITraktSharingText User Gets or sets the Trakt user for this settings. See also ITraktUser. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserWatchingItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserWatchingItem.html",
    "title": "Interface ITraktUserWatchingItem | Trakt.NET",
    "keywords": "Interface ITraktUserWatchingItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about a movie or an episode a Trakt user is currently watching. public interface ITraktUserWatchingItem Properties Action Gets or sets the action type for the movie or episode. See also TraktHistoryActionType. Nullable TraktHistoryActionType Action { get; set; } Property Value TraktHistoryActionType Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode ExpiresAt Gets or sets the UTC datetime, when the movie or episode expires. DateTime? ExpiresAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow StartedAt Gets or sets the UTC datetime, when the movie or episode started. DateTime? StartedAt { get; set; } Property Value DateTime? Type Gets or sets the object type, which this watching item contains. See also TraktSyncType. Nullable TraktSyncType Type { get; set; } Property Value TraktSyncType"
  },
  "api/TraktNet.Objects.Get.Users.ITraktUserWatchlistLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.ITraktUserWatchlistLimits.html",
    "title": "Interface ITraktUserWatchlistLimits | Trakt.NET",
    "keywords": "Interface ITraktUserWatchlistLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user watchlist limits. public interface ITraktUserWatchlistLimits Properties ItemCount Gets or sets the number maximum watchlist's item count. int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserEpisodesStatistics.html",
    "title": "Interface ITraktUserEpisodesStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserEpisodesStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for episodes. public interface ITraktUserEpisodesStatistics Properties Collected Gets or sets the number of how many episodes an user has collected. int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many episodes an user has commented. int? Comments { get; set; } Property Value int? Minutes Gets or sets the number of minutes that an user has watched episodes. int? Minutes { get; set; } Property Value int? Plays Gets or sets the number of how many times an user has played episodes. int? Plays { get; set; } Property Value int? Ratings Gets or sets the number of how many episodes an user has rated. int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many episodes an user has watched. int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserMoviesStatistics.html",
    "title": "Interface ITraktUserMoviesStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserMoviesStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for movies. public interface ITraktUserMoviesStatistics Properties Collected Gets or sets the number of how many movies an user has collected. int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many movies an user has commented. int? Comments { get; set; } Property Value int? Minutes Gets or sets the number of minutes that an user has watched movies. int? Minutes { get; set; } Property Value int? Plays Gets or sets the number of how many times an user has played movies. int? Plays { get; set; } Property Value int? Ratings Gets or sets the number of how many movies an user has rated. int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many movies an user has watched. int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserNetworkStatistics.html",
    "title": "Interface ITraktUserNetworkStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserNetworkStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics about an user's network. public interface ITraktUserNetworkStatistics Properties Followers Gets or sets the number of followers an user has. int? Followers { get; set; } Property Value int? Following Gets or sets the number of following users an user has. int? Following { get; set; } Property Value int? Friends Gets or sets the number of friends an user has. int? Friends { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserRatingsStatistics.html",
    "title": "Interface ITraktUserRatingsStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserRatingsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for ratings. public interface ITraktUserRatingsStatistics Properties Distribution Gets or sets the rating distribution of an user's ratings. Nullable IDictionary<string, int> Distribution { get; set; } Property Value IDictionary<string, int> Total Gets or sets the total number of items an user has rated. int? Total { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserSeasonsStatistics.html",
    "title": "Interface ITraktUserSeasonsStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserSeasonsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for seasons. public interface ITraktUserSeasonsStatistics Properties Comments Gets or sets the number of how many seasons an user has commented. int? Comments { get; set; } Property Value int? Ratings Gets or sets the number of how many seasons an user has rated. int? Ratings { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserShowsStatistics.html",
    "title": "Interface ITraktUserShowsStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserShowsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for shows. public interface ITraktUserShowsStatistics Properties Collected Gets or sets the number of how many shows an user has collected. int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many shows an user has commented. int? Comments { get; set; } Property Value int? Ratings Gets or sets the number of how many shows an user has rated. int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many shows an user has watched. int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.ITraktUserStatistics.html",
    "title": "Interface ITraktUserStatistics | Trakt.NET",
    "keywords": "Interface ITraktUserStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics. public interface ITraktUserStatistics Properties Episodes Gets or sets a collection of Trakt user statistics for episodes. See also ITraktUserEpisodesStatistics. Nullable ITraktUserEpisodesStatistics Episodes { get; set; } Property Value ITraktUserEpisodesStatistics Movies Gets or sets a collection of Trakt user statistics for movies. See also ITraktUserMoviesStatistics. Nullable ITraktUserMoviesStatistics Movies { get; set; } Property Value ITraktUserMoviesStatistics Network Gets or sets a collection of Trakt user statistics about an user's network. See also ITraktUserNetworkStatistics. Nullable ITraktUserNetworkStatistics Network { get; set; } Property Value ITraktUserNetworkStatistics Ratings Gets or sets a collection of Trakt user statistics for ratings. See also ITraktUserRatingsStatistics. Nullable ITraktUserRatingsStatistics Ratings { get; set; } Property Value ITraktUserRatingsStatistics Seasons Gets or sets a collection of Trakt user statistics for seasons. See also ITraktUserSeasonsStatistics. Nullable ITraktUserSeasonsStatistics Seasons { get; set; } Property Value ITraktUserSeasonsStatistics Shows Gets or sets a collection of Trakt user statistics for shows. See also ITraktUserShowsStatistics. Nullable ITraktUserShowsStatistics Shows { get; set; } Property Value ITraktUserShowsStatistics"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserEpisodesStatistics.html",
    "title": "Class TraktUserEpisodesStatistics | Trakt.NET",
    "keywords": "Class TraktUserEpisodesStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for episodes. public class TraktUserEpisodesStatistics : ITraktUserEpisodesStatistics Inheritance object TraktUserEpisodesStatistics Implements ITraktUserEpisodesStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Collected Gets or sets the number of how many episodes an user has collected. public int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many episodes an user has commented. public int? Comments { get; set; } Property Value int? Minutes Gets or sets the number of minutes that an user has watched episodes. public int? Minutes { get; set; } Property Value int? Plays Gets or sets the number of how many times an user has played episodes. public int? Plays { get; set; } Property Value int? Ratings Gets or sets the number of how many episodes an user has rated. public int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many episodes an user has watched. public int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserMoviesStatistics.html",
    "title": "Class TraktUserMoviesStatistics | Trakt.NET",
    "keywords": "Class TraktUserMoviesStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for movies. public class TraktUserMoviesStatistics : ITraktUserMoviesStatistics Inheritance object TraktUserMoviesStatistics Implements ITraktUserMoviesStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Collected Gets or sets the number of how many movies an user has collected. public int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many movies an user has commented. public int? Comments { get; set; } Property Value int? Minutes Gets or sets the number of minutes that an user has watched movies. public int? Minutes { get; set; } Property Value int? Plays Gets or sets the number of how many times an user has played movies. public int? Plays { get; set; } Property Value int? Ratings Gets or sets the number of how many movies an user has rated. public int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many movies an user has watched. public int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserNetworkStatistics.html",
    "title": "Class TraktUserNetworkStatistics | Trakt.NET",
    "keywords": "Class TraktUserNetworkStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics about an user's network. public class TraktUserNetworkStatistics : ITraktUserNetworkStatistics Inheritance object TraktUserNetworkStatistics Implements ITraktUserNetworkStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Followers Gets or sets the number of followers an user has. public int? Followers { get; set; } Property Value int? Following Gets or sets the number of following users an user has. public int? Following { get; set; } Property Value int? Friends Gets or sets the number of friends an user has. public int? Friends { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserRatingsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserRatingsStatistics.html",
    "title": "Class TraktUserRatingsStatistics | Trakt.NET",
    "keywords": "Class TraktUserRatingsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for ratings. public class TraktUserRatingsStatistics : ITraktUserRatingsStatistics Inheritance object TraktUserRatingsStatistics Implements ITraktUserRatingsStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Distribution Gets or sets the rating distribution of an user's ratings. Nullable public IDictionary<string, int> Distribution { get; set; } Property Value IDictionary<string, int> Total Gets or sets the total number of items an user has rated. public int? Total { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserSeasonsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserSeasonsStatistics.html",
    "title": "Class TraktUserSeasonsStatistics | Trakt.NET",
    "keywords": "Class TraktUserSeasonsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for seasons. public class TraktUserSeasonsStatistics : ITraktUserSeasonsStatistics Inheritance object TraktUserSeasonsStatistics Implements ITraktUserSeasonsStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comments Gets or sets the number of how many seasons an user has commented. public int? Comments { get; set; } Property Value int? Ratings Gets or sets the number of how many seasons an user has rated. public int? Ratings { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserShowsStatistics.html",
    "title": "Class TraktUserShowsStatistics | Trakt.NET",
    "keywords": "Class TraktUserShowsStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics for shows. public class TraktUserShowsStatistics : ITraktUserShowsStatistics Inheritance object TraktUserShowsStatistics Implements ITraktUserShowsStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Collected Gets or sets the number of how many shows an user has collected. public int? Collected { get; set; } Property Value int? Comments Gets or sets the number of how many shows an user has commented. public int? Comments { get; set; } Property Value int? Ratings Gets or sets the number of how many shows an user has rated. public int? Ratings { get; set; } Property Value int? Watched Gets or sets the number of how many shows an user has watched. public int? Watched { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.TraktUserStatistics.html",
    "title": "Class TraktUserStatistics | Trakt.NET",
    "keywords": "Class TraktUserStatistics Namespace TraktNet.Objects.Get.Users.Statistics Assembly Trakt.NET.dll A collection of Trakt user statistics. public class TraktUserStatistics : ITraktUserStatistics Inheritance object TraktUserStatistics Implements ITraktUserStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets a collection of Trakt user statistics for episodes. See also ITraktUserEpisodesStatistics. Nullable public ITraktUserEpisodesStatistics Episodes { get; set; } Property Value ITraktUserEpisodesStatistics Movies Gets or sets a collection of Trakt user statistics for movies. See also ITraktUserMoviesStatistics. Nullable public ITraktUserMoviesStatistics Movies { get; set; } Property Value ITraktUserMoviesStatistics Network Gets or sets a collection of Trakt user statistics about an user's network. See also ITraktUserNetworkStatistics. Nullable public ITraktUserNetworkStatistics Network { get; set; } Property Value ITraktUserNetworkStatistics Ratings Gets or sets a collection of Trakt user statistics for ratings. See also ITraktUserRatingsStatistics. Nullable public ITraktUserRatingsStatistics Ratings { get; set; } Property Value ITraktUserRatingsStatistics Seasons Gets or sets a collection of Trakt user statistics for seasons. See also ITraktUserSeasonsStatistics. Nullable public ITraktUserSeasonsStatistics Seasons { get; set; } Property Value ITraktUserSeasonsStatistics Shows Gets or sets a collection of Trakt user statistics for shows. See also ITraktUserShowsStatistics. Nullable public ITraktUserShowsStatistics Shows { get; set; } Property Value ITraktUserShowsStatistics"
  },
  "api/TraktNet.Objects.Get.Users.Statistics.html": {
    "href": "api/TraktNet.Objects.Get.Users.Statistics.html",
    "title": "Namespace TraktNet.Objects.Get.Users.Statistics | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Users.Statistics Classes TraktUserEpisodesStatistics A collection of Trakt user statistics for episodes. TraktUserMoviesStatistics A collection of Trakt user statistics for movies. TraktUserNetworkStatistics A collection of Trakt user statistics about an user's network. TraktUserRatingsStatistics A collection of Trakt user statistics for ratings. TraktUserSeasonsStatistics A collection of Trakt user statistics for seasons. TraktUserShowsStatistics A collection of Trakt user statistics for shows. TraktUserStatistics A collection of Trakt user statistics. Interfaces ITraktUserEpisodesStatistics A collection of Trakt user statistics for episodes. ITraktUserMoviesStatistics A collection of Trakt user statistics for movies. ITraktUserNetworkStatistics A collection of Trakt user statistics about an user's network. ITraktUserRatingsStatistics A collection of Trakt user statistics for ratings. ITraktUserSeasonsStatistics A collection of Trakt user statistics for seasons. ITraktUserShowsStatistics A collection of Trakt user statistics for shows. ITraktUserStatistics A collection of Trakt user statistics."
  },
  "api/TraktNet.Objects.Get.Users.TraktAccountSettings.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktAccountSettings.html",
    "title": "Class TraktAccountSettings | Trakt.NET",
    "keywords": "Class TraktAccountSettings Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user account settings. public class TraktAccountSettings : ITraktAccountSettings Inheritance object TraktAccountSettings Implements ITraktAccountSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CoverImage Gets or sets the user's cover image url. Nullable public string CoverImage { get; set; } Property Value string DateFormat Gets or sets the user's date format. Nullable public TraktDateFormat DateFormat { get; set; } Property Value TraktDateFormat Time24Hr Gets or sets, whether an user uses the 24h time format. public bool? Time24Hr { get; set; } Property Value bool? TimeZoneId Gets or sets the user's timezone. Nullable public string TimeZoneId { get; set; } Property Value string Token Gets or sets the user's token. Nullable public string Token { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Users.TraktFavorite.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktFavorite.html",
    "title": "Class TraktFavorite | Trakt.NET",
    "keywords": "Class TraktFavorite Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt favorite. public class TraktFavorite : ITraktFavorite Inheritance object TraktFavorite Implements ITraktFavorite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the id of this favorite item. public ulong? Id { get; set; } Property Value ulong? ListedAt Gets or sets the UTC datetime, when the favorite was listed. public DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktShow. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the favorite notes. public string Notes { get; set; } Property Value string Rank Gets or sets the favorite rank. public int? Rank { get; set; } Property Value int? Show Gets or sets the show, if Type is Show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the favorite item type. See also TraktFavoriteObjectType. Nullable public TraktFavoriteObjectType Type { get; set; } Property Value TraktFavoriteObjectType"
  },
  "api/TraktNet.Objects.Get.Users.TraktSharingText.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktSharingText.html",
    "title": "Class TraktSharingText | Trakt.NET",
    "keywords": "Class TraktSharingText Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user social media sharing text settings. public class TraktSharingText : ITraktSharingText Inheritance object TraktSharingText Implements ITraktSharingText Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Rated Gets or sets the user's sharing text for rated items. Nullable public string Rated { get; set; } Property Value string Watched Gets or sets the user's sharing text for watched items. Nullable public string Watched { get; set; } Property Value string Watching Gets or sets the user's sharing text for watching an item. Nullable public string Watching { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Get.Users.TraktUser.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUser.html",
    "title": "Class TraktUser | Trakt.NET",
    "keywords": "Class TraktUser Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user. public class TraktUser : ITraktUser Inheritance object TraktUser Implements ITraktUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties About Gets or sets the user's about information. Nullable public string About { get; set; } Property Value string Age Gets or sets the user's age. public int? Age { get; set; } Property Value int? Gender Gets or sets the user's gender. Nullable public string Gender { get; set; } Property Value string Ids Gets or sets the collection of ids for the user. See also ITraktUserIds. Nullable public ITraktUserIds Ids { get; set; } Property Value ITraktUserIds Images Gets or sets the collection of images for the user. See also ITraktUserImages. Nullable public ITraktUserImages Images { get; set; } Property Value ITraktUserImages IsPrivate Gets or sets the user's privacy status. public bool? IsPrivate { get; set; } Property Value bool? IsVIP Gets or sets the user's VIP status. public bool? IsVIP { get; set; } Property Value bool? IsVIP_EP Gets or sets the user's VIP EP status. public bool? IsVIP_EP { get; set; } Property Value bool? IsVIP_OG Gets or sets the user's VIP OG status. public bool? IsVIP_OG { get; set; } Property Value bool? JoinedAt Gets or sets the UTC datetime when the user joined Trakt. public DateTime? JoinedAt { get; set; } Property Value DateTime? Location Gets or sets the user's location. Nullable public string Location { get; set; } Property Value string Name Gets or sets the user's name. Nullable public string Name { get; set; } Property Value string Username Gets or sets the user's username. Nullable public string Username { get; set; } Property Value string VIP_CoverImage Gets or sets the user's VIP cover image. public string VIP_CoverImage { get; set; } Property Value string VIP_Years Gets or sets the user's VIP years. public int? VIP_Years { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserComment.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserComment.html",
    "title": "Class TraktUserComment | Trakt.NET",
    "keywords": "Class TraktUserComment Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user comment. public class TraktUserComment : ITraktUserComment Inheritance object TraktUserComment Implements ITraktUserComment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comment Gets or sets the comment's content. Nullable public ITraktComment Comment { get; set; } Property Value ITraktComment Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode List Gets or sets the list, if Type is Episode. See also ITraktList. Nullable public ITraktList List { get; set; } Property Value ITraktList Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Episode. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this comment contains. See also TraktObjectType. Nullable public TraktObjectType Type { get; set; } Property Value TraktObjectType"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserFavoritesLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserFavoritesLimits.html",
    "title": "Class TraktUserFavoritesLimits | Trakt.NET",
    "keywords": "Class TraktUserFavoritesLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user favorites limits. public class TraktUserFavoritesLimits : ITraktUserFavoritesLimits Inheritance object TraktUserFavoritesLimits Implements ITraktUserFavoritesLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemCount Gets or sets the number maximum favorites item count. public int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserFollowRequest.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserFollowRequest.html",
    "title": "Class TraktUserFollowRequest | Trakt.NET",
    "keywords": "Class TraktUserFollowRequest Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents a Trakt user follow request. public class TraktUserFollowRequest : ITraktUserFollowRequest Inheritance object TraktUserFollowRequest Implements ITraktUserFollowRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the id of the follow request. public uint Id { get; set; } Property Value uint RequestedAt Gets or sets the UTC datetime, when the request was made. public DateTime? RequestedAt { get; set; } Property Value DateTime? User Gets or sets the Trakt user, who is requesting. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserFollower.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserFollower.html",
    "title": "Class TraktUserFollower | Trakt.NET",
    "keywords": "Class TraktUserFollower Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user follower. public class TraktUserFollower : ITraktUserFollower, ITraktUser Inheritance object TraktUserFollower Implements ITraktUserFollower ITraktUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties About Gets or sets the user's about information. Nullable public string About { get; set; } Property Value string Age Gets or sets the user's age. public int? Age { get; set; } Property Value int? FollowedAt Gets or sets the UTC datetime, when the relationship began. public DateTime? FollowedAt { get; set; } Property Value DateTime? Gender Gets or sets the user's gender. Nullable public string Gender { get; set; } Property Value string Ids Gets or sets the collection of ids for the user. See also ITraktUserIds. Nullable public ITraktUserIds Ids { get; set; } Property Value ITraktUserIds Images Gets or sets the collection of images for the user. See also ITraktUserImages. Nullable public ITraktUserImages Images { get; set; } Property Value ITraktUserImages IsPrivate Gets or sets the user's privacy status. public bool? IsPrivate { get; set; } Property Value bool? IsVIP Gets or sets the user's VIP status. public bool? IsVIP { get; set; } Property Value bool? IsVIP_EP Gets or sets the user's VIP EP status. public bool? IsVIP_EP { get; set; } Property Value bool? IsVIP_OG Gets or sets the user's VIP OG status. public bool? IsVIP_OG { get; set; } Property Value bool? JoinedAt Gets or sets the UTC datetime when the user joined Trakt. public DateTime? JoinedAt { get; set; } Property Value DateTime? Location Gets or sets the user's location. Nullable public string Location { get; set; } Property Value string Name Gets or sets the user's name. Nullable public string Name { get; set; } Property Value string User Gets or sets the following / followed Trakt user. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser Username Gets or sets the user's username. Nullable public string Username { get; set; } Property Value string VIP_CoverImage Gets or sets the user's VIP cover image. public string VIP_CoverImage { get; set; } Property Value string VIP_Years Gets or sets the user's VIP years. public int? VIP_Years { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserFriend.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserFriend.html",
    "title": "Class TraktUserFriend | Trakt.NET",
    "keywords": "Class TraktUserFriend Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user friend. public class TraktUserFriend : ITraktUserFriend, ITraktUser Inheritance object TraktUserFriend Implements ITraktUserFriend ITraktUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties About Gets or sets the user's about information. Nullable public string About { get; set; } Property Value string Age Gets or sets the user's age. public int? Age { get; set; } Property Value int? FriendsAt Gets or sets the UTC datetime, when the relationship began. public DateTime? FriendsAt { get; set; } Property Value DateTime? Gender Gets or sets the user's gender. Nullable public string Gender { get; set; } Property Value string Ids Gets or sets the collection of ids for the user. See also ITraktUserIds. Nullable public ITraktUserIds Ids { get; set; } Property Value ITraktUserIds Images Gets or sets the collection of images for the user. See also ITraktUserImages. Nullable public ITraktUserImages Images { get; set; } Property Value ITraktUserImages IsPrivate Gets or sets the user's privacy status. public bool? IsPrivate { get; set; } Property Value bool? IsVIP Gets or sets the user's VIP status. public bool? IsVIP { get; set; } Property Value bool? IsVIP_EP Gets or sets the user's VIP EP status. public bool? IsVIP_EP { get; set; } Property Value bool? IsVIP_OG Gets or sets the user's VIP OG status. public bool? IsVIP_OG { get; set; } Property Value bool? JoinedAt Gets or sets the UTC datetime when the user joined Trakt. public DateTime? JoinedAt { get; set; } Property Value DateTime? Location Gets or sets the user's location. Nullable public string Location { get; set; } Property Value string Name Gets or sets the user's name. Nullable public string Name { get; set; } Property Value string User Gets or sets the Trakt user friend. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser Username Gets or sets the user's username. Nullable public string Username { get; set; } Property Value string VIP_CoverImage Gets or sets the user's VIP cover image. public string VIP_CoverImage { get; set; } Property Value string VIP_Years Gets or sets the user's VIP years. public int? VIP_Years { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserHiddenItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserHiddenItem.html",
    "title": "Class TraktUserHiddenItem | Trakt.NET",
    "keywords": "Class TraktUserHiddenItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about a Trakt user's hidden item, including the corresponding movie, show or season. public class TraktUserHiddenItem : ITraktUserHiddenItem Inheritance object TraktUserHiddenItem Implements ITraktUserHiddenItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HiddenAt Gets or sets the UTC datetime, when the movie, show or season was hidden. public DateTime? HiddenAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this hidden item contains. See also TraktHiddenItemType. Nullable public TraktHiddenItemType Type { get; set; } Property Value TraktHiddenItemType User Gets or sets the user, if Type is User. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserIds.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserIds.html",
    "title": "Class TraktUserIds | Trakt.NET",
    "keywords": "Class TraktUserIds Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of ids for a Trakt user. public class TraktUserIds : ITraktUserIds, IIds Inheritance object TraktUserIds Implements ITraktUserIds IIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasAnyId Returns, whether any id has been set. public bool HasAnyId { get; } Property Value bool Slug Gets or sets the Trakt slug. Nullable public string Slug { get; set; } Property Value string UUID Gets or sets a globally unique UUID. Nullable public string UUID { get; set; } Property Value string Methods GetBestId() Gets the most reliable id from those that have been set. public string GetBestId() Returns string The id as a string or an empty string, if no id is set."
  },
  "api/TraktNet.Objects.Get.Users.TraktUserImages.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserImages.html",
    "title": "Class TraktUserImages | Trakt.NET",
    "keywords": "Class TraktUserImages Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of images and image sets for a Trakt user. public class TraktUserImages : ITraktUserImages Inheritance object TraktUserImages Implements ITraktUserImages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Avatar Gets or sets the avatar image. See also ITraktImage. Nullable public ITraktImage Avatar { get; set; } Property Value ITraktImage"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserLikeItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserLikeItem.html",
    "title": "Class TraktUserLikeItem | Trakt.NET",
    "keywords": "Class TraktUserLikeItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about an item a Trakt user has liked, including the corresponding comment or list. public class TraktUserLikeItem : ITraktUserLikeItem Inheritance object TraktUserLikeItem Implements ITraktUserLikeItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comment Gets or sets the comment, if Type is Comment. See also ITraktComment. Nullable public ITraktComment Comment { get; set; } Property Value ITraktComment LikedAt Gets or sets the UTC datetime, when the comment or list was liked. public DateTime? LikedAt { get; set; } Property Value DateTime? List Gets or sets the list, if Type is List. See also ITraktList. Nullable public ITraktList List { get; set; } Property Value ITraktList Type Gets or sets the object type, which this liked item contains. See also TraktUserLikeType. Nullable public TraktUserLikeType Type { get; set; } Property Value TraktUserLikeType"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserLimits.html",
    "title": "Class TraktUserLimits | Trakt.NET",
    "keywords": "Class TraktUserLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user limits. public class TraktUserLimits : ITraktUserLimits Inheritance object TraktUserLimits Implements ITraktUserLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Favorites Gets or sets the user's favorites limits. See also ITraktUserFavoritesLimits. Nullable public ITraktUserFavoritesLimits Favorites { get; set; } Property Value ITraktUserFavoritesLimits List Gets or sets the user's list limits. See also ITraktUserListLimits. Nullable public ITraktUserListLimits List { get; set; } Property Value ITraktUserListLimits Recommendations Gets or sets the user's recommendations limits. See also ITraktUserRecommendationsLimits. Nullable public ITraktUserRecommendationsLimits Recommendations { get; set; } Property Value ITraktUserRecommendationsLimits Watchlist Gets or sets the user's watchlist limits. See also ITraktUserWatchlistLimits. Nullable public ITraktUserWatchlistLimits Watchlist { get; set; } Property Value ITraktUserWatchlistLimits"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserListLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserListLimits.html",
    "title": "Class TraktUserListLimits | Trakt.NET",
    "keywords": "Class TraktUserListLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user list limits. public class TraktUserListLimits : ITraktUserListLimits Inheritance object TraktUserListLimits Implements ITraktUserListLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets or sets the number maximum lists. public int? Count { get; set; } Property Value int? ItemCount Gets or sets the number maximum list's item count. public int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserRecommendationsLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserRecommendationsLimits.html",
    "title": "Class TraktUserRecommendationsLimits | Trakt.NET",
    "keywords": "Class TraktUserRecommendationsLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user recommendations limits. public class TraktUserRecommendationsLimits : ITraktUserRecommendationsLimits Inheritance object TraktUserRecommendationsLimits Implements ITraktUserRecommendationsLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemCount Gets or sets the number maximum recommendations item count. public int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserSavedFilter.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserSavedFilter.html",
    "title": "Class TraktUserSavedFilter | Trakt.NET",
    "keywords": "Class TraktUserSavedFilter Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A Trakt user saved filter. public class TraktUserSavedFilter : ITraktUserSavedFilter Inheritance object TraktUserSavedFilter Implements ITraktUserSavedFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the id of the saved filter. public int Id { get; set; } Property Value int Name Gets or sets the name of the saved filter. Nullable public string Name { get; set; } Property Value string Path Gets or sets the path of the saved filter. Nullable public string Path { get; set; } Property Value string Query Gets or sets the query of the saved filter. Nullable public string Query { get; set; } Property Value string Rank Gets or sets the rank of the saved filter. public int? Rank { get; set; } Property Value int? Section Gets or sets the filter section of the saved filter. See also TraktFilterSection. Nullable public TraktFilterSection Section { get; set; } Property Value TraktFilterSection UpdatedAt Gets or sets the UTC datetime, when the saved filter was updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserSettings.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserSettings.html",
    "title": "Class TraktUserSettings | Trakt.NET",
    "keywords": "Class TraktUserSettings Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Represents Trakt user settings. public class TraktUserSettings : ITraktUserSettings Inheritance object TraktUserSettings Implements ITraktUserSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Account Gets or sets the account settings. See also ITraktAccountSettings. Nullable public ITraktAccountSettings Account { get; set; } Property Value ITraktAccountSettings Connections Gets or sets the social media connection settings. See also ITraktConnections. Nullable public ITraktConnections Connections { get; set; } Property Value ITraktConnections Limits Gets or sets the user's limits. See also ITraktUserLimits. Nullable public ITraktUserLimits Limits { get; set; } Property Value ITraktUserLimits SharingText Gets or sets the social media sharing text settings. See also ITraktSharingText. Nullable public ITraktSharingText SharingText { get; set; } Property Value ITraktSharingText User Gets or sets the Trakt user for this settings. See also ITraktUser. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserWatchingItem.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserWatchingItem.html",
    "title": "Class TraktUserWatchingItem | Trakt.NET",
    "keywords": "Class TraktUserWatchingItem Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll Contains information about a movie or an episode a Trakt user is currently watching. public class TraktUserWatchingItem : ITraktUserWatchingItem Inheritance object TraktUserWatchingItem Implements ITraktUserWatchingItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Action Gets or sets the action type for the movie or episode. See also TraktHistoryActionType. Nullable public TraktHistoryActionType Action { get; set; } Property Value TraktHistoryActionType Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode ExpiresAt Gets or sets the UTC datetime, when the movie or episode expires. public DateTime? ExpiresAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Show Gets or sets the show, if Type is Episode. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow StartedAt Gets or sets the UTC datetime, when the movie or episode started. public DateTime? StartedAt { get; set; } Property Value DateTime? Type Gets or sets the object type, which this watching item contains. See also TraktSyncType. Nullable public TraktSyncType Type { get; set; } Property Value TraktSyncType"
  },
  "api/TraktNet.Objects.Get.Users.TraktUserWatchlistLimits.html": {
    "href": "api/TraktNet.Objects.Get.Users.TraktUserWatchlistLimits.html",
    "title": "Class TraktUserWatchlistLimits | Trakt.NET",
    "keywords": "Class TraktUserWatchlistLimits Namespace TraktNet.Objects.Get.Users Assembly Trakt.NET.dll A collection of Trakt user watchlist limits. public class TraktUserWatchlistLimits : ITraktUserWatchlistLimits Inheritance object TraktUserWatchlistLimits Implements ITraktUserWatchlistLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemCount Gets or sets the number maximum watchlist's item count. public int? ItemCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Users.html": {
    "href": "api/TraktNet.Objects.Get.Users.html",
    "title": "Namespace TraktNet.Objects.Get.Users | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Users Classes TraktAccountSettings Represents Trakt user account settings. TraktFavorite A Trakt favorite. TraktSharingText Represents Trakt user social media sharing text settings. TraktUser A Trakt user. TraktUserComment A Trakt user comment. TraktUserFavoritesLimits A collection of Trakt user favorites limits. TraktUserFollowRequest Represents a Trakt user follow request. TraktUserFollower A Trakt user follower. TraktUserFriend A Trakt user friend. TraktUserHiddenItem Contains information about a Trakt user's hidden item, including the corresponding movie, show or season. TraktUserIds A collection of ids for a Trakt user. TraktUserImages A collection of images and image sets for a Trakt user. TraktUserLikeItem Contains information about an item a Trakt user has liked, including the corresponding comment or list. TraktUserLimits A collection of Trakt user limits. TraktUserListLimits A collection of Trakt user list limits. TraktUserRecommendationsLimits A collection of Trakt user recommendations limits. TraktUserSavedFilter A Trakt user saved filter. TraktUserSettings Represents Trakt user settings. TraktUserWatchingItem Contains information about a movie or an episode a Trakt user is currently watching. TraktUserWatchlistLimits A collection of Trakt user watchlist limits. Interfaces ITraktAccountSettings Represents Trakt user account settings. ITraktFavorite A Trakt favorite. ITraktSharingText Represents Trakt user social media sharing text settings. ITraktUser A Trakt user. ITraktUserComment A Trakt user comment. ITraktUserFavoritesLimits A collection of Trakt user favorites limits. ITraktUserFollowRequest Represents a Trakt user follow request. ITraktUserFollower A Trakt user follower. ITraktUserFriend A Trakt user friend. ITraktUserHiddenItem Contains information about a Trakt user's hidden item, including the corresponding movie, show or season. ITraktUserIds A collection of ids for a Trakt user. ITraktUserImages A collection of images and image sets for a Trakt user. ITraktUserLikeItem Contains information about an item a Trakt user has liked, including the corresponding comment or list. ITraktUserLimits A collection of Trakt user limits. ITraktUserListLimits A collection of Trakt user list limits. ITraktUserRecommendationsLimits A collection of Trakt user recommendations limits. ITraktUserSavedFilter A Trakt user saved filter. ITraktUserSettings Represents Trakt user settings. ITraktUserWatchingItem Contains information about a movie or an episode a Trakt user is currently watching. ITraktUserWatchlistLimits A collection of Trakt user watchlist limits."
  },
  "api/TraktNet.Objects.Get.Watched.ITraktWatchedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Watched.ITraktWatchedMovie.html",
    "title": "Interface ITraktWatchedMovie | Trakt.NET",
    "keywords": "Interface ITraktWatchedMovie Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt movie. public interface ITraktWatchedMovie : ITraktMovie Inherited Members ITraktMovie.Title ITraktMovie.Year ITraktMovie.Ids ITraktMovie.Tagline ITraktMovie.Overview ITraktMovie.Released ITraktMovie.Runtime ITraktMovie.Trailer ITraktMovie.Homepage ITraktMovie.Rating ITraktMovie.Votes ITraktMovie.UpdatedAt ITraktMovie.LanguageCode ITraktMovie.AvailableTranslationLanguageCodes ITraktMovie.Genres ITraktMovie.Certification ITraktMovie.CountryCode ITraktMovie.CommentCount ITraktMovie.Status Properties LastUpdatedAt Gets or sets the UTC datetime, when the movie was last updated. DateTime? LastUpdatedAt { get; set; } Property Value DateTime? LastWatchedAt Gets or sets the UTC datetime, when the movie was last watched. DateTime? LastWatchedAt { get; set; } Property Value DateTime? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Plays Gets or sets the number of plays for the watched movie. int? Plays { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.ITraktWatchedShow.html": {
    "href": "api/TraktNet.Objects.Get.Watched.ITraktWatchedShow.html",
    "title": "Interface ITraktWatchedShow | Trakt.NET",
    "keywords": "Interface ITraktWatchedShow Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt show. public interface ITraktWatchedShow : ITraktShow Inherited Members ITraktShow.Title ITraktShow.Year ITraktShow.Ids ITraktShow.Overview ITraktShow.Tagline ITraktShow.FirstAired ITraktShow.Airs ITraktShow.Runtime ITraktShow.Certification ITraktShow.Network ITraktShow.CountryCode ITraktShow.Trailer ITraktShow.Homepage ITraktShow.Status ITraktShow.Rating ITraktShow.Votes ITraktShow.UpdatedAt ITraktShow.LanguageCode ITraktShow.AvailableTranslationLanguageCodes ITraktShow.Genres ITraktShow.AiredEpisodes ITraktShow.Seasons ITraktShow.CommentCount Properties LastUpdatedAt Gets or sets the UTC datetime, when the show was last updated. DateTime? LastUpdatedAt { get; set; } Property Value DateTime? LastWatchedAt Gets or sets the UTC datetime, when the show was last watched. DateTime? LastWatchedAt { get; set; } Property Value DateTime? Plays Gets or sets the number of plays for the watched show. int? Plays { get; set; } Property Value int? ResetAt Gets or sets the UTC datetime, when the show was resetted. DateTime? ResetAt { get; set; } Property Value DateTime? Show Gets or sets the Trakt show. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow WatchedSeasons Gets or sets a list of watched seasons in the watched show. See also ITraktWatchedShowSeason. Nullable IList<ITraktWatchedShowSeason> WatchedSeasons { get; set; } Property Value IList<ITraktWatchedShowSeason>"
  },
  "api/TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Watched.ITraktWatchedShowEpisode.html",
    "title": "Interface ITraktWatchedShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktWatchedShowEpisode Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt episode. public interface ITraktWatchedShowEpisode Properties LastWatchedAt Gets or sets the UTC datetime, when the episode was last watched. DateTime? LastWatchedAt { get; set; } Property Value DateTime? Number Gets or sets the number of the watched episode. int? Number { get; set; } Property Value int? Plays Gets or sets the number of plays for the watched episode. int? Plays { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason.html": {
    "href": "api/TraktNet.Objects.Get.Watched.ITraktWatchedShowSeason.html",
    "title": "Interface ITraktWatchedShowSeason | Trakt.NET",
    "keywords": "Interface ITraktWatchedShowSeason Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt season. public interface ITraktWatchedShowSeason Properties Episodes Gets or sets a list of watched episodes in the watched season. See also ITraktWatchedShowEpisode. Nullable IList<ITraktWatchedShowEpisode> Episodes { get; set; } Property Value IList<ITraktWatchedShowEpisode> Number Gets or sets the number of the watched season. int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.TraktWatchedMovie.html": {
    "href": "api/TraktNet.Objects.Get.Watched.TraktWatchedMovie.html",
    "title": "Class TraktWatchedMovie | Trakt.NET",
    "keywords": "Class TraktWatchedMovie Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt movie. public class TraktWatchedMovie : ITraktWatchedMovie, ITraktMovie Inheritance object TraktWatchedMovie Implements ITraktWatchedMovie ITraktMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the movie. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the movie. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the movie. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the content country code of the movie. Nullable public string CountryCode { get; set; } Property Value string Genres Gets or sets the collection of Trakt genre slugs for the movie. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the movie. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the movie for various web services. See also ITraktMovieIds. Nullable public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds LanguageCode Gets or sets the two letter language code of the movie. Nullable public string LanguageCode { get; set; } Property Value string LastUpdatedAt Gets or sets the UTC datetime, when the movie was last updated. public DateTime? LastUpdatedAt { get; set; } Property Value DateTime? LastWatchedAt Gets or sets the UTC datetime, when the movie was last watched. public DateTime? LastWatchedAt { get; set; } Property Value DateTime? Movie Gets or sets the Trakt movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Overview Gets or sets the synopsis of the movie. Nullable public string Overview { get; set; } Property Value string Plays Gets or sets the number of plays for the watched movie. public int? Plays { get; set; } Property Value int? Rating Gets or sets the average user rating of the movie. public float? Rating { get; set; } Property Value float? Released Gets or sets the UTC datetime when the movie was released. public DateTime? Released { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the movie. public int? Runtime { get; set; } Property Value int? Status Gets or sets the movie's current status. See also TraktMovieStatus. Nullable public TraktMovieStatus Status { get; set; } Property Value TraktMovieStatus Tagline Gets or sets the movie tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the movie title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the movie. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the movie was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the movie. public int? Votes { get; set; } Property Value int? Year Gets or sets the movie release year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.TraktWatchedShow.html": {
    "href": "api/TraktNet.Objects.Get.Watched.TraktWatchedShow.html",
    "title": "Class TraktWatchedShow | Trakt.NET",
    "keywords": "Class TraktWatchedShow Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt show. public class TraktWatchedShow : ITraktWatchedShow, ITraktShow Inheritance object TraktWatchedShow Implements ITraktWatchedShow ITraktShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AiredEpisodes Gets or sets the absolute number of already aired episodes in all seasons of the show. public int? AiredEpisodes { get; set; } Property Value int? Airs Gets or sets the air time of the show. See also ITraktShowAirs. Nullable public ITraktShowAirs Airs { get; set; } Property Value ITraktShowAirs AvailableTranslationLanguageCodes Gets or sets the list of translation language codes (two letters) for the show. Nullable public IList<string> AvailableTranslationLanguageCodes { get; set; } Property Value IList<string> Certification Gets or sets the content certification of the show. Nullable public string Certification { get; set; } Property Value string CommentCount Gets or sets the comment count of the show. Nullable public int? CommentCount { get; set; } Property Value int? CountryCode Gets or sets the two letter language code for the country in which the show is produced. Nullable public string CountryCode { get; set; } Property Value string FirstAired Gets or sets the UTC datetime when the first episode of the first season of the show was aired. public DateTime? FirstAired { get; set; } Property Value DateTime? Genres Gets or sets the collection of Trakt genre slugs for the show. Nullable public IList<string> Genres { get; set; } Property Value IList<string> Homepage Gets or sets the web address of the homepage of the show. Nullable public string Homepage { get; set; } Property Value string Ids Gets or sets the collection of ids for the show for various web services. See also ITraktShowIds. Nullable public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds LanguageCode Gets or sets the two letter language code of the show. Nullable public string LanguageCode { get; set; } Property Value string LastUpdatedAt Gets or sets the UTC datetime, when the show was last updated. public DateTime? LastUpdatedAt { get; set; } Property Value DateTime? LastWatchedAt Gets or sets the UTC datetime, when the show was last watched. public DateTime? LastWatchedAt { get; set; } Property Value DateTime? Network Gets or sets the producing network name of the show. Nullable public string Network { get; set; } Property Value string Overview Gets or sets the synopsis of the show. Nullable public string Overview { get; set; } Property Value string Plays Gets or sets the number of plays for the watched show. public int? Plays { get; set; } Property Value int? Rating Gets or sets the average user rating of the show. public float? Rating { get; set; } Property Value float? ResetAt Gets or sets the UTC datetime, when the show was resetted. public DateTime? ResetAt { get; set; } Property Value DateTime? Runtime Gets or sets the runtime for the show's episodes, in minutes. public int? Runtime { get; set; } Property Value int? Seasons Gets or sets the collection of Trakt seasons for the show. See also ITraktSeason. Nullable public IList<ITraktSeason> Seasons { get; set; } Property Value IList<ITraktSeason> Show Gets or sets the Trakt show. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Status Gets or sets the show's current status. See also TraktShowStatus. Nullable public TraktShowStatus Status { get; set; } Property Value TraktShowStatus Tagline Gets or sets the show tagline. Nullable public string Tagline { get; set; } Property Value string Title Gets or sets the show title. Nullable public string Title { get; set; } Property Value string Trailer Gets or sets the web address of a trailer for the show. Nullable public string Trailer { get; set; } Property Value string UpdatedAt Gets or sets the UTC datetime when the show was last updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Votes Gets or sets the number of votes for the show. public int? Votes { get; set; } Property Value int? WatchedSeasons Gets or sets a list of watched seasons in the watched show. See also ITraktWatchedShowSeason. Nullable public IList<ITraktWatchedShowSeason> WatchedSeasons { get; set; } Property Value IList<ITraktWatchedShowSeason> Year Gets or sets the show release year (first episode of the first season). public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode.html": {
    "href": "api/TraktNet.Objects.Get.Watched.TraktWatchedShowEpisode.html",
    "title": "Class TraktWatchedShowEpisode | Trakt.NET",
    "keywords": "Class TraktWatchedShowEpisode Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt episode. public class TraktWatchedShowEpisode : ITraktWatchedShowEpisode Inheritance object TraktWatchedShowEpisode Implements ITraktWatchedShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LastWatchedAt Gets or sets the UTC datetime, when the episode was last watched. public DateTime? LastWatchedAt { get; set; } Property Value DateTime? Number Gets or sets the number of the watched episode. public int? Number { get; set; } Property Value int? Plays Gets or sets the number of plays for the watched episode. public int? Plays { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.TraktWatchedShowSeason.html": {
    "href": "api/TraktNet.Objects.Get.Watched.TraktWatchedShowSeason.html",
    "title": "Class TraktWatchedShowSeason | Trakt.NET",
    "keywords": "Class TraktWatchedShowSeason Namespace TraktNet.Objects.Get.Watched Assembly Trakt.NET.dll Contains information about a watched Trakt season. public class TraktWatchedShowSeason : ITraktWatchedShowSeason Inheritance object TraktWatchedShowSeason Implements ITraktWatchedShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets a list of watched episodes in the watched season. See also ITraktWatchedShowEpisode. Nullable public IList<ITraktWatchedShowEpisode> Episodes { get; set; } Property Value IList<ITraktWatchedShowEpisode> Number Gets or sets the number of the watched season. public int? Number { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Get.Watched.html": {
    "href": "api/TraktNet.Objects.Get.Watched.html",
    "title": "Namespace TraktNet.Objects.Get.Watched | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Watched Classes TraktWatchedMovie Contains information about a watched Trakt movie. TraktWatchedShow Contains information about a watched Trakt show. TraktWatchedShowEpisode Contains information about a watched Trakt episode. TraktWatchedShowSeason Contains information about a watched Trakt season. Interfaces ITraktWatchedMovie Contains information about a watched Trakt movie. ITraktWatchedShow Contains information about a watched Trakt show. ITraktWatchedShowEpisode Contains information about a watched Trakt episode. ITraktWatchedShowSeason Contains information about a watched Trakt season."
  },
  "api/TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.html": {
    "href": "api/TraktNet.Objects.Get.Watchlist.ITraktWatchlistItem.html",
    "title": "Interface ITraktWatchlistItem | Trakt.NET",
    "keywords": "Interface ITraktWatchlistItem Namespace TraktNet.Objects.Get.Watchlist Assembly Trakt.NET.dll A Trakt watchlist item, containing a movie, show, season and / or episode and information about it. public interface ITraktWatchlistItem Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of the watchlist item. Nullable uint? Id { get; set; } Property Value uint? ListedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was listed. DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the watchlist item notes. string Notes { get; set; } Property Value string Rank Gets or sets the ranking number of the watchlist item. Nullable int? Rank { get; set; } Property Value int? Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this watchlist item contains. See also TraktSyncItemType. Nullable TraktSyncItemType Type { get; set; } Property Value TraktSyncItemType"
  },
  "api/TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.html": {
    "href": "api/TraktNet.Objects.Get.Watchlist.TraktWatchlistItem.html",
    "title": "Class TraktWatchlistItem | Trakt.NET",
    "keywords": "Class TraktWatchlistItem Namespace TraktNet.Objects.Get.Watchlist Assembly Trakt.NET.dll A Trakt watchlist item, containing a movie, show, season and / or episode and information about it. public class TraktWatchlistItem : ITraktWatchlistItem Inheritance object TraktWatchlistItem Implements ITraktWatchlistItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the episode, if Type is Episode. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Id Gets or sets the id of the watchlist item. Nullable public uint? Id { get; set; } Property Value uint? ListedAt Gets or sets the UTC datetime, when the movie, show, season and / or episode was listed. public DateTime? ListedAt { get; set; } Property Value DateTime? Movie Gets or sets the movie, if Type is Movie. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the watchlist item notes. public string Notes { get; set; } Property Value string Rank Gets or sets the ranking number of the watchlist item. Nullable public int? Rank { get; set; } Property Value int? Season Gets or sets the season, if Type is Season. See also ITraktSeason. Nullable public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the show, if Type is Show. May also be set, if Type is Episode or Season. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Type Gets or sets the object type, which this watchlist item contains. See also TraktSyncItemType. Nullable public TraktSyncItemType Type { get; set; } Property Value TraktSyncItemType"
  },
  "api/TraktNet.Objects.Get.Watchlist.html": {
    "href": "api/TraktNet.Objects.Get.Watchlist.html",
    "title": "Namespace TraktNet.Objects.Get.Watchlist | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Get.Watchlist Classes TraktWatchlistItem A Trakt watchlist item, containing a movie, show, season and / or episode and information about it. Interfaces ITraktWatchlistItem A Trakt watchlist item, containing a movie, show, season and / or episode and information about it."
  },
  "api/TraktNet.Objects.Post.Basic.ITraktListItemUpdatePost.html": {
    "href": "api/TraktNet.Objects.Post.Basic.ITraktListItemUpdatePost.html",
    "title": "Interface ITraktListItemUpdatePost | Trakt.NET",
    "keywords": "Interface ITraktListItemUpdatePost Namespace TraktNet.Objects.Post.Basic Assembly Trakt.NET.dll public interface ITraktListItemUpdatePost Properties Notes string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Basic.ITraktListItemsReorderPost.html": {
    "href": "api/TraktNet.Objects.Post.Basic.ITraktListItemsReorderPost.html",
    "title": "Interface ITraktListItemsReorderPost | Trakt.NET",
    "keywords": "Interface ITraktListItemsReorderPost Namespace TraktNet.Objects.Post.Basic Assembly Trakt.NET.dll public interface ITraktListItemsReorderPost Properties Rank IList<uint> Rank { get; set; } Property Value IList<uint>"
  },
  "api/TraktNet.Objects.Post.Basic.Responses.ITraktListItemsReorderPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Basic.Responses.ITraktListItemsReorderPostResponse.html",
    "title": "Interface ITraktListItemsReorderPostResponse | Trakt.NET",
    "keywords": "Interface ITraktListItemsReorderPostResponse Namespace TraktNet.Objects.Post.Basic.Responses Assembly Trakt.NET.dll public interface ITraktListItemsReorderPostResponse Properties List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData SkippedIds A list of of updated list item ids. Nullable IEnumerable<uint> SkippedIds { get; set; } Property Value IEnumerable<uint> Updated The number of updated list items. Nullable int? Updated { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Basic.Responses.TraktListItemsReorderPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Basic.Responses.TraktListItemsReorderPostResponse.html",
    "title": "Class TraktListItemsReorderPostResponse | Trakt.NET",
    "keywords": "Class TraktListItemsReorderPostResponse Namespace TraktNet.Objects.Post.Basic.Responses Assembly Trakt.NET.dll public class TraktListItemsReorderPostResponse : ITraktListItemsReorderPostResponse Inheritance object TraktListItemsReorderPostResponse Implements ITraktListItemsReorderPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData SkippedIds A list of of updated list item ids. Nullable public IEnumerable<uint> SkippedIds { get; set; } Property Value IEnumerable<uint> Updated The number of updated list items. Nullable public int? Updated { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Basic.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Basic.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Basic.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Basic.Responses Classes TraktListItemsReorderPostResponse Interfaces ITraktListItemsReorderPostResponse"
  },
  "api/TraktNet.Objects.Post.Basic.TraktListItemUpdatePost.html": {
    "href": "api/TraktNet.Objects.Post.Basic.TraktListItemUpdatePost.html",
    "title": "Class TraktListItemUpdatePost | Trakt.NET",
    "keywords": "Class TraktListItemUpdatePost Namespace TraktNet.Objects.Post.Basic Assembly Trakt.NET.dll public class TraktListItemUpdatePost : ITraktListItemUpdatePost Inheritance object TraktListItemUpdatePost Implements ITraktListItemUpdatePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Notes public string Notes { get; set; } Property Value string Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Basic.TraktListItemsReorderPost.html": {
    "href": "api/TraktNet.Objects.Post.Basic.TraktListItemsReorderPost.html",
    "title": "Class TraktListItemsReorderPost | Trakt.NET",
    "keywords": "Class TraktListItemsReorderPost Namespace TraktNet.Objects.Post.Basic Assembly Trakt.NET.dll public class TraktListItemsReorderPost : ITraktListItemsReorderPost Inheritance object TraktListItemsReorderPost Implements ITraktListItemsReorderPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Rank public IList<uint> Rank { get; set; } Property Value IList<uint> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Basic.html": {
    "href": "api/TraktNet.Objects.Post.Basic.html",
    "title": "Namespace TraktNet.Objects.Post.Basic | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Basic Classes TraktListItemUpdatePost TraktListItemsReorderPost Interfaces ITraktListItemUpdatePost ITraktListItemsReorderPost"
  },
  "api/TraktNet.Objects.Post.Checkins.ITraktCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.ITraktCheckinPost.html",
    "title": "Interface ITraktCheckinPost | Trakt.NET",
    "keywords": "Interface ITraktCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll public interface ITraktCheckinPost Properties AppDate Gets or sets the app build date for the checkin post. Nullable string AppDate { get; set; } Property Value string AppVersion Gets or sets the app version for the checkin post. Nullable string AppVersion { get; set; } Property Value string FoursquareVenueId Gets or sets the Foursquare Venue Id for the checkin post. Nullable string FoursquareVenueId { get; set; } Property Value string FoursquareVenueName Gets or sets the Foursquare Venue Name for the checkin post. Nullable string FoursquareVenueName { get; set; } Property Value string Message Gets or sets the message for the checkin post. Nullable string Message { get; set; } Property Value string Sharing Gets or sets the sharing options for the checkin post. See also ITraktConnections. Nullable ITraktConnections Sharing { get; set; } Property Value ITraktConnections"
  },
  "api/TraktNet.Objects.Post.Checkins.ITraktEpisodeCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.ITraktEpisodeCheckinPost.html",
    "title": "Interface ITraktEpisodeCheckinPost | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll A checkin post for a Trakt episode. public interface ITraktEpisodeCheckinPost : ITraktCheckinPost Inherited Members ITraktCheckinPost.Sharing ITraktCheckinPost.Message ITraktCheckinPost.AppVersion ITraktCheckinPost.AppDate ITraktCheckinPost.FoursquareVenueId ITraktCheckinPost.FoursquareVenueName Properties Episode Gets or sets the required Trakt episode for the checkin post. See also ITraktEpisode. ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the checkin post. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Checkins.ITraktMovieCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.ITraktMovieCheckinPost.html",
    "title": "Interface ITraktMovieCheckinPost | Trakt.NET",
    "keywords": "Interface ITraktMovieCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll A checkin post for a Trakt movie. public interface ITraktMovieCheckinPost : ITraktCheckinPost Inherited Members ITraktCheckinPost.Sharing ITraktCheckinPost.Message ITraktCheckinPost.AppVersion ITraktCheckinPost.AppDate ITraktCheckinPost.FoursquareVenueId ITraktCheckinPost.FoursquareVenueName Properties Movie Gets or sets the required Trakt movie for the checkin post. See also ITraktMovie. ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostErrorResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostErrorResponse.html",
    "title": "Interface ITraktCheckinPostErrorResponse | Trakt.NET",
    "keywords": "Interface ITraktCheckinPostErrorResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents a checkin error response. public interface ITraktCheckinPostErrorResponse Properties ExpiresAt Gets or sets the UTC datetime, when the current checkin expires. DateTime? ExpiresAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.ITraktCheckinPostResponse.html",
    "title": "Interface ITraktCheckinPostResponse | Trakt.NET",
    "keywords": "Interface ITraktCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll public interface ITraktCheckinPostResponse Properties Id Gets or sets the history id for the checkin response. ulong Id { get; set; } Property Value ulong Sharing Gets or sets the sharing options for the checkin response. See also ITraktConnections. Nullable ITraktConnections Sharing { get; set; } Property Value ITraktConnections WatchedAt Gets or sets the UTC datetime, when the checked in movie or episode was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.ITraktEpisodeCheckinPostResponse.html",
    "title": "Interface ITraktEpisodeCheckinPostResponse | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents an episode checkin response. public interface ITraktEpisodeCheckinPostResponse : ITraktCheckinPostResponse Inherited Members ITraktCheckinPostResponse.Id ITraktCheckinPostResponse.WatchedAt ITraktCheckinPostResponse.Sharing Properties Episode Gets or sets the Trakt episode, which was checked in. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the episode, which was checked in. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.ITraktMovieCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.ITraktMovieCheckinPostResponse.html",
    "title": "Interface ITraktMovieCheckinPostResponse | Trakt.NET",
    "keywords": "Interface ITraktMovieCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents a movie checkin response. public interface ITraktMovieCheckinPostResponse : ITraktCheckinPostResponse Inherited Members ITraktCheckinPostResponse.Id ITraktCheckinPostResponse.WatchedAt ITraktCheckinPostResponse.Sharing Properties Movie Gets or sets the Trakt movie, which was checked in. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostErrorResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostErrorResponse.html",
    "title": "Class TraktCheckinPostErrorResponse | Trakt.NET",
    "keywords": "Class TraktCheckinPostErrorResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents a checkin error response. public class TraktCheckinPostErrorResponse : ITraktCheckinPostErrorResponse Inheritance object TraktCheckinPostErrorResponse Implements ITraktCheckinPostErrorResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ExpiresAt Gets or sets the UTC datetime, when the current checkin expires. public DateTime? ExpiresAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.TraktCheckinPostResponse.html",
    "title": "Class TraktCheckinPostResponse | Trakt.NET",
    "keywords": "Class TraktCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll public abstract class TraktCheckinPostResponse : ITraktCheckinPostResponse Inheritance object TraktCheckinPostResponse Implements ITraktCheckinPostResponse Derived TraktEpisodeCheckinPostResponse TraktMovieCheckinPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Gets or sets the history id for the checkin response. public ulong Id { get; set; } Property Value ulong Sharing Gets or sets the sharing options for the checkin response. See also ITraktConnections. Nullable public ITraktConnections Sharing { get; set; } Property Value ITraktConnections WatchedAt Gets or sets the UTC datetime, when the checked in movie or episode was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.TraktEpisodeCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.TraktEpisodeCheckinPostResponse.html",
    "title": "Class TraktEpisodeCheckinPostResponse | Trakt.NET",
    "keywords": "Class TraktEpisodeCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents an episode checkin response. public class TraktEpisodeCheckinPostResponse : TraktCheckinPostResponse, ITraktEpisodeCheckinPostResponse, ITraktCheckinPostResponse Inheritance object TraktCheckinPostResponse TraktEpisodeCheckinPostResponse Implements ITraktEpisodeCheckinPostResponse ITraktCheckinPostResponse Inherited Members TraktCheckinPostResponse.Id TraktCheckinPostResponse.WatchedAt TraktCheckinPostResponse.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the Trakt episode, which was checked in. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the episode, which was checked in. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.TraktMovieCheckinPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.TraktMovieCheckinPostResponse.html",
    "title": "Class TraktMovieCheckinPostResponse | Trakt.NET",
    "keywords": "Class TraktMovieCheckinPostResponse Namespace TraktNet.Objects.Post.Checkins.Responses Assembly Trakt.NET.dll Represents a movie checkin response. public class TraktMovieCheckinPostResponse : TraktCheckinPostResponse, ITraktMovieCheckinPostResponse, ITraktCheckinPostResponse Inheritance object TraktCheckinPostResponse TraktMovieCheckinPostResponse Implements ITraktMovieCheckinPostResponse ITraktCheckinPostResponse Inherited Members TraktCheckinPostResponse.Id TraktCheckinPostResponse.WatchedAt TraktCheckinPostResponse.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movie Gets or sets the Trakt movie, which was checked in. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Checkins.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Checkins.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Checkins.Responses Classes TraktCheckinPostErrorResponse Represents a checkin error response. TraktCheckinPostResponse TraktEpisodeCheckinPostResponse Represents an episode checkin response. TraktMovieCheckinPostResponse Represents a movie checkin response. Interfaces ITraktCheckinPostErrorResponse Represents a checkin error response. ITraktCheckinPostResponse ITraktEpisodeCheckinPostResponse Represents an episode checkin response. ITraktMovieCheckinPostResponse Represents a movie checkin response."
  },
  "api/TraktNet.Objects.Post.Checkins.TraktCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.TraktCheckinPost.html",
    "title": "Class TraktCheckinPost | Trakt.NET",
    "keywords": "Class TraktCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll public abstract class TraktCheckinPost : ITraktCheckinPost Inheritance object TraktCheckinPost Implements ITraktCheckinPost Derived TraktEpisodeCheckinPost TraktMovieCheckinPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AppDate Gets or sets the app build date for the checkin post. Nullable public string AppDate { get; set; } Property Value string AppVersion Gets or sets the app version for the checkin post. Nullable public string AppVersion { get; set; } Property Value string FoursquareVenueId Gets or sets the Foursquare Venue Id for the checkin post. Nullable public string FoursquareVenueId { get; set; } Property Value string FoursquareVenueName Gets or sets the Foursquare Venue Name for the checkin post. Nullable public string FoursquareVenueName { get; set; } Property Value string Message Gets or sets the message for the checkin post. Nullable public string Message { get; set; } Property Value string Sharing Gets or sets the sharing options for the checkin post. See also ITraktConnections. Nullable public ITraktConnections Sharing { get; set; } Property Value ITraktConnections Methods ToJson(CancellationToken) public abstract Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public abstract void Validate()"
  },
  "api/TraktNet.Objects.Post.Checkins.TraktEpisodeCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.TraktEpisodeCheckinPost.html",
    "title": "Class TraktEpisodeCheckinPost | Trakt.NET",
    "keywords": "Class TraktEpisodeCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll A checkin post for a Trakt episode. public class TraktEpisodeCheckinPost : TraktCheckinPost, ITraktEpisodeCheckinPost, ITraktCheckinPost Inheritance object TraktCheckinPost TraktEpisodeCheckinPost Implements ITraktEpisodeCheckinPost ITraktCheckinPost Inherited Members TraktCheckinPost.Sharing TraktCheckinPost.Message TraktCheckinPost.AppVersion TraktCheckinPost.AppDate TraktCheckinPost.FoursquareVenueId TraktCheckinPost.FoursquareVenueName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the required Trakt episode for the checkin post. See also ITraktEpisode. public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the checkin post. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Checkins.TraktMovieCheckinPost.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.TraktMovieCheckinPost.html",
    "title": "Class TraktMovieCheckinPost | Trakt.NET",
    "keywords": "Class TraktMovieCheckinPost Namespace TraktNet.Objects.Post.Checkins Assembly Trakt.NET.dll A checkin post for a Trakt movie. public class TraktMovieCheckinPost : TraktCheckinPost, ITraktMovieCheckinPost, ITraktCheckinPost Inheritance object TraktCheckinPost TraktMovieCheckinPost Implements ITraktMovieCheckinPost ITraktCheckinPost Inherited Members TraktCheckinPost.Sharing TraktCheckinPost.Message TraktCheckinPost.AppVersion TraktCheckinPost.AppDate TraktCheckinPost.FoursquareVenueId TraktCheckinPost.FoursquareVenueName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movie Gets or sets the required Trakt movie for the checkin post. See also ITraktMovie. public ITraktMovie Movie { get; set; } Property Value ITraktMovie Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Checkins.html": {
    "href": "api/TraktNet.Objects.Post.Checkins.html",
    "title": "Namespace TraktNet.Objects.Post.Checkins | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Checkins Classes TraktCheckinPost TraktEpisodeCheckinPost A checkin post for a Trakt episode. TraktMovieCheckinPost A checkin post for a Trakt movie. Interfaces ITraktCheckinPost ITraktEpisodeCheckinPost A checkin post for a Trakt episode. ITraktMovieCheckinPost A checkin post for a Trakt movie."
  },
  "api/TraktNet.Objects.Post.Comments.ITraktCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktCommentPost.html",
    "title": "Interface ITraktCommentPost | Trakt.NET",
    "keywords": "Interface ITraktCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll public interface ITraktCommentPost Properties Comment Gets or sets the required comment's content. string Comment { get; set; } Property Value string Sharing Gets or sets the sharing options for the comment post. See also ITraktConnections. Nullable ITraktConnections Sharing { get; set; } Property Value ITraktConnections Spoiler Gets or sets, whether the comment contains spoiler. bool? Spoiler { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktCommentReplyPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktCommentReplyPost.html",
    "title": "Interface ITraktCommentReplyPost | Trakt.NET",
    "keywords": "Interface ITraktCommentReplyPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A comment reply post. public interface ITraktCommentReplyPost : ITraktCommentUpdatePost Inherited Members ITraktCommentUpdatePost.Comment ITraktCommentUpdatePost.Spoiler"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktCommentUpdatePost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktCommentUpdatePost.html",
    "title": "Interface ITraktCommentUpdatePost | Trakt.NET",
    "keywords": "Interface ITraktCommentUpdatePost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A comment update post. public interface ITraktCommentUpdatePost Properties Comment Gets or sets the required comment's content. string Comment { get; set; } Property Value string Spoiler Gets or sets, whether the comment contains spoiler. bool? Spoiler { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktEpisodeCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktEpisodeCommentPost.html",
    "title": "Interface ITraktEpisodeCommentPost | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll An episode comment post. public interface ITraktEpisodeCommentPost : ITraktCommentPost Inherited Members ITraktCommentPost.Comment ITraktCommentPost.Spoiler ITraktCommentPost.Sharing Properties Episode Gets or sets the required Trakt episode for the episode comment post. See also ITraktEpisode. ITraktEpisode Episode { get; set; } Property Value ITraktEpisode"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktListCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktListCommentPost.html",
    "title": "Interface ITraktListCommentPost | Trakt.NET",
    "keywords": "Interface ITraktListCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A list comment post. public interface ITraktListCommentPost : ITraktCommentPost Inherited Members ITraktCommentPost.Comment ITraktCommentPost.Spoiler ITraktCommentPost.Sharing Properties List Gets or sets the required Trakt list for the list comment post. See also ITraktList. ITraktList List { get; set; } Property Value ITraktList"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktMovieCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktMovieCommentPost.html",
    "title": "Interface ITraktMovieCommentPost | Trakt.NET",
    "keywords": "Interface ITraktMovieCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A movie comment post. public interface ITraktMovieCommentPost : ITraktCommentPost Inherited Members ITraktCommentPost.Comment ITraktCommentPost.Spoiler ITraktCommentPost.Sharing Properties Movie Gets or sets the required Trakt movie for the movie comment post. See also ITraktMovie. ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktSeasonCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktSeasonCommentPost.html",
    "title": "Interface ITraktSeasonCommentPost | Trakt.NET",
    "keywords": "Interface ITraktSeasonCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A season comment post. public interface ITraktSeasonCommentPost : ITraktCommentPost Inherited Members ITraktCommentPost.Comment ITraktCommentPost.Spoiler ITraktCommentPost.Sharing Properties Season Gets or sets the required Trakt season for the season comment post. See also ITraktSeason. ITraktSeason Season { get; set; } Property Value ITraktSeason"
  },
  "api/TraktNet.Objects.Post.Comments.ITraktShowCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.ITraktShowCommentPost.html",
    "title": "Interface ITraktShowCommentPost | Trakt.NET",
    "keywords": "Interface ITraktShowCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A show comment post. public interface ITraktShowCommentPost : ITraktCommentPost Inherited Members ITraktCommentPost.Comment ITraktCommentPost.Spoiler ITraktCommentPost.Sharing Properties Show Gets or sets the required Trakt show for the show comment post. See also ITraktShow. ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Comments.Responses.ITraktCommentPostResponse.html",
    "title": "Interface ITraktCommentPostResponse | Trakt.NET",
    "keywords": "Interface ITraktCommentPostResponse Namespace TraktNet.Objects.Post.Comments.Responses Assembly Trakt.NET.dll Represents a comment post response. public interface ITraktCommentPostResponse : ITraktComment Inherited Members ITraktComment.Id ITraktComment.ParentId ITraktComment.CreatedAt ITraktComment.UpdatedAt ITraktComment.Comment ITraktComment.Spoiler ITraktComment.Review ITraktComment.Replies ITraktComment.Likes ITraktComment.UserStats ITraktComment.User Properties Sharing Gets or sets the sharing options of the comment post response. See also ITraktConnections. Nullable ITraktConnections Sharing { get; set; } Property Value ITraktConnections"
  },
  "api/TraktNet.Objects.Post.Comments.Responses.TraktCommentPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Comments.Responses.TraktCommentPostResponse.html",
    "title": "Class TraktCommentPostResponse | Trakt.NET",
    "keywords": "Class TraktCommentPostResponse Namespace TraktNet.Objects.Post.Comments.Responses Assembly Trakt.NET.dll Represents a comment post response. public class TraktCommentPostResponse : TraktComment, ITraktCommentPostResponse, ITraktComment Inheritance object TraktComment TraktCommentPostResponse Implements ITraktCommentPostResponse ITraktComment Inherited Members TraktComment.Id TraktComment.ParentId TraktComment.CreatedAt TraktComment.UpdatedAt TraktComment.Comment TraktComment.Spoiler TraktComment.Review TraktComment.Replies TraktComment.Likes TraktComment.UserStats TraktComment.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Sharing Gets or sets the sharing options of the comment post response. See also ITraktConnections. Nullable public ITraktConnections Sharing { get; set; } Property Value ITraktConnections"
  },
  "api/TraktNet.Objects.Post.Comments.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Comments.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Comments.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Comments.Responses Classes TraktCommentPostResponse Represents a comment post response. Interfaces ITraktCommentPostResponse Represents a comment post response."
  },
  "api/TraktNet.Objects.Post.Comments.TraktCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktCommentPost.html",
    "title": "Class TraktCommentPost | Trakt.NET",
    "keywords": "Class TraktCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll public abstract class TraktCommentPost : ITraktCommentPost Inheritance object TraktCommentPost Implements ITraktCommentPost Derived TraktEpisodeCommentPost TraktListCommentPost TraktMovieCommentPost TraktSeasonCommentPost TraktShowCommentPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comment Gets or sets the required comment's content. public string Comment { get; set; } Property Value string Sharing Gets or sets the sharing options for the comment post. See also ITraktConnections. Nullable public ITraktConnections Sharing { get; set; } Property Value ITraktConnections Spoiler Gets or sets, whether the comment contains spoiler. public bool? Spoiler { get; set; } Property Value bool? Methods ToJson(CancellationToken) public abstract Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public virtual void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktCommentReplyPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktCommentReplyPost.html",
    "title": "Class TraktCommentReplyPost | Trakt.NET",
    "keywords": "Class TraktCommentReplyPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A comment reply post. public class TraktCommentReplyPost : TraktCommentUpdatePost, ITraktCommentReplyPost, ITraktCommentUpdatePost Inheritance object TraktCommentUpdatePost TraktCommentReplyPost Implements ITraktCommentReplyPost ITraktCommentUpdatePost Inherited Members TraktCommentUpdatePost.Comment TraktCommentUpdatePost.Spoiler TraktCommentUpdatePost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string>"
  },
  "api/TraktNet.Objects.Post.Comments.TraktCommentUpdatePost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktCommentUpdatePost.html",
    "title": "Class TraktCommentUpdatePost | Trakt.NET",
    "keywords": "Class TraktCommentUpdatePost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A comment update post. public class TraktCommentUpdatePost : ITraktCommentUpdatePost Inheritance object TraktCommentUpdatePost Implements ITraktCommentUpdatePost Derived TraktCommentReplyPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Comment Gets or sets the required comment's content. public string Comment { get; set; } Property Value string Spoiler Gets or sets, whether the comment contains spoiler. public bool? Spoiler { get; set; } Property Value bool? Methods ToJson(CancellationToken) public virtual Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public virtual void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktEpisodeCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktEpisodeCommentPost.html",
    "title": "Class TraktEpisodeCommentPost | Trakt.NET",
    "keywords": "Class TraktEpisodeCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll An episode comment post. public class TraktEpisodeCommentPost : TraktCommentPost, ITraktEpisodeCommentPost, ITraktCommentPost Inheritance object TraktCommentPost TraktEpisodeCommentPost Implements ITraktEpisodeCommentPost ITraktCommentPost Inherited Members TraktCommentPost.Comment TraktCommentPost.Spoiler TraktCommentPost.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the required Trakt episode for the episode comment post. See also ITraktEpisode. public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktListCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktListCommentPost.html",
    "title": "Class TraktListCommentPost | Trakt.NET",
    "keywords": "Class TraktListCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A list comment post. public class TraktListCommentPost : TraktCommentPost, ITraktListCommentPost, ITraktCommentPost Inheritance object TraktCommentPost TraktListCommentPost Implements ITraktListCommentPost ITraktCommentPost Inherited Members TraktCommentPost.Comment TraktCommentPost.Spoiler TraktCommentPost.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List Gets or sets the required Trakt list for the list comment post. See also ITraktList. public ITraktList List { get; set; } Property Value ITraktList Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktMovieCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktMovieCommentPost.html",
    "title": "Class TraktMovieCommentPost | Trakt.NET",
    "keywords": "Class TraktMovieCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A movie comment post. public class TraktMovieCommentPost : TraktCommentPost, ITraktMovieCommentPost, ITraktCommentPost Inheritance object TraktCommentPost TraktMovieCommentPost Implements ITraktMovieCommentPost ITraktCommentPost Inherited Members TraktCommentPost.Comment TraktCommentPost.Spoiler TraktCommentPost.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movie Gets or sets the required Trakt movie for the movie comment post. See also ITraktMovie. public ITraktMovie Movie { get; set; } Property Value ITraktMovie Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktSeasonCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktSeasonCommentPost.html",
    "title": "Class TraktSeasonCommentPost | Trakt.NET",
    "keywords": "Class TraktSeasonCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A season comment post. public class TraktSeasonCommentPost : TraktCommentPost, ITraktSeasonCommentPost, ITraktCommentPost Inheritance object TraktCommentPost TraktSeasonCommentPost Implements ITraktSeasonCommentPost ITraktCommentPost Inherited Members TraktCommentPost.Comment TraktCommentPost.Spoiler TraktCommentPost.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Season Gets or sets the required Trakt season for the season comment post. See also ITraktSeason. public ITraktSeason Season { get; set; } Property Value ITraktSeason Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.TraktShowCommentPost.html": {
    "href": "api/TraktNet.Objects.Post.Comments.TraktShowCommentPost.html",
    "title": "Class TraktShowCommentPost | Trakt.NET",
    "keywords": "Class TraktShowCommentPost Namespace TraktNet.Objects.Post.Comments Assembly Trakt.NET.dll A show comment post. public class TraktShowCommentPost : TraktCommentPost, ITraktShowCommentPost, ITraktCommentPost Inheritance object TraktCommentPost TraktShowCommentPost Implements ITraktShowCommentPost ITraktCommentPost Inherited Members TraktCommentPost.Comment TraktCommentPost.Spoiler TraktCommentPost.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Show Gets or sets the required Trakt show for the show comment post. See also ITraktShow. public ITraktShow Show { get; set; } Property Value ITraktShow Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Comments.html": {
    "href": "api/TraktNet.Objects.Post.Comments.html",
    "title": "Namespace TraktNet.Objects.Post.Comments | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Comments Classes TraktCommentPost TraktCommentReplyPost A comment reply post. TraktCommentUpdatePost A comment update post. TraktEpisodeCommentPost An episode comment post. TraktListCommentPost A list comment post. TraktMovieCommentPost A movie comment post. TraktSeasonCommentPost A season comment post. TraktShowCommentPost A show comment post. Interfaces ITraktCommentPost ITraktCommentReplyPost A comment reply post. ITraktCommentUpdatePost A comment update post. ITraktEpisodeCommentPost An episode comment post. ITraktListCommentPost A list comment post. ITraktMovieCommentPost A movie comment post. ITraktSeasonCommentPost A season comment post. ITraktShowCommentPost A show comment post."
  },
  "api/TraktNet.Objects.Post.Notes.ITraktNotePost.html": {
    "href": "api/TraktNet.Objects.Post.Notes.ITraktNotePost.html",
    "title": "Interface ITraktNotePost | Trakt.NET",
    "keywords": "Interface ITraktNotePost Namespace TraktNet.Objects.Post.Notes Assembly Trakt.NET.dll A note post. public interface ITraktNotePost Properties AttachedTo Gets or sets the info to which collection, history item or rating this note is attached. See also ITraktNoteAttachedTo. ITraktNoteAttachedTo AttachedTo { get; set; } Property Value ITraktNoteAttachedTo Episode Gets or sets the Trakt episode. See also ITraktEpisode. ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the Trakt movie. See also ITraktMovie. ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the note's content. string Notes { get; set; } Property Value string Person Gets or sets the Trakt person. See also ITraktPerson. ITraktPerson Person { get; set; } Property Value ITraktPerson Privacy Gets or sets the privacy setting for the note. TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy Season Gets or sets the Trakt season. See also ITraktSeason. ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the Trakt show. See also ITraktShow. ITraktShow Show { get; set; } Property Value ITraktShow Spoiler Gets or sets whether the note contains any spoilers. bool? Spoiler { get; set; } Property Value bool?"
  },
  "api/TraktNet.Objects.Post.Notes.TraktNotePost.html": {
    "href": "api/TraktNet.Objects.Post.Notes.TraktNotePost.html",
    "title": "Class TraktNotePost | Trakt.NET",
    "keywords": "Class TraktNotePost Namespace TraktNet.Objects.Post.Notes Assembly Trakt.NET.dll A note post. public class TraktNotePost : ITraktNotePost Inheritance object TraktNotePost Implements ITraktNotePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AttachedTo Gets or sets the info to which collection, history item or rating this note is attached. See also ITraktNoteAttachedTo. public ITraktNoteAttachedTo AttachedTo { get; set; } Property Value ITraktNoteAttachedTo Episode Gets or sets the Trakt episode. See also ITraktEpisode. public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Movie Gets or sets the Trakt movie. See also ITraktMovie. public ITraktMovie Movie { get; set; } Property Value ITraktMovie Notes Gets or sets the note's content. public string Notes { get; set; } Property Value string Person Gets or sets the Trakt person. See also ITraktPerson. public ITraktPerson Person { get; set; } Property Value ITraktPerson Privacy Gets or sets the privacy setting for the note. public TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy Season Gets or sets the Trakt season. See also ITraktSeason. public ITraktSeason Season { get; set; } Property Value ITraktSeason Show Gets or sets the Trakt show. See also ITraktShow. public ITraktShow Show { get; set; } Property Value ITraktShow Spoiler Gets or sets whether the note contains any spoilers. public bool? Spoiler { get; set; } Property Value bool? Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Notes.html": {
    "href": "api/TraktNet.Objects.Post.Notes.html",
    "title": "Namespace TraktNet.Objects.Post.Notes | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Notes Classes TraktNotePost A note post. Interfaces ITraktNotePost A note post."
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseListData.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseListData.html",
    "title": "Interface ITraktPostResponseListData | Trakt.NET",
    "keywords": "Interface ITraktPostResponseListData Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A collection containing information about an updated list. public interface ITraktPostResponseListData Properties ItemCount Gets or sets the new item count of a list. int? ItemCount { get; set; } Property Value int? UpdatedAt Gets or sets the UTC datetime when a list was updated. DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundEpisode.html",
    "title": "Interface ITraktPostResponseNotFoundEpisode | Trakt.NET",
    "keywords": "Interface ITraktPostResponseNotFoundEpisode Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt episode, which was not found. public interface ITraktPostResponseNotFoundEpisode Properties Ids Gets or sets the ids of the not found episode. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundMovie.html",
    "title": "Interface ITraktPostResponseNotFoundMovie | Trakt.NET",
    "keywords": "Interface ITraktPostResponseNotFoundMovie Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt movie, which was not found. public interface ITraktPostResponseNotFoundMovie Properties Ids Gets or sets the ids of the not found movie. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds"
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundPerson.html",
    "title": "Interface ITraktPostResponseNotFoundPerson | Trakt.NET",
    "keywords": "Interface ITraktPostResponseNotFoundPerson Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt person, which was not found. public interface ITraktPostResponseNotFoundPerson Properties Ids Gets or sets the ids of the not found person. See also ITraktPersonIds. ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds"
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundSeason.html",
    "title": "Interface ITraktPostResponseNotFoundSeason | Trakt.NET",
    "keywords": "Interface ITraktPostResponseNotFoundSeason Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt season, which was not found. public interface ITraktPostResponseNotFoundSeason Properties Ids Gets or sets the ids of the not found season. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow.html": {
    "href": "api/TraktNet.Objects.Post.Responses.ITraktPostResponseNotFoundShow.html",
    "title": "Interface ITraktPostResponseNotFoundShow | Trakt.NET",
    "keywords": "Interface ITraktPostResponseNotFoundShow Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt show, which was not found. public interface ITraktPostResponseNotFoundShow Properties Ids Gets or sets the ids of the not found show. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseListData.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseListData.html",
    "title": "Class TraktPostResponseListData | Trakt.NET",
    "keywords": "Class TraktPostResponseListData Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A collection containing information about an updated list. public class TraktPostResponseListData : ITraktPostResponseListData Inheritance object TraktPostResponseListData Implements ITraktPostResponseListData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemCount Gets or sets the new item count of a list. public int? ItemCount { get; set; } Property Value int? UpdatedAt Gets or sets the UTC datetime when a list was updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundEpisode.html",
    "title": "Class TraktPostResponseNotFoundEpisode | Trakt.NET",
    "keywords": "Class TraktPostResponseNotFoundEpisode Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt episode, which was not found. public class TraktPostResponseNotFoundEpisode : ITraktPostResponseNotFoundEpisode Inheritance object TraktPostResponseNotFoundEpisode Implements ITraktPostResponseNotFoundEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found episode. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundMovie.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundMovie.html",
    "title": "Class TraktPostResponseNotFoundMovie | Trakt.NET",
    "keywords": "Class TraktPostResponseNotFoundMovie Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt movie, which was not found. public class TraktPostResponseNotFoundMovie : ITraktPostResponseNotFoundMovie Inheritance object TraktPostResponseNotFoundMovie Implements ITraktPostResponseNotFoundMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found movie. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundPerson.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundPerson.html",
    "title": "Class TraktPostResponseNotFoundPerson | Trakt.NET",
    "keywords": "Class TraktPostResponseNotFoundPerson Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt person, which was not found. public class TraktPostResponseNotFoundPerson : ITraktPostResponseNotFoundPerson Inheritance object TraktPostResponseNotFoundPerson Implements ITraktPostResponseNotFoundPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found person. See also ITraktPersonIds. public ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundSeason.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundSeason.html",
    "title": "Class TraktPostResponseNotFoundSeason | Trakt.NET",
    "keywords": "Class TraktPostResponseNotFoundSeason Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt season, which was not found. public class TraktPostResponseNotFoundSeason : ITraktPostResponseNotFoundSeason Inheritance object TraktPostResponseNotFoundSeason Implements ITraktPostResponseNotFoundSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found season. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundShow.html": {
    "href": "api/TraktNet.Objects.Post.Responses.TraktPostResponseNotFoundShow.html",
    "title": "Class TraktPostResponseNotFoundShow | Trakt.NET",
    "keywords": "Class TraktPostResponseNotFoundShow Namespace TraktNet.Objects.Post.Responses Assembly Trakt.NET.dll A Trakt show, which was not found. public class TraktPostResponseNotFoundShow : ITraktPostResponseNotFoundShow Inheritance object TraktPostResponseNotFoundShow Implements ITraktPostResponseNotFoundShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found show. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds"
  },
  "api/TraktNet.Objects.Post.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Responses Classes TraktPostResponseListData A collection containing information about an updated list. TraktPostResponseNotFoundEpisode A Trakt episode, which was not found. TraktPostResponseNotFoundMovie A Trakt movie, which was not found. TraktPostResponseNotFoundPerson A Trakt person, which was not found. TraktPostResponseNotFoundSeason A Trakt season, which was not found. TraktPostResponseNotFoundShow A Trakt show, which was not found. Interfaces ITraktPostResponseListData A collection containing information about an updated list. ITraktPostResponseNotFoundEpisode A Trakt episode, which was not found. ITraktPostResponseNotFoundMovie A Trakt movie, which was not found. ITraktPostResponseNotFoundPerson A Trakt person, which was not found. ITraktPostResponseNotFoundSeason A Trakt season, which was not found. ITraktPostResponseNotFoundShow A Trakt show, which was not found."
  },
  "api/TraktNet.Objects.Post.Scrobbles.ITraktEpisodeScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.ITraktEpisodeScrobblePost.html",
    "title": "Interface ITraktEpisodeScrobblePost | Trakt.NET",
    "keywords": "Interface ITraktEpisodeScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll A scrobble post for a Trakt episode. public interface ITraktEpisodeScrobblePost : ITraktScrobblePost Inherited Members ITraktScrobblePost.Progress ITraktScrobblePost.AppVersion ITraktScrobblePost.AppDate Properties Episode Gets or sets the required Trakt episode for the scrobble post. See also ITraktEpisode. ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the scrobble post. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Scrobbles.ITraktMovieScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.ITraktMovieScrobblePost.html",
    "title": "Interface ITraktMovieScrobblePost | Trakt.NET",
    "keywords": "Interface ITraktMovieScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll A scrobble post for a Trakt movie. public interface ITraktMovieScrobblePost : ITraktScrobblePost Inherited Members ITraktScrobblePost.Progress ITraktScrobblePost.AppVersion ITraktScrobblePost.AppDate Properties Movie Gets or sets the required Trakt movie for the scrobble post. See also ITraktMovie. ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Scrobbles.ITraktScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.ITraktScrobblePost.html",
    "title": "Interface ITraktScrobblePost | Trakt.NET",
    "keywords": "Interface ITraktScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll public interface ITraktScrobblePost Properties AppDate Gets or sets the app build date for the scrobble post. Nullable string AppDate { get; set; } Property Value string AppVersion Gets or sets the app version for the scrobble post. Nullable string AppVersion { get; set; } Property Value string Progress Gets or sets the required progress. Should be a value between 0 and 100. float Progress { get; set; } Property Value float"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktEpisodeScrobblePostResponse.html",
    "title": "Interface ITraktEpisodeScrobblePostResponse | Trakt.NET",
    "keywords": "Interface ITraktEpisodeScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll Represents an episode scrobble response. public interface ITraktEpisodeScrobblePostResponse : ITraktScrobblePostResponse Inherited Members ITraktScrobblePostResponse.Id ITraktScrobblePostResponse.Action ITraktScrobblePostResponse.Progress ITraktScrobblePostResponse.Sharing Properties Episode Gets or sets the Trakt episode, which was scrobbled. See also ITraktEpisode. Nullable ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the episode, which was scrobbled. See also ITraktShow. Nullable ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktMovieScrobblePostResponse.html",
    "title": "Interface ITraktMovieScrobblePostResponse | Trakt.NET",
    "keywords": "Interface ITraktMovieScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll Represents a movie scrobble response. public interface ITraktMovieScrobblePostResponse : ITraktScrobblePostResponse Inherited Members ITraktScrobblePostResponse.Id ITraktScrobblePostResponse.Action ITraktScrobblePostResponse.Progress ITraktScrobblePostResponse.Sharing Properties Movie Gets or sets the Trakt movie, which was scrobbled. See also ITraktMovie. Nullable ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.ITraktScrobblePostResponse.html",
    "title": "Interface ITraktScrobblePostResponse | Trakt.NET",
    "keywords": "Interface ITraktScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll public interface ITraktScrobblePostResponse Properties Action Gets or sets the action type for the scrobble response. See also TraktScrobbleActionType. Nullable TraktScrobbleActionType Action { get; set; } Property Value TraktScrobbleActionType Id Gets or sets the history id for the scrobble response. ulong Id { get; set; } Property Value ulong Progress Gets or sets the progress for the scrobble response. float? Progress { get; set; } Property Value float? Sharing Gets or sets the sharing options for the scrobble response. See also ITraktConnections. Nullable ITraktConnections Sharing { get; set; } Property Value ITraktConnections"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktEpisodeScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktEpisodeScrobblePostResponse.html",
    "title": "Class TraktEpisodeScrobblePostResponse | Trakt.NET",
    "keywords": "Class TraktEpisodeScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll Represents an episode scrobble response. public class TraktEpisodeScrobblePostResponse : TraktScrobblePostResponse, ITraktEpisodeScrobblePostResponse, ITraktScrobblePostResponse Inheritance object TraktScrobblePostResponse TraktEpisodeScrobblePostResponse Implements ITraktEpisodeScrobblePostResponse ITraktScrobblePostResponse Inherited Members TraktScrobblePostResponse.Id TraktScrobblePostResponse.Action TraktScrobblePostResponse.Progress TraktScrobblePostResponse.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the Trakt episode, which was scrobbled. See also ITraktEpisode. Nullable public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the episode, which was scrobbled. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktMovieScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktMovieScrobblePostResponse.html",
    "title": "Class TraktMovieScrobblePostResponse | Trakt.NET",
    "keywords": "Class TraktMovieScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll Represents a movie scrobble response. public class TraktMovieScrobblePostResponse : TraktScrobblePostResponse, ITraktMovieScrobblePostResponse, ITraktScrobblePostResponse Inheritance object TraktScrobblePostResponse TraktMovieScrobblePostResponse Implements ITraktMovieScrobblePostResponse ITraktScrobblePostResponse Inherited Members TraktScrobblePostResponse.Id TraktScrobblePostResponse.Action TraktScrobblePostResponse.Progress TraktScrobblePostResponse.Sharing object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movie Gets or sets the Trakt movie, which was scrobbled. See also ITraktMovie. Nullable public ITraktMovie Movie { get; set; } Property Value ITraktMovie"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.TraktScrobblePostResponse.html",
    "title": "Class TraktScrobblePostResponse | Trakt.NET",
    "keywords": "Class TraktScrobblePostResponse Namespace TraktNet.Objects.Post.Scrobbles.Responses Assembly Trakt.NET.dll public abstract class TraktScrobblePostResponse : ITraktScrobblePostResponse Inheritance object TraktScrobblePostResponse Implements ITraktScrobblePostResponse Derived TraktEpisodeScrobblePostResponse TraktMovieScrobblePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Action Gets or sets the action type for the scrobble response. See also TraktScrobbleActionType. Nullable public TraktScrobbleActionType Action { get; set; } Property Value TraktScrobbleActionType Id Gets or sets the history id for the scrobble response. public ulong Id { get; set; } Property Value ulong Progress Gets or sets the progress for the scrobble response. public float? Progress { get; set; } Property Value float? Sharing Gets or sets the sharing options for the scrobble response. See also ITraktConnections. Nullable public ITraktConnections Sharing { get; set; } Property Value ITraktConnections"
  },
  "api/TraktNet.Objects.Post.Scrobbles.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Scrobbles.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Scrobbles.Responses Classes TraktEpisodeScrobblePostResponse Represents an episode scrobble response. TraktMovieScrobblePostResponse Represents a movie scrobble response. TraktScrobblePostResponse Interfaces ITraktEpisodeScrobblePostResponse Represents an episode scrobble response. ITraktMovieScrobblePostResponse Represents a movie scrobble response. ITraktScrobblePostResponse"
  },
  "api/TraktNet.Objects.Post.Scrobbles.TraktEpisodeScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.TraktEpisodeScrobblePost.html",
    "title": "Class TraktEpisodeScrobblePost | Trakt.NET",
    "keywords": "Class TraktEpisodeScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll A scrobble post for a Trakt episode. public class TraktEpisodeScrobblePost : TraktScrobblePost, ITraktEpisodeScrobblePost, ITraktScrobblePost Inheritance object TraktScrobblePost TraktEpisodeScrobblePost Implements ITraktEpisodeScrobblePost ITraktScrobblePost Inherited Members TraktScrobblePost.Progress TraktScrobblePost.AppVersion TraktScrobblePost.AppDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode Gets or sets the required Trakt episode for the scrobble post. See also ITraktEpisode. public ITraktEpisode Episode { get; set; } Property Value ITraktEpisode Show Gets or sets the Trakt show for the scrobble post. See also ITraktShow. Nullable public ITraktShow Show { get; set; } Property Value ITraktShow Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Scrobbles.TraktMovieScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.TraktMovieScrobblePost.html",
    "title": "Class TraktMovieScrobblePost | Trakt.NET",
    "keywords": "Class TraktMovieScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll A scrobble post for a Trakt movie. public class TraktMovieScrobblePost : TraktScrobblePost, ITraktMovieScrobblePost, ITraktScrobblePost Inheritance object TraktScrobblePost TraktMovieScrobblePost Implements ITraktMovieScrobblePost ITraktScrobblePost Inherited Members TraktScrobblePost.Progress TraktScrobblePost.AppVersion TraktScrobblePost.AppDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movie Gets or sets the required Trakt movie for the scrobble post. See also ITraktMovie. public ITraktMovie Movie { get; set; } Property Value ITraktMovie Methods ToJson(CancellationToken) public override Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public override void Validate()"
  },
  "api/TraktNet.Objects.Post.Scrobbles.TraktScrobblePost.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.TraktScrobblePost.html",
    "title": "Class TraktScrobblePost | Trakt.NET",
    "keywords": "Class TraktScrobblePost Namespace TraktNet.Objects.Post.Scrobbles Assembly Trakt.NET.dll public abstract class TraktScrobblePost : ITraktScrobblePost Inheritance object TraktScrobblePost Implements ITraktScrobblePost Derived TraktEpisodeScrobblePost TraktMovieScrobblePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AppDate Gets or sets the app build date for the scrobble post. Nullable public string AppDate { get; set; } Property Value string AppVersion Gets or sets the app version for the scrobble post. Nullable public string AppVersion { get; set; } Property Value string Progress Gets or sets the required progress. Should be a value between 0 and 100. public float Progress { get; set; } Property Value float Methods ToJson(CancellationToken) public abstract Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public virtual void Validate()"
  },
  "api/TraktNet.Objects.Post.Scrobbles.html": {
    "href": "api/TraktNet.Objects.Post.Scrobbles.html",
    "title": "Namespace TraktNet.Objects.Post.Scrobbles | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Scrobbles Classes TraktEpisodeScrobblePost A scrobble post for a Trakt episode. TraktMovieScrobblePost A scrobble post for a Trakt movie. TraktScrobblePost Interfaces ITraktEpisodeScrobblePost A scrobble post for a Trakt episode. ITraktMovieScrobblePost A scrobble post for a Trakt movie. ITraktScrobblePost"
  },
  "api/TraktNet.Objects.Post.Shows.ITraktShowResetWatchedProgressPost.html": {
    "href": "api/TraktNet.Objects.Post.Shows.ITraktShowResetWatchedProgressPost.html",
    "title": "Interface ITraktShowResetWatchedProgressPost | Trakt.NET",
    "keywords": "Interface ITraktShowResetWatchedProgressPost Namespace TraktNet.Objects.Post.Shows Assembly Trakt.NET.dll A Trakt post for resetting the watched progress of a show, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. public interface ITraktShowResetWatchedProgressPost Properties ResetAt An optional reset_at UTC date to have it calculate progress from that specific date onwards. DateTime? ResetAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Shows.TraktShowResetWatchedProgressPost.html": {
    "href": "api/TraktNet.Objects.Post.Shows.TraktShowResetWatchedProgressPost.html",
    "title": "Class TraktShowResetWatchedProgressPost | Trakt.NET",
    "keywords": "Class TraktShowResetWatchedProgressPost Namespace TraktNet.Objects.Post.Shows Assembly Trakt.NET.dll A Trakt post for resetting the watched progress of a show, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. public class TraktShowResetWatchedProgressPost : ITraktShowResetWatchedProgressPost Inheritance object TraktShowResetWatchedProgressPost Implements ITraktShowResetWatchedProgressPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ResetAt An optional reset_at UTC date to have it calculate progress from that specific date onwards. public DateTime? ResetAt { get; set; } Property Value DateTime? Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Shows.html": {
    "href": "api/TraktNet.Objects.Post.Shows.html",
    "title": "Namespace TraktNet.Objects.Post.Shows | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Shows Classes TraktShowResetWatchedProgressPost A Trakt post for resetting the watched progress of a show, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards. Interfaces ITraktShowResetWatchedProgressPost A Trakt post for resetting the watched progress of a show, containing an optional reset_at UTC date to have it calculate progress from that specific date onwards."
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPost.html",
    "title": "Interface ITraktSyncCollectionPost | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPost Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post, containing all movies, shows, seasons and / or episodes, which should be added to the user's collection. public interface ITraktSyncCollectionPost Properties Episodes An optional list of ITraktSyncCollectionPostEpisodes. Each ITraktSyncCollectionPostEpisode must have at least a valid Trakt id. IList<ITraktSyncCollectionPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncCollectionPostEpisode> Movies An optional list of ITraktSyncCollectionPostMovies. Each ITraktSyncCollectionPostMovie must have at least a valid Trakt id. IList<ITraktSyncCollectionPostMovie> Movies { get; set; } Property Value IList<ITraktSyncCollectionPostMovie> Seasons An optional list of ITraktSyncCollectionPostSeasons. Each ITraktSyncCollectionPostSeason must have at least a valid Trakt id. IList<ITraktSyncCollectionPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncCollectionPostSeason> Shows An optional list of ITraktSyncCollectionPostShows. Each ITraktSyncCollectionPostShow must have at least a valid Trakt id. IList<ITraktSyncCollectionPostShow> Shows { get; set; } Property Value IList<ITraktSyncCollectionPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostEpisode.html",
    "title": "Interface ITraktSyncCollectionPostEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostEpisode Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post episode, containing the required episode ids, optional metadata and an optional datetime, when the episode was collected. public interface ITraktSyncCollectionPostEpisode : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt episode was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostMovie.html",
    "title": "Interface ITraktSyncCollectionPostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostMovie Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post movie, containing the required movie ids, optional metadata and an optional datetime, when the movie was collected. public interface ITraktSyncCollectionPostMovie : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt movie was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the optional title of the Trakt movie. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostSeason.html",
    "title": "Interface ITraktSyncCollectionPostSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostSeason Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post season, containing the required season ids, optional metadata and an optional datetime, when the season was collected. public interface ITraktSyncCollectionPostSeason : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt season was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShow.html",
    "title": "Interface ITraktSyncCollectionPostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostShow Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post show, containing the required show ids, optional metadata and an optional datetime, when the show was collected. Can also contain optional seasons. public interface ITraktSyncCollectionPostShow : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt show was collected. DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncCollectionPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the collection. Otherwise, only the specified seasons and / or episodes will be added to the collection. IList<ITraktSyncCollectionPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncCollectionPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowEpisode.html",
    "title": "Interface ITraktSyncCollectionPostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post episode, containing the required episode number. public interface ITraktSyncCollectionPostShowEpisode : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the collected at UTC datetime of the Trakt episode. DateTime? CollectedAt { get; set; } Property Value DateTime? Number Gets or sets the required season number of the Trakt episode. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionPostShowSeason.html",
    "title": "Interface ITraktSyncCollectionPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post season, containing the required season number and optional episodes. public interface ITraktSyncCollectionPostShowSeason : ITraktMetadata Inherited Members ITraktMetadata.MediaType ITraktMetadata.MediaResolution ITraktMetadata.Audio ITraktMetadata.AudioChannels ITraktMetadata.HDR ITraktMetadata.ThreeDimensional Properties CollectedAt Gets or sets the collected at UTC datetime of the Trakt season. DateTime? CollectedAt { get; set; } Property Value DateTime? Episodes An optional list of ITraktSyncCollectionPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the collection. Otherwise, only the specified episodes will be added to the collection. IList<ITraktSyncCollectionPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncCollectionPostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.ITraktSyncCollectionRemovePost.html",
    "title": "Interface ITraktSyncCollectionRemovePost | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionRemovePost Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's collection. public interface ITraktSyncCollectionRemovePost : ITraktSyncCollectionPost Inherited Members ITraktSyncCollectionPost.Movies ITraktSyncCollectionPost.Shows ITraktSyncCollectionPost.Seasons ITraktSyncCollectionPost.Episodes"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionPostResponse.html",
    "title": "Interface ITraktSyncCollectionPostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostResponse Namespace TraktNet.Objects.Post.Syncs.Collection.Responses Assembly Trakt.NET.dll Represents the response for a collection post. See also ITraktSyncCollectionPost. Contains the number of added, updated, existing and not found movies, shows, seasons and episodes. public interface ITraktSyncCollectionPostResponse Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Existing { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup Updated A collection containing the number of updated movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Updated { get; set; } Property Value ITraktSyncPostResponseGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.Responses.ITraktSyncCollectionRemovePostResponse.html",
    "title": "Interface ITraktSyncCollectionRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Collection.Responses Assembly Trakt.NET.dll Represents the response for a collection remove post. See also ITraktSyncCollectionPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public interface ITraktSyncCollectionRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionPostResponse.html",
    "title": "Class TraktSyncCollectionPostResponse | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostResponse Namespace TraktNet.Objects.Post.Syncs.Collection.Responses Assembly Trakt.NET.dll Represents the response for a collection post. See also ITraktSyncCollectionPost. Contains the number of added, updated, existing and not found movies, shows, seasons and episodes. public class TraktSyncCollectionPostResponse : ITraktSyncCollectionPostResponse Inheritance object TraktSyncCollectionPostResponse Implements ITraktSyncCollectionPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Existing { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup Updated A collection containing the number of updated movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Updated { get; set; } Property Value ITraktSyncPostResponseGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.Responses.TraktSyncCollectionRemovePostResponse.html",
    "title": "Class TraktSyncCollectionRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktSyncCollectionRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Collection.Responses Assembly Trakt.NET.dll Represents the response for a collection remove post. See also ITraktSyncCollectionPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public class TraktSyncCollectionRemovePostResponse : ITraktSyncCollectionRemovePostResponse Inheritance object TraktSyncCollectionRemovePostResponse Implements ITraktSyncCollectionRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Collection.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Collection.Responses Classes TraktSyncCollectionPostResponse Represents the response for a collection post. See also ITraktSyncCollectionPost. Contains the number of added, updated, existing and not found movies, shows, seasons and episodes. TraktSyncCollectionRemovePostResponse Represents the response for a collection remove post. See also ITraktSyncCollectionPost. Contains the number of deleted and not found movies, shows, seasons and episodes. Interfaces ITraktSyncCollectionPostResponse Represents the response for a collection post. See also ITraktSyncCollectionPost. Contains the number of added, updated, existing and not found movies, shows, seasons and episodes. ITraktSyncCollectionRemovePostResponse Represents the response for a collection remove post. See also ITraktSyncCollectionPost. Contains the number of deleted and not found movies, shows, seasons and episodes."
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPost.html",
    "title": "Class TraktSyncCollectionPost | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPost Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post, containing all movies, shows, seasons and / or episodes, which should be added to the user's collection. public class TraktSyncCollectionPost : ITraktSyncCollectionPost Inheritance object TraktSyncCollectionPost Implements ITraktSyncCollectionPost Derived TraktSyncCollectionRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncCollectionPostEpisodes. Each ITraktSyncCollectionPostEpisode must have at least a valid Trakt id. public IList<ITraktSyncCollectionPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncCollectionPostEpisode> Movies An optional list of ITraktSyncCollectionPostMovies. Each ITraktSyncCollectionPostMovie must have at least a valid Trakt id. public IList<ITraktSyncCollectionPostMovie> Movies { get; set; } Property Value IList<ITraktSyncCollectionPostMovie> Seasons An optional list of ITraktSyncCollectionPostSeasons. Each ITraktSyncCollectionPostSeason must have at least a valid Trakt id. public IList<ITraktSyncCollectionPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncCollectionPostSeason> Shows An optional list of ITraktSyncCollectionPostShows. Each ITraktSyncCollectionPostShow must have at least a valid Trakt id. public IList<ITraktSyncCollectionPostShow> Shows { get; set; } Property Value IList<ITraktSyncCollectionPostShow> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostEpisode.html",
    "title": "Class TraktSyncCollectionPostEpisode | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostEpisode Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post episode, containing the required episode ids, optional metadata and an optional datetime, when the episode was collected. public class TraktSyncCollectionPostEpisode : TraktMetadata, ITraktSyncCollectionPostEpisode, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostEpisode Implements ITraktSyncCollectionPostEpisode ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt episode was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostMovie.html",
    "title": "Class TraktSyncCollectionPostMovie | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostMovie Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post movie, containing the required movie ids, optional metadata and an optional datetime, when the movie was collected. public class TraktSyncCollectionPostMovie : TraktMetadata, ITraktSyncCollectionPostMovie, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostMovie Implements ITraktSyncCollectionPostMovie ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt movie was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the optional title of the Trakt movie. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostSeason.html",
    "title": "Class TraktSyncCollectionPostSeason | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostSeason Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post season, containing the required season ids, optional metadata and an optional datetime, when the season was collected. public class TraktSyncCollectionPostSeason : TraktMetadata, ITraktSyncCollectionPostSeason, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostSeason Implements ITraktSyncCollectionPostSeason ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt season was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShow.html",
    "title": "Class TraktSyncCollectionPostShow | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostShow Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post show, containing the required show ids, optional metadata and an optional datetime, when the show was collected. Can also contain optional seasons. public class TraktSyncCollectionPostShow : TraktMetadata, ITraktSyncCollectionPostShow, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostShow Implements ITraktSyncCollectionPostShow ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the optional UTC datetime, when the Trakt show was collected. public DateTime? CollectedAt { get; set; } Property Value DateTime? Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncCollectionPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the collection. Otherwise, only the specified seasons and / or episodes will be added to the collection. public IList<ITraktSyncCollectionPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncCollectionPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowEpisode.html",
    "title": "Class TraktSyncCollectionPostShowEpisode | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post episode, containing the required episode number. public class TraktSyncCollectionPostShowEpisode : TraktMetadata, ITraktSyncCollectionPostShowEpisode, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostShowEpisode Implements ITraktSyncCollectionPostShowEpisode ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the collected at UTC datetime of the Trakt episode. public DateTime? CollectedAt { get; set; } Property Value DateTime? Number Gets or sets the required season number of the Trakt episode. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionPostShowSeason.html",
    "title": "Class TraktSyncCollectionPostShowSeason | Trakt.NET",
    "keywords": "Class TraktSyncCollectionPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection post season, containing the required season number and optional episodes. public class TraktSyncCollectionPostShowSeason : TraktMetadata, ITraktSyncCollectionPostShowSeason, ITraktMetadata Inheritance object TraktMetadata TraktSyncCollectionPostShowSeason Implements ITraktSyncCollectionPostShowSeason ITraktMetadata Inherited Members TraktMetadata.MediaType TraktMetadata.MediaResolution TraktMetadata.Audio TraktMetadata.AudioChannels TraktMetadata.HDR TraktMetadata.ThreeDimensional object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectedAt Gets or sets the collected at UTC datetime of the Trakt episode. public DateTime? CollectedAt { get; set; } Property Value DateTime? Episodes An optional list of ITraktSyncCollectionPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the collection. Otherwise, only the specified episodes will be added to the collection. public IList<ITraktSyncCollectionPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncCollectionPostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.TraktSyncCollectionRemovePost.html",
    "title": "Class TraktSyncCollectionRemovePost | Trakt.NET",
    "keywords": "Class TraktSyncCollectionRemovePost Namespace TraktNet.Objects.Post.Syncs.Collection Assembly Trakt.NET.dll A Trakt collection remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's collection. public class TraktSyncCollectionRemovePost : TraktSyncCollectionPost, ITraktSyncCollectionRemovePost, ITraktSyncCollectionPost Inheritance object TraktSyncCollectionPost TraktSyncCollectionRemovePost Implements ITraktSyncCollectionRemovePost ITraktSyncCollectionPost Inherited Members TraktSyncCollectionPost.Movies TraktSyncCollectionPost.Shows TraktSyncCollectionPost.Seasons TraktSyncCollectionPost.Episodes TraktSyncCollectionPost.ToJson(CancellationToken) TraktSyncCollectionPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Syncs.Collection.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Collection.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Collection | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Collection Classes TraktSyncCollectionPost A Trakt collection post, containing all movies, shows, seasons and / or episodes, which should be added to the user's collection. TraktSyncCollectionPostEpisode A Trakt collection post episode, containing the required episode ids, optional metadata and an optional datetime, when the episode was collected. TraktSyncCollectionPostMovie A Trakt collection post movie, containing the required movie ids, optional metadata and an optional datetime, when the movie was collected. TraktSyncCollectionPostSeason A Trakt collection post season, containing the required season ids, optional metadata and an optional datetime, when the season was collected. TraktSyncCollectionPostShow A Trakt collection post show, containing the required show ids, optional metadata and an optional datetime, when the show was collected. Can also contain optional seasons. TraktSyncCollectionPostShowEpisode A Trakt collection post episode, containing the required episode number. TraktSyncCollectionPostShowSeason A Trakt collection post season, containing the required season number and optional episodes. TraktSyncCollectionRemovePost A Trakt collection remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's collection. Interfaces ITraktSyncCollectionPost A Trakt collection post, containing all movies, shows, seasons and / or episodes, which should be added to the user's collection. ITraktSyncCollectionPostEpisode A Trakt collection post episode, containing the required episode ids, optional metadata and an optional datetime, when the episode was collected. ITraktSyncCollectionPostMovie A Trakt collection post movie, containing the required movie ids, optional metadata and an optional datetime, when the movie was collected. ITraktSyncCollectionPostSeason A Trakt collection post season, containing the required season ids, optional metadata and an optional datetime, when the season was collected. ITraktSyncCollectionPostShow A Trakt collection post show, containing the required show ids, optional metadata and an optional datetime, when the show was collected. Can also contain optional seasons. ITraktSyncCollectionPostShowEpisode A Trakt collection post episode, containing the required episode number. ITraktSyncCollectionPostShowSeason A Trakt collection post season, containing the required season number and optional episodes. ITraktSyncCollectionRemovePost A Trakt collection remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's collection."
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPost.html",
    "title": "Interface ITraktSyncFavoritesPost | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPost Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post, containing all movies and shows, which should be favorited by an user. public interface ITraktSyncFavoritesPost Properties Movies An optional list of ITraktSyncFavoritesPostMovies. Each ITraktSyncFavoritesPostMovie must have at least a valid Trakt id. IList<ITraktSyncFavoritesPostMovie> Movies { get; set; } Property Value IList<ITraktSyncFavoritesPostMovie> Shows An optional list of ITraktSyncFavoritesPostShows. Each ITraktSyncFavoritesPostShow must have at least a valid Trakt id. IList<ITraktSyncFavoritesPostShow> Shows { get; set; } Property Value IList<ITraktSyncFavoritesPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPostMovie.html",
    "title": "Interface ITraktSyncFavoritesPostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostMovie Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post movie, containing the required movie ids and optional movie title, year and notes. public interface ITraktSyncFavoritesPostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the optional notes for the Trakt movie. string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt movie. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesPostShow.html",
    "title": "Interface ITraktSyncFavoritesPostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostShow Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post show, containing the required show ids and optional show title, year and notes. public interface ITraktSyncFavoritesPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the optional notes for the Trakt show. string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.ITraktSyncFavoritesRemovePost.html",
    "title": "Interface ITraktSyncFavoritesRemovePost | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesRemovePost Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites remove post, containing movie and show favorites, which should be removed. public interface ITraktSyncFavoritesRemovePost : ITraktSyncFavoritesPost Inherited Members ITraktSyncFavoritesPost.Movies ITraktSyncFavoritesPost.Shows"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponse.html",
    "title": "Interface ITraktSyncFavoritesPostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostResponse Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll Represents the response for a favorites post. See also ITraktSyncFavoritesPost. Contains the number of added, existing and not found movies and shows. public interface ITraktSyncFavoritesPostResponse Properties Added A collection containing the number of added movies and shows. Nullable ITraktSyncFavoritesPostResponseGroup Added { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup Existing A collection containing the number of existing movies and shows. Nullable ITraktSyncFavoritesPostResponseGroup Existing { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies and shows, which were not found. Nullable ITraktSyncFavoritesPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncFavoritesPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponseGroup.html",
    "title": "Interface ITraktSyncFavoritesPostResponseGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostResponseGroup Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll A collection containing the number of movies and shows. public interface ITraktSyncFavoritesPostResponseGroup Properties Movies Gets or sets the number of movies. int? Movies { get; set; } Property Value int? Shows Gets or sets the number of shows. int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesPostResponseNotFoundGroup.html",
    "title": "Interface ITraktSyncFavoritesPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll A collection containing the ids of favorited movies and shows, which were not found. public interface ITraktSyncFavoritesPostResponseNotFoundGroup Properties Movies A list of ITraktSyncFavoritesPostMovie, containing the ids of favorited movies, which were not found. Nullable IList<ITraktSyncFavoritesPostMovie> Movies { get; set; } Property Value IList<ITraktSyncFavoritesPostMovie> Shows A list of ITraktSyncFavoritesPostShow, containing the ids of favorited shows, which were not found. Nullable IList<ITraktSyncFavoritesPostShow> Shows { get; set; } Property Value IList<ITraktSyncFavoritesPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.ITraktSyncFavoritesRemovePostResponse.html",
    "title": "Interface ITraktSyncFavoritesRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll Represents the response for a favorites remove post. See also ITraktSyncFavoritesRemovePostResponse. Contains the number of deleted movies and shows and not found movies and shows. public interface ITraktSyncFavoritesRemovePostResponse Properties Deleted A collection containing the number of deleted movies and shows. Nullable ITraktSyncFavoritesPostResponseGroup Deleted { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies and shows, which were not found. Nullable ITraktSyncFavoritesPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncFavoritesPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponse.html",
    "title": "Class TraktSyncFavoritesPostResponse | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPostResponse Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll Represents the response for a favorites post. See also ITraktSyncFavoritesPost. Contains the number of added, existing and not found movies and shows. public class TraktSyncFavoritesPostResponse : ITraktSyncFavoritesPostResponse Inheritance object TraktSyncFavoritesPostResponse Implements ITraktSyncFavoritesPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies and shows. Nullable public ITraktSyncFavoritesPostResponseGroup Added { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup Existing A collection containing the number of existing movies and shows. Nullable public ITraktSyncFavoritesPostResponseGroup Existing { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies and shows, which were not found. Nullable public ITraktSyncFavoritesPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncFavoritesPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponseGroup.html",
    "title": "Class TraktSyncFavoritesPostResponseGroup | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPostResponseGroup Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll A collection containing the number of movies and shows. public class TraktSyncFavoritesPostResponseGroup : ITraktSyncFavoritesPostResponseGroup Inheritance object TraktSyncFavoritesPostResponseGroup Implements ITraktSyncFavoritesPostResponseGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies Gets or sets the number of movies. public int? Movies { get; set; } Property Value int? Shows Gets or sets the number of shows. public int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesPostResponseNotFoundGroup.html",
    "title": "Class TraktSyncFavoritesPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll A collection containing the ids of favorited movies and shows, which were not found. public class TraktSyncFavoritesPostResponseNotFoundGroup : ITraktSyncFavoritesPostResponseNotFoundGroup Inheritance object TraktSyncFavoritesPostResponseNotFoundGroup Implements ITraktSyncFavoritesPostResponseNotFoundGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies A list of ITraktSyncFavoritesPostMovie, containing the ids of favorited movies, which were not found. Nullable public IList<ITraktSyncFavoritesPostMovie> Movies { get; set; } Property Value IList<ITraktSyncFavoritesPostMovie> Shows A list of ITraktSyncFavoritesPostShow, containing the ids of favorited shows, which were not found. Nullable public IList<ITraktSyncFavoritesPostShow> Shows { get; set; } Property Value IList<ITraktSyncFavoritesPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.TraktSyncFavoritesRemovePostResponse.html",
    "title": "Class TraktSyncFavoritesRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Assembly Trakt.NET.dll Represents the response for a favorites remove post. See also ITraktSyncFavoritesRemovePostResponse. Contains the number of deleted movies and shows and not found movies and shows. public class TraktSyncFavoritesRemovePostResponse : ITraktSyncFavoritesRemovePostResponse Inheritance object TraktSyncFavoritesRemovePostResponse Implements ITraktSyncFavoritesRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies and shows. Nullable public ITraktSyncFavoritesPostResponseGroup Deleted { get; set; } Property Value ITraktSyncFavoritesPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies and shows, which were not found. Nullable public ITraktSyncFavoritesPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncFavoritesPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Favorites.Responses Classes TraktSyncFavoritesPostResponse Represents the response for a favorites post. See also ITraktSyncFavoritesPost. Contains the number of added, existing and not found movies and shows. TraktSyncFavoritesPostResponseGroup A collection containing the number of movies and shows. TraktSyncFavoritesPostResponseNotFoundGroup A collection containing the ids of favorited movies and shows, which were not found. TraktSyncFavoritesRemovePostResponse Represents the response for a favorites remove post. See also ITraktSyncFavoritesRemovePostResponse. Contains the number of deleted movies and shows and not found movies and shows. Interfaces ITraktSyncFavoritesPostResponse Represents the response for a favorites post. See also ITraktSyncFavoritesPost. Contains the number of added, existing and not found movies and shows. ITraktSyncFavoritesPostResponseGroup A collection containing the number of movies and shows. ITraktSyncFavoritesPostResponseNotFoundGroup A collection containing the ids of favorited movies and shows, which were not found. ITraktSyncFavoritesRemovePostResponse Represents the response for a favorites remove post. See also ITraktSyncFavoritesRemovePostResponse. Contains the number of deleted movies and shows and not found movies and shows."
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPost.html",
    "title": "Class TraktSyncFavoritesPost | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPost Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post, containing all movies and shows, which should be favorited by an user. public class TraktSyncFavoritesPost : ITraktSyncFavoritesPost Inheritance object TraktSyncFavoritesPost Implements ITraktSyncFavoritesPost Derived TraktSyncFavoritesRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies An optional list of ITraktSyncFavoritesPostMovies. Each ITraktSyncFavoritesPostMovie must have at least a valid Trakt id. public IList<ITraktSyncFavoritesPostMovie> Movies { get; set; } Property Value IList<ITraktSyncFavoritesPostMovie> Shows An optional list of ITraktSyncFavoritesPostShows. Each ITraktSyncFavoritesPostShow must have at least a valid Trakt id. public IList<ITraktSyncFavoritesPostShow> Shows { get; set; } Property Value IList<ITraktSyncFavoritesPostShow> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPostMovie.html",
    "title": "Class TraktSyncFavoritesPostMovie | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPostMovie Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post movie, containing the required movie ids and optional movie title, year and notes. public class TraktSyncFavoritesPostMovie : ITraktSyncFavoritesPostMovie Inheritance object TraktSyncFavoritesPostMovie Implements ITraktSyncFavoritesPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the optional notes for the Trakt movie. public string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt movie. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesPostShow.html",
    "title": "Class TraktSyncFavoritesPostShow | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesPostShow Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites post show, containing the required show ids and optional show title, year and notes. public class TraktSyncFavoritesPostShow : ITraktSyncFavoritesPostShow Inheritance object TraktSyncFavoritesPostShow Implements ITraktSyncFavoritesPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the optional notes for the Trakt show. public string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.TraktSyncFavoritesRemovePost.html",
    "title": "Class TraktSyncFavoritesRemovePost | Trakt.NET",
    "keywords": "Class TraktSyncFavoritesRemovePost Namespace TraktNet.Objects.Post.Syncs.Favorites Assembly Trakt.NET.dll A Trakt favorites remove post, containing movie and show favorites, which should be removed. public class TraktSyncFavoritesRemovePost : TraktSyncFavoritesPost, ITraktSyncFavoritesRemovePost, ITraktSyncFavoritesPost Inheritance object TraktSyncFavoritesPost TraktSyncFavoritesRemovePost Implements ITraktSyncFavoritesRemovePost ITraktSyncFavoritesPost Inherited Members TraktSyncFavoritesPost.Movies TraktSyncFavoritesPost.Shows TraktSyncFavoritesPost.ToJson(CancellationToken) TraktSyncFavoritesPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Syncs.Favorites.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Favorites.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Favorites | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Favorites Classes TraktSyncFavoritesPost A Trakt favorites post, containing all movies and shows, which should be favorited by an user. TraktSyncFavoritesPostMovie A Trakt favorites post movie, containing the required movie ids and optional movie title, year and notes. TraktSyncFavoritesPostShow A Trakt favorites post show, containing the required show ids and optional show title, year and notes. TraktSyncFavoritesRemovePost A Trakt favorites remove post, containing movie and show favorites, which should be removed. Interfaces ITraktSyncFavoritesPost A Trakt favorites post, containing all movies and shows, which should be favorited by an user. ITraktSyncFavoritesPostMovie A Trakt favorites post movie, containing the required movie ids and optional movie title, year and notes. ITraktSyncFavoritesPostShow A Trakt favorites post show, containing the required show ids and optional show title, year and notes. ITraktSyncFavoritesRemovePost A Trakt favorites remove post, containing movie and show favorites, which should be removed."
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPost.html",
    "title": "Interface ITraktSyncHistoryPost | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPost Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post, containing all movies, shows, seasons and / or episodes, which should be added to the user's history. public interface ITraktSyncHistoryPost Properties Episodes An optional list of ITraktSyncHistoryPostEpisodes. Each ITraktSyncHistoryPostEpisode must have at least a valid Trakt id. IList<ITraktSyncHistoryPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryPostEpisode> Movies An optional list of ITraktSyncHistoryPostMovies. Each ITraktSyncHistoryPostMovie must have at least a valid Trakt id. IList<ITraktSyncHistoryPostMovie> Movies { get; set; } Property Value IList<ITraktSyncHistoryPostMovie> Seasons An optional list of ITraktSyncHistoryPostSeasons. Each ITraktSyncHistoryPostSeason must have at least a valid Trakt id. IList<ITraktSyncHistoryPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryPostSeason> Shows An optional list of ITraktSyncHistoryPostShows. Each ITraktSyncHistoryPostShow must have at least a valid Trakt id. IList<ITraktSyncHistoryPostShow> Shows { get; set; } Property Value IList<ITraktSyncHistoryPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostEpisode.html",
    "title": "Interface ITraktSyncHistoryPostEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post episode, containing the required episode ids and an optional datetime, when the episode was watched. public interface ITraktSyncHistoryPostEpisode : ITraktSyncHistoryRemovePostEpisode Inherited Members ITraktSyncHistoryRemovePostEpisode.Ids Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt episode was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostMovie.html",
    "title": "Interface ITraktSyncHistoryPostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostMovie Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post movie, containing the required movie ids and an optional datetime, when the movie was watched. public interface ITraktSyncHistoryPostMovie : ITraktSyncHistoryRemovePostMovie Inherited Members ITraktSyncHistoryRemovePostMovie.Title ITraktSyncHistoryRemovePostMovie.Year ITraktSyncHistoryRemovePostMovie.Ids Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt movie was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostSeason.html",
    "title": "Interface ITraktSyncHistoryPostSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season ids and an optional datetime, when the season was watched. public interface ITraktSyncHistoryPostSeason : ITraktSyncHistoryRemovePostSeason Inherited Members ITraktSyncHistoryRemovePostSeason.Ids Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt season was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShow.html",
    "title": "Interface ITraktSyncHistoryPostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostShow Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post show, containing the required show ids and an optional datetime, when the show was watched. Can also contain optional seasons. public interface ITraktSyncHistoryPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncHistoryPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the history. Otherwise, only the specified seasons and / or episodes will be added to the history. IList<ITraktSyncHistoryPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string WatchedAt Gets or sets the optional UTC datetime, when the Trakt show was watched. DateTime? WatchedAt { get; set; } Property Value DateTime? Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowEpisode.html",
    "title": "Interface ITraktSyncHistoryPostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post episode, containing the required episode number and an optional datetime, when the episode was watched. public interface ITraktSyncHistoryPostShowEpisode : ITraktSyncHistoryRemovePostShowEpisode Inherited Members ITraktSyncHistoryRemovePostShowEpisode.Number Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt episode was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryPostShowSeason.html",
    "title": "Interface ITraktSyncHistoryPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostShowSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season number and optional episodes and an optional datetime, when the season was watched. public interface ITraktSyncHistoryPostShowSeason Properties Episodes An optional list of ITraktSyncHistoryPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the history. Otherwise, only the specified episodes will be added to the history. IList<ITraktSyncHistoryPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryPostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int WatchedAt Gets or sets the optional UTC datetime, when the Trakt season was watched. DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePost.html",
    "title": "Interface ITraktSyncHistoryRemovePost | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePost Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post, containing all movies, shows, seasons, episodes and / or history ids, which should be removed from the user's history. public interface ITraktSyncHistoryRemovePost Properties Episodes An optional list of ITraktSyncHistoryRemovePostEpisodes. Each ITraktSyncHistoryRemovePostEpisode must have at least a valid Trakt id. IList<ITraktSyncHistoryRemovePostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryRemovePostEpisode> HistoryIds An optional list of history ids, which should be removed. IList<ulong> HistoryIds { get; set; } Property Value IList<ulong> Movies An optional list of ITraktSyncHistoryRemovePostMovies. Each ITraktSyncHistoryRemovePostMovie must have at least a valid Trakt id. IList<ITraktSyncHistoryRemovePostMovie> Movies { get; set; } Property Value IList<ITraktSyncHistoryRemovePostMovie> Seasons An optional list of ITraktSyncHistoryRemovePostSeasons. Each ITraktSyncHistoryRemovePostSeason must have at least a valid Trakt id. IList<ITraktSyncHistoryRemovePostSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryRemovePostSeason> Shows An optional list of ITraktSyncHistoryRemovePostShows. Each ITraktSyncHistoryRemovePostShow must have at least a valid Trakt id. IList<ITraktSyncHistoryRemovePostShow> Shows { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostEpisode.html",
    "title": "Interface ITraktSyncHistoryRemovePostEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post episode, containing the required episode ids. public interface ITraktSyncHistoryRemovePostEpisode Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostMovie.html",
    "title": "Interface ITraktSyncHistoryRemovePostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostMovie Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post movie, containing the required movie ids. public interface ITraktSyncHistoryRemovePostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the optional title of the Trakt movie. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostSeason.html",
    "title": "Interface ITraktSyncHistoryRemovePostSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post season, containing the required season ids. public interface ITraktSyncHistoryRemovePostSeason Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShow.html",
    "title": "Interface ITraktSyncHistoryRemovePostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostShow Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post show, containing the required show ids. Can also contain optional seasons. public interface ITraktSyncHistoryRemovePostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncHistoryRemovePostShowSeasons. If no seasons are set, the whole Trakt show will be added to the history. Otherwise, only the specified seasons and / or episodes will be added to the history. IList<ITraktSyncHistoryRemovePostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShowEpisode.html",
    "title": "Interface ITraktSyncHistoryRemovePostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostShowEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post episode, containing the required episode number. public interface ITraktSyncHistoryRemovePostShowEpisode Properties Number Gets or sets the required season number of the Trakt episode. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.ITraktSyncHistoryRemovePostShowSeason.html",
    "title": "Interface ITraktSyncHistoryRemovePostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostShowSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season number and optional episodes. public interface ITraktSyncHistoryRemovePostShowSeason Properties Episodes An optional list of ITraktSyncHistoryRemovePostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the history. Otherwise, only the specified episodes will be added to the history. IList<ITraktSyncHistoryRemovePostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryPostResponse.html",
    "title": "Interface ITraktSyncHistoryPostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostResponse Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll Represents the response for a history post. See also ITraktSyncHistoryPost. Contains the number of added and not found movies, shows, seasons and episodes. public interface ITraktSyncHistoryPostResponse Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponse.html",
    "title": "Interface ITraktSyncHistoryRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll Represents the response for a history remove post. See also ITraktSyncHistoryRemovePost. Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids. public interface ITraktSyncHistoryRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows, seasons, episodes and history item ids. Nullable ITraktSyncHistoryRemovePostResponseGroup Deleted { get; set; } Property Value ITraktSyncHistoryRemovePostResponseGroup NotFound A collection containing the ids of movies, shows, seasons, episodes and history item ids, which were not found. Nullable ITraktSyncHistoryRemovePostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncHistoryRemovePostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseGroup.html",
    "title": "Interface ITraktSyncHistoryRemovePostResponseGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostResponseGroup Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons, episodes and history item ids. public interface ITraktSyncHistoryRemovePostResponseGroup : ITraktSyncPostResponseGroup Inherited Members ITraktSyncPostResponseGroup.Movies ITraktSyncPostResponseGroup.Shows ITraktSyncPostResponseGroup.Seasons ITraktSyncPostResponseGroup.Episodes Properties HistoryIds Gets or sets the number of history item ids. int? HistoryIds { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.ITraktSyncHistoryRemovePostResponseNotFoundGroup.html",
    "title": "Interface ITraktSyncHistoryRemovePostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found. public interface ITraktSyncHistoryRemovePostResponseNotFoundGroup : ITraktSyncPostResponseNotFoundGroup Inherited Members ITraktSyncPostResponseNotFoundGroup.Movies ITraktSyncPostResponseNotFoundGroup.Shows ITraktSyncPostResponseNotFoundGroup.Seasons ITraktSyncPostResponseNotFoundGroup.Episodes Properties HistoryIds Gets or sets a list of Trakt history item ids, which were not found. Nullable IList<ulong> HistoryIds { get; set; } Property Value IList<ulong>"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryPostResponse.html",
    "title": "Class TraktSyncHistoryPostResponse | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostResponse Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll Represents the response for a history post. See also ITraktSyncHistoryPost. Contains the number of added and not found movies, shows, seasons and episodes. public class TraktSyncHistoryPostResponse : ITraktSyncHistoryPostResponse Inheritance object TraktSyncHistoryPostResponse Implements ITraktSyncHistoryPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponse.html",
    "title": "Class TraktSyncHistoryRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll Represents the response for a history remove post. See also ITraktSyncHistoryRemovePost. Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids. public class TraktSyncHistoryRemovePostResponse : ITraktSyncHistoryRemovePostResponse Inheritance object TraktSyncHistoryRemovePostResponse Implements ITraktSyncHistoryRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows, seasons, episodes and history item ids. Nullable public ITraktSyncHistoryRemovePostResponseGroup Deleted { get; set; } Property Value ITraktSyncHistoryRemovePostResponseGroup NotFound A collection containing the ids of movies, shows, seasons, episodes and history item ids, which were not found. Nullable public ITraktSyncHistoryRemovePostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncHistoryRemovePostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseGroup.html",
    "title": "Class TraktSyncHistoryRemovePostResponseGroup | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostResponseGroup Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons, episodes and history item ids. public class TraktSyncHistoryRemovePostResponseGroup : TraktSyncPostResponseGroup, ITraktSyncHistoryRemovePostResponseGroup, ITraktSyncPostResponseGroup Inheritance object TraktSyncPostResponseGroup TraktSyncHistoryRemovePostResponseGroup Implements ITraktSyncHistoryRemovePostResponseGroup ITraktSyncPostResponseGroup Inherited Members TraktSyncPostResponseGroup.Movies TraktSyncPostResponseGroup.Shows TraktSyncPostResponseGroup.Seasons TraktSyncPostResponseGroup.Episodes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HistoryIds Gets or sets the number of history item ids. public int? HistoryIds { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.TraktSyncHistoryRemovePostResponseNotFoundGroup.html",
    "title": "Class TraktSyncHistoryRemovePostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.History.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found. public class TraktSyncHistoryRemovePostResponseNotFoundGroup : TraktSyncPostResponseNotFoundGroup, ITraktSyncHistoryRemovePostResponseNotFoundGroup, ITraktSyncPostResponseNotFoundGroup Inheritance object TraktSyncPostResponseNotFoundGroup TraktSyncHistoryRemovePostResponseNotFoundGroup Implements ITraktSyncHistoryRemovePostResponseNotFoundGroup ITraktSyncPostResponseNotFoundGroup Inherited Members TraktSyncPostResponseNotFoundGroup.Movies TraktSyncPostResponseNotFoundGroup.Shows TraktSyncPostResponseNotFoundGroup.Seasons TraktSyncPostResponseNotFoundGroup.Episodes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HistoryIds Gets or sets a list of Trakt history item ids, which were not found. Nullable public IList<ulong> HistoryIds { get; set; } Property Value IList<ulong>"
  },
  "api/TraktNet.Objects.Post.Syncs.History.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.History.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.History.Responses Classes TraktSyncHistoryPostResponse Represents the response for a history post. See also ITraktSyncHistoryPost. Contains the number of added and not found movies, shows, seasons and episodes. TraktSyncHistoryRemovePostResponse Represents the response for a history remove post. See also ITraktSyncHistoryRemovePost. Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids. TraktSyncHistoryRemovePostResponseGroup A collection containing the number of movies, shows, seasons, episodes and history item ids. TraktSyncHistoryRemovePostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found. Interfaces ITraktSyncHistoryPostResponse Represents the response for a history post. See also ITraktSyncHistoryPost. Contains the number of added and not found movies, shows, seasons and episodes. ITraktSyncHistoryRemovePostResponse Represents the response for a history remove post. See also ITraktSyncHistoryRemovePost. Contains the number of deleted and not found movies, shows, seasons, episodes and history item ids. ITraktSyncHistoryRemovePostResponseGroup A collection containing the number of movies, shows, seasons, episodes and history item ids. ITraktSyncHistoryRemovePostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons, episodes and history items, which were not found."
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPost.html",
    "title": "Class TraktSyncHistoryPost | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPost Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post, containing all movies, shows, seasons and / or episodes, which should be added to the user's history. public class TraktSyncHistoryPost : ITraktSyncHistoryPost Inheritance object TraktSyncHistoryPost Implements ITraktSyncHistoryPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncHistoryPostEpisodes. Each ITraktSyncHistoryPostEpisode must have at least a valid Trakt id. public IList<ITraktSyncHistoryPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryPostEpisode> Movies An optional list of ITraktSyncHistoryPostMovies. Each ITraktSyncHistoryPostMovie must have at least a valid Trakt id. public IList<ITraktSyncHistoryPostMovie> Movies { get; set; } Property Value IList<ITraktSyncHistoryPostMovie> Seasons An optional list of ITraktSyncHistoryPostSeasons. Each ITraktSyncHistoryPostSeason must have at least a valid Trakt id. public IList<ITraktSyncHistoryPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryPostSeason> Shows An optional list of ITraktSyncHistoryPostShows. Each ITraktSyncHistoryPostShow must have at least a valid Trakt id. public IList<ITraktSyncHistoryPostShow> Shows { get; set; } Property Value IList<ITraktSyncHistoryPostShow> Methods ToJson(CancellationToken) public virtual Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public virtual void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostEpisode.html",
    "title": "Class TraktSyncHistoryPostEpisode | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post episode, containing the required episode ids and an optional datetime, when the episode was watched. public class TraktSyncHistoryPostEpisode : TraktSyncHistoryRemovePostEpisode, ITraktSyncHistoryPostEpisode, ITraktSyncHistoryRemovePostEpisode Inheritance object TraktSyncHistoryRemovePostEpisode TraktSyncHistoryPostEpisode Implements ITraktSyncHistoryPostEpisode ITraktSyncHistoryRemovePostEpisode Inherited Members TraktSyncHistoryRemovePostEpisode.Ids object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt episode was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostMovie.html",
    "title": "Class TraktSyncHistoryPostMovie | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostMovie Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post movie, containing the required movie ids and an optional datetime, when the movie was watched. public class TraktSyncHistoryPostMovie : TraktSyncHistoryRemovePostMovie, ITraktSyncHistoryPostMovie, ITraktSyncHistoryRemovePostMovie Inheritance object TraktSyncHistoryRemovePostMovie TraktSyncHistoryPostMovie Implements ITraktSyncHistoryPostMovie ITraktSyncHistoryRemovePostMovie Inherited Members TraktSyncHistoryRemovePostMovie.Title TraktSyncHistoryRemovePostMovie.Year TraktSyncHistoryRemovePostMovie.Ids object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt movie was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostSeason.html",
    "title": "Class TraktSyncHistoryPostSeason | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season ids and an optional datetime, when the season was watched. public class TraktSyncHistoryPostSeason : TraktSyncHistoryRemovePostSeason, ITraktSyncHistoryPostSeason, ITraktSyncHistoryRemovePostSeason Inheritance object TraktSyncHistoryRemovePostSeason TraktSyncHistoryPostSeason Implements ITraktSyncHistoryPostSeason ITraktSyncHistoryRemovePostSeason Inherited Members TraktSyncHistoryRemovePostSeason.Ids object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt season was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShow.html",
    "title": "Class TraktSyncHistoryPostShow | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostShow Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post show, containing the required show ids and an optional datetime, when the show was watched. Can also contain optional seasons. public class TraktSyncHistoryPostShow : ITraktSyncHistoryPostShow Inheritance object TraktSyncHistoryPostShow Implements ITraktSyncHistoryPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncHistoryPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the history. Otherwise, only the specified seasons and / or episodes will be added to the history. public IList<ITraktSyncHistoryPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string WatchedAt Gets or sets the optional UTC datetime, when the Trakt show was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime? Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowEpisode.html",
    "title": "Class TraktSyncHistoryPostShowEpisode | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post episode, containing the required episode number and an optional datetime, when the episode was watched. public class TraktSyncHistoryPostShowEpisode : TraktSyncHistoryRemovePostShowEpisode, ITraktSyncHistoryPostShowEpisode, ITraktSyncHistoryRemovePostShowEpisode Inheritance object TraktSyncHistoryRemovePostShowEpisode TraktSyncHistoryPostShowEpisode Implements ITraktSyncHistoryPostShowEpisode ITraktSyncHistoryRemovePostShowEpisode Inherited Members TraktSyncHistoryRemovePostShowEpisode.Number object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WatchedAt Gets or sets the optional UTC datetime, when the Trakt episode was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryPostShowSeason.html",
    "title": "Class TraktSyncHistoryPostShowSeason | Trakt.NET",
    "keywords": "Class TraktSyncHistoryPostShowSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season number and optional episodes and an optional datetime, when the season was watched. public class TraktSyncHistoryPostShowSeason : ITraktSyncHistoryPostShowSeason Inheritance object TraktSyncHistoryPostShowSeason Implements ITraktSyncHistoryPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncHistoryPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the history. Otherwise, only the specified episodes will be added to the history. public IList<ITraktSyncHistoryPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryPostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int WatchedAt Gets or sets the optional UTC datetime, when the Trakt season was watched. public DateTime? WatchedAt { get; set; } Property Value DateTime?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePost.html",
    "title": "Class TraktSyncHistoryRemovePost | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePost Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post, containing all movies, shows, seasons, episodes and / or history ids, which should be removed from the user's history. public class TraktSyncHistoryRemovePost : ITraktSyncHistoryRemovePost Inheritance object TraktSyncHistoryRemovePost Implements ITraktSyncHistoryRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncHistoryRemovePostEpisodes. Each ITraktSyncHistoryRemovePostEpisode must have at least a valid Trakt id. public IList<ITraktSyncHistoryRemovePostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryRemovePostEpisode> HistoryIds An optional list of history ids, which should be removed. public IList<ulong> HistoryIds { get; set; } Property Value IList<ulong> Movies An optional list of ITraktSyncHistoryRemovePostMovies. Each ITraktSyncHistoryRemovePostMovie must have at least a valid Trakt id. public IList<ITraktSyncHistoryRemovePostMovie> Movies { get; set; } Property Value IList<ITraktSyncHistoryRemovePostMovie> Seasons An optional list of ITraktSyncHistoryRemovePostSeasons. Each ITraktSyncHistoryRemovePostSeason must have at least a valid Trakt id. public IList<ITraktSyncHistoryRemovePostSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryRemovePostSeason> Shows An optional list of ITraktSyncHistoryRemovePostShows. Each ITraktSyncHistoryRemovePostShow must have at least a valid Trakt id. public IList<ITraktSyncHistoryRemovePostShow> Shows { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShow> Methods ToJson(CancellationToken) public virtual Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public virtual void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostEpisode.html",
    "title": "Class TraktSyncHistoryRemovePostEpisode | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post episode, containing the required episode ids. public class TraktSyncHistoryRemovePostEpisode : ITraktSyncHistoryRemovePostEpisode Inheritance object TraktSyncHistoryRemovePostEpisode Implements ITraktSyncHistoryRemovePostEpisode Derived TraktSyncHistoryPostEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostMovie.html",
    "title": "Class TraktSyncHistoryRemovePostMovie | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostMovie Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post movie, containing the required movie ids. public class TraktSyncHistoryRemovePostMovie : ITraktSyncHistoryRemovePostMovie Inheritance object TraktSyncHistoryRemovePostMovie Implements ITraktSyncHistoryRemovePostMovie Derived TraktSyncHistoryPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the optional title of the Trakt movie. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostSeason.html",
    "title": "Class TraktSyncHistoryRemovePostSeason | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post season, containing the required season ids. public class TraktSyncHistoryRemovePostSeason : ITraktSyncHistoryRemovePostSeason Inheritance object TraktSyncHistoryRemovePostSeason Implements ITraktSyncHistoryRemovePostSeason Derived TraktSyncHistoryPostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShow.html",
    "title": "Class TraktSyncHistoryRemovePostShow | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostShow Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post show, containing the required show ids. Can also contain optional seasons. public class TraktSyncHistoryRemovePostShow : ITraktSyncHistoryRemovePostShow Inheritance object TraktSyncHistoryRemovePostShow Implements ITraktSyncHistoryRemovePostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktSyncHistoryRemovePostShowSeasons. If no seasons are set, the whole Trakt show will be added to the history. Otherwise, only the specified seasons and / or episodes will be added to the history. public IList<ITraktSyncHistoryRemovePostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShowEpisode.html",
    "title": "Class TraktSyncHistoryRemovePostShowEpisode | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostShowEpisode Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history remove post episode, containing the required episode number. public class TraktSyncHistoryRemovePostShowEpisode : ITraktSyncHistoryRemovePostShowEpisode Inheritance object TraktSyncHistoryRemovePostShowEpisode Implements ITraktSyncHistoryRemovePostShowEpisode Derived TraktSyncHistoryPostShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Number Gets or sets the required season number of the Trakt episode. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.TraktSyncHistoryRemovePostShowSeason.html",
    "title": "Class TraktSyncHistoryRemovePostShowSeason | Trakt.NET",
    "keywords": "Class TraktSyncHistoryRemovePostShowSeason Namespace TraktNet.Objects.Post.Syncs.History Assembly Trakt.NET.dll A Trakt history post season, containing the required season number and optional episodes. public class TraktSyncHistoryRemovePostShowSeason : ITraktSyncHistoryRemovePostShowSeason Inheritance object TraktSyncHistoryRemovePostShowSeason Implements ITraktSyncHistoryRemovePostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncHistoryRemovePostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the history. Otherwise, only the specified episodes will be added to the history. public IList<ITraktSyncHistoryRemovePostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncHistoryRemovePostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.History.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.History.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.History | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.History Classes TraktSyncHistoryPost A Trakt history post, containing all movies, shows, seasons and / or episodes, which should be added to the user's history. TraktSyncHistoryPostEpisode A Trakt history post episode, containing the required episode ids and an optional datetime, when the episode was watched. TraktSyncHistoryPostMovie A Trakt history post movie, containing the required movie ids and an optional datetime, when the movie was watched. TraktSyncHistoryPostSeason A Trakt history post season, containing the required season ids and an optional datetime, when the season was watched. TraktSyncHistoryPostShow A Trakt history post show, containing the required show ids and an optional datetime, when the show was watched. Can also contain optional seasons. TraktSyncHistoryPostShowEpisode A Trakt history post episode, containing the required episode number and an optional datetime, when the episode was watched. TraktSyncHistoryPostShowSeason A Trakt history post season, containing the required season number and optional episodes and an optional datetime, when the season was watched. TraktSyncHistoryRemovePost A Trakt history remove post, containing all movies, shows, seasons, episodes and / or history ids, which should be removed from the user's history. TraktSyncHistoryRemovePostEpisode A Trakt history remove post episode, containing the required episode ids. TraktSyncHistoryRemovePostMovie A Trakt history remove post movie, containing the required movie ids. TraktSyncHistoryRemovePostSeason A Trakt history remove post season, containing the required season ids. TraktSyncHistoryRemovePostShow A Trakt history post show, containing the required show ids. Can also contain optional seasons. TraktSyncHistoryRemovePostShowEpisode A Trakt history remove post episode, containing the required episode number. TraktSyncHistoryRemovePostShowSeason A Trakt history post season, containing the required season number and optional episodes. Interfaces ITraktSyncHistoryPost A Trakt history post, containing all movies, shows, seasons and / or episodes, which should be added to the user's history. ITraktSyncHistoryPostEpisode A Trakt history post episode, containing the required episode ids and an optional datetime, when the episode was watched. ITraktSyncHistoryPostMovie A Trakt history post movie, containing the required movie ids and an optional datetime, when the movie was watched. ITraktSyncHistoryPostSeason A Trakt history post season, containing the required season ids and an optional datetime, when the season was watched. ITraktSyncHistoryPostShow A Trakt history post show, containing the required show ids and an optional datetime, when the show was watched. Can also contain optional seasons. ITraktSyncHistoryPostShowEpisode A Trakt history post episode, containing the required episode number and an optional datetime, when the episode was watched. ITraktSyncHistoryPostShowSeason A Trakt history post season, containing the required season number and optional episodes and an optional datetime, when the season was watched. ITraktSyncHistoryRemovePost A Trakt history remove post, containing all movies, shows, seasons, episodes and / or history ids, which should be removed from the user's history. ITraktSyncHistoryRemovePostEpisode A Trakt history remove post episode, containing the required episode ids. ITraktSyncHistoryRemovePostMovie A Trakt history remove post movie, containing the required movie ids. ITraktSyncHistoryRemovePostSeason A Trakt history remove post season, containing the required season ids. ITraktSyncHistoryRemovePostShow A Trakt history post show, containing the required show ids. Can also contain optional seasons. ITraktSyncHistoryRemovePostShowEpisode A Trakt history remove post episode, containing the required episode number. ITraktSyncHistoryRemovePostShowSeason A Trakt history post season, containing the required season number and optional episodes."
  },
  "api/TraktNet.Objects.Post.Syncs.Lists.ITraktUpdateListPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Lists.ITraktUpdateListPost.html",
    "title": "Interface ITraktUpdateListPost | Trakt.NET",
    "keywords": "Interface ITraktUpdateListPost Namespace TraktNet.Objects.Post.Syncs.Lists Assembly Trakt.NET.dll A Trakt list update post. public interface ITraktUpdateListPost Properties Description The description for the list. string Description { get; set; } Property Value string SortBy The sort by value for the list. TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow The sort how value for the list. TraktSortHow SortHow { get; set; } Property Value TraktSortHow"
  },
  "api/TraktNet.Objects.Post.Syncs.Lists.TraktUpdateListPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Lists.TraktUpdateListPost.html",
    "title": "Class TraktUpdateListPost | Trakt.NET",
    "keywords": "Class TraktUpdateListPost Namespace TraktNet.Objects.Post.Syncs.Lists Assembly Trakt.NET.dll A Trakt list update post. public class TraktUpdateListPost : ITraktUpdateListPost Inheritance object TraktUpdateListPost Implements ITraktUpdateListPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description The description for the list. public string Description { get; set; } Property Value string SortBy The sort by value for the list. public TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow The sort how value for the list. public TraktSortHow SortHow { get; set; } Property Value TraktSortHow Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.Lists.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Lists.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Lists | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Lists Classes TraktUpdateListPost A Trakt list update post. Interfaces ITraktUpdateListPost A Trakt list update post."
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPost.html",
    "title": "Interface ITraktSyncRatingsPost | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPost Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post, containing all movies, shows, seasons and / or episodes, which should be added to the user's ratings. public interface ITraktSyncRatingsPost Properties Episodes An optional list of ITraktSyncRatingsPostEpisodes. Each ITraktSyncRatingsPostEpisode must have at least a valid Trakt id. IList<ITraktSyncRatingsPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostEpisode> Movies An optional list of ITraktSyncRatingsPostMovies. Each ITraktSyncRatingsPostMovie must have at least a valid Trakt id. IList<ITraktSyncRatingsPostMovie> Movies { get; set; } Property Value IList<ITraktSyncRatingsPostMovie> Seasons An optional list of ITraktSyncRatingsPostSeasons. Each ITraktSyncRatingsPostSeason must have at least a valid Trakt id. IList<ITraktSyncRatingsPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostSeason> Shows An optional list of ITraktSyncRatingsPostShows. Each ITraktSyncRatingsPostShow must have at least a valid Trakt id. IList<ITraktSyncRatingsPostShow> Shows { get; set; } Property Value IList<ITraktSyncRatingsPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostEpisode.html",
    "title": "Interface ITraktSyncRatingsPostEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post episode, containing the required episode ids, a rating and an optional datetime, when the episode was rated. public interface ITraktSyncRatingsPostEpisode Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds RatedAt Gets or sets the optional UTC datetime, when the Trakt episode was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the episode. int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostMovie.html",
    "title": "Interface ITraktSyncRatingsPostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostMovie Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post movie, containing the required movie ids, a rating and an optional datetime, when the movie was rated. public interface ITraktSyncRatingsPostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds RatedAt Gets or sets the optional UTC datetime, when the Trakt movie was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the movie. int Rating { get; set; } Property Value int Title Gets or sets the optional title of the Trakt movie. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostSeason.html",
    "title": "Interface ITraktSyncRatingsPostSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostSeason Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post season, containing the required season ids, a rating and an optional datetime, when the season was rated. public interface ITraktSyncRatingsPostSeason Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds RatedAt Gets or sets the optional UTC datetime, when the Trakt season was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the season. int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShow.html",
    "title": "Interface ITraktSyncRatingsPostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostShow Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post show, containing the required show ids, a rating and an optional datetime, when the show was rated. Can also contain optional seasons. public interface ITraktSyncRatingsPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds RatedAt Gets or sets the optional UTC datetime, when the Trakt show was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the show. int? Rating { get; set; } Property Value int? Seasons An optional list of ITraktSyncRatingsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the ratings. Otherwise, only the specified seasons and / or episodes will be added to the ratings. IList<ITraktSyncRatingsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowEpisode.html",
    "title": "Interface ITraktSyncRatingsPostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post episode, containing the required episode number, a rating and an optional datetime, when the episode was rated. public interface ITraktSyncRatingsPostShowEpisode Properties Number Gets or sets the required season number of the Trakt episode. int Number { get; set; } Property Value int RatedAt Gets or sets the optional UTC datetime, when the Trakt episode was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the episode. int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsPostShowSeason.html",
    "title": "Interface ITraktSyncRatingsPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post season, containing the required season number and optional episodes, a rating and an optional datetime, when the season was rated. public interface ITraktSyncRatingsPostShowSeason Properties Episodes An optional list of ITraktSyncRatingsPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the ratings. Otherwise, only the specified episodes will be added to the ratings. IList<ITraktSyncRatingsPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int RatedAt Gets or sets the optional UTC datetime, when the Trakt season was rated. DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the season. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.ITraktSyncRatingsRemovePost.html",
    "title": "Interface ITraktSyncRatingsRemovePost | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsRemovePost Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's ratings. public interface ITraktSyncRatingsRemovePost : ITraktSyncRatingsPost Inherited Members ITraktSyncRatingsPost.Movies ITraktSyncRatingsPost.Shows ITraktSyncRatingsPost.Seasons ITraktSyncRatingsPost.Episodes"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponse.html",
    "title": "Interface ITraktSyncRatingsPostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponse Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll Represents the response for a ratings post. See also ITraktSyncRatingsPost. Contains the number of added and not found movies, shows, seasons and episodes. public interface ITraktSyncRatingsPostResponse Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncRatingsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncRatingsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundEpisode.html",
    "title": "Interface ITraktSyncRatingsPostResponseNotFoundEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponseNotFoundEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt episode, which was not found. public interface ITraktSyncRatingsPostResponseNotFoundEpisode Properties Ids Gets or sets the ids of the not found episode. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Rating Gets or sets the rating of the not found episode. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundGroup.html",
    "title": "Interface ITraktSyncRatingsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A collection containing the ids of rated movies, shows, seasons and episodes, which were not found. public interface ITraktSyncRatingsPostResponseNotFoundGroup Properties Episodes A list of ITraktSyncRatingsPostResponseNotFoundEpisode, containing the ids of rated episodes, which were not found. Nullable IList<ITraktSyncRatingsPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundEpisode> Movies A list of ITraktSyncRatingsPostResponseNotFoundMovie, containing the ids of rated movies, which were not found. Nullable IList<ITraktSyncRatingsPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundMovie> Seasons A list of ITraktSyncRatingsPostResponseNotFoundSeason, containing the ids of rated seasons, which were not found. Nullable IList<ITraktSyncRatingsPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundSeason> Shows A list of ITraktSyncRatingsPostResponseNotFoundShow, containing the ids of rated shows, which were not found. Nullable IList<ITraktSyncRatingsPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundMovie.html",
    "title": "Interface ITraktSyncRatingsPostResponseNotFoundMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponseNotFoundMovie Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt movie, which was not found. public interface ITraktSyncRatingsPostResponseNotFoundMovie Properties Ids Gets or sets the ids of the not found movie. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Rating Gets or sets the rating of the not found movie. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundSeason.html",
    "title": "Interface ITraktSyncRatingsPostResponseNotFoundSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponseNotFoundSeason Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt season, which was not found. public interface ITraktSyncRatingsPostResponseNotFoundSeason Properties Ids Gets or sets the ids of the not found season. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Rating Gets or sets the rating of the not found season. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsPostResponseNotFoundShow.html",
    "title": "Interface ITraktSyncRatingsPostResponseNotFoundShow | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostResponseNotFoundShow Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt show, which was not found. public interface ITraktSyncRatingsPostResponseNotFoundShow Properties Ids Gets or sets the ids of the not found show. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Rating Gets or sets the rating of the not found show. int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.ITraktSyncRatingsRemovePostResponse.html",
    "title": "Interface ITraktSyncRatingsRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll Represents the response for a ratings remove post. See also ITraktSyncRatingsPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public interface ITraktSyncRatingsRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponse.html",
    "title": "Class TraktSyncRatingsPostResponse | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponse Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll Represents the response for a ratings post. See also ITraktSyncRatingsPost. Contains the number of added and not found movies, shows, seasons and episodes. public class TraktSyncRatingsPostResponse : ITraktSyncRatingsPostResponse Inheritance object TraktSyncRatingsPostResponse Implements ITraktSyncRatingsPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncRatingsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncRatingsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundEpisode.html",
    "title": "Class TraktSyncRatingsPostResponseNotFoundEpisode | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponseNotFoundEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt episode, which was not found. public class TraktSyncRatingsPostResponseNotFoundEpisode : ITraktSyncRatingsPostResponseNotFoundEpisode Inheritance object TraktSyncRatingsPostResponseNotFoundEpisode Implements ITraktSyncRatingsPostResponseNotFoundEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found episode. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Rating Gets or sets the rating of the not found episode. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundGroup.html",
    "title": "Class TraktSyncRatingsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A collection containing the ids of rated movies, shows, seasons and episodes, which were not found. public class TraktSyncRatingsPostResponseNotFoundGroup : ITraktSyncRatingsPostResponseNotFoundGroup Inheritance object TraktSyncRatingsPostResponseNotFoundGroup Implements ITraktSyncRatingsPostResponseNotFoundGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes A list of ITraktSyncRatingsPostResponseNotFoundEpisode, containing the ids of rated episodes, which were not found. Nullable public IList<ITraktSyncRatingsPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundEpisode> Movies A list of ITraktSyncRatingsPostResponseNotFoundMovie, containing the ids of rated movies, which were not found. Nullable public IList<ITraktSyncRatingsPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundMovie> Seasons A list of ITraktSyncRatingsPostResponseNotFoundSeason, containing the ids of rated seasons, which were not found. Nullable public IList<ITraktSyncRatingsPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundSeason> Shows A list of ITraktSyncRatingsPostResponseNotFoundShow, containing the ids of rated shows, which were not found. Nullable public IList<ITraktSyncRatingsPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktSyncRatingsPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundMovie.html",
    "title": "Class TraktSyncRatingsPostResponseNotFoundMovie | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponseNotFoundMovie Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt movie, which was not found. public class TraktSyncRatingsPostResponseNotFoundMovie : ITraktSyncRatingsPostResponseNotFoundMovie Inheritance object TraktSyncRatingsPostResponseNotFoundMovie Implements ITraktSyncRatingsPostResponseNotFoundMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found movie. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Rating Gets or sets the rating of the not found movie. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundSeason.html",
    "title": "Class TraktSyncRatingsPostResponseNotFoundSeason | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponseNotFoundSeason Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt season, which was not found. public class TraktSyncRatingsPostResponseNotFoundSeason : ITraktSyncRatingsPostResponseNotFoundSeason Inheritance object TraktSyncRatingsPostResponseNotFoundSeason Implements ITraktSyncRatingsPostResponseNotFoundSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found season. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Rating Gets or sets the rating of the not found season. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsPostResponseNotFoundShow.html",
    "title": "Class TraktSyncRatingsPostResponseNotFoundShow | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostResponseNotFoundShow Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll A rated Trakt show, which was not found. public class TraktSyncRatingsPostResponseNotFoundShow : ITraktSyncRatingsPostResponseNotFoundShow Inheritance object TraktSyncRatingsPostResponseNotFoundShow Implements ITraktSyncRatingsPostResponseNotFoundShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the ids of the not found show. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Rating Gets or sets the rating of the not found show. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.TraktSyncRatingsRemovePostResponse.html",
    "title": "Class TraktSyncRatingsRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktSyncRatingsRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Assembly Trakt.NET.dll Represents the response for a ratings remove post. See also ITraktSyncRatingsPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public class TraktSyncRatingsRemovePostResponse : ITraktSyncRatingsRemovePostResponse Inheritance object TraktSyncRatingsRemovePostResponse Implements ITraktSyncRatingsRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Ratings.Responses Classes TraktSyncRatingsPostResponse Represents the response for a ratings post. See also ITraktSyncRatingsPost. Contains the number of added and not found movies, shows, seasons and episodes. TraktSyncRatingsPostResponseNotFoundEpisode A rated Trakt episode, which was not found. TraktSyncRatingsPostResponseNotFoundGroup A collection containing the ids of rated movies, shows, seasons and episodes, which were not found. TraktSyncRatingsPostResponseNotFoundMovie A rated Trakt movie, which was not found. TraktSyncRatingsPostResponseNotFoundSeason A rated Trakt season, which was not found. TraktSyncRatingsPostResponseNotFoundShow A rated Trakt show, which was not found. TraktSyncRatingsRemovePostResponse Represents the response for a ratings remove post. See also ITraktSyncRatingsPost. Contains the number of deleted and not found movies, shows, seasons and episodes. Interfaces ITraktSyncRatingsPostResponse Represents the response for a ratings post. See also ITraktSyncRatingsPost. Contains the number of added and not found movies, shows, seasons and episodes. ITraktSyncRatingsPostResponseNotFoundEpisode A rated Trakt episode, which was not found. ITraktSyncRatingsPostResponseNotFoundGroup A collection containing the ids of rated movies, shows, seasons and episodes, which were not found. ITraktSyncRatingsPostResponseNotFoundMovie A rated Trakt movie, which was not found. ITraktSyncRatingsPostResponseNotFoundSeason A rated Trakt season, which was not found. ITraktSyncRatingsPostResponseNotFoundShow A rated Trakt show, which was not found. ITraktSyncRatingsRemovePostResponse Represents the response for a ratings remove post. See also ITraktSyncRatingsPost. Contains the number of deleted and not found movies, shows, seasons and episodes."
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPost.html",
    "title": "Class TraktSyncRatingsPost | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPost Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post, containing all movies, shows, seasons and / or episodes, which should be added to the user's ratings. public class TraktSyncRatingsPost : ITraktSyncRatingsPost Inheritance object TraktSyncRatingsPost Implements ITraktSyncRatingsPost Derived TraktSyncRatingsRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncRatingsPostEpisodes. Each ITraktSyncRatingsPostEpisode must have at least a valid Trakt id. public IList<ITraktSyncRatingsPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostEpisode> Movies An optional list of ITraktSyncRatingsPostMovies. Each ITraktSyncRatingsPostMovie must have at least a valid Trakt id. public IList<ITraktSyncRatingsPostMovie> Movies { get; set; } Property Value IList<ITraktSyncRatingsPostMovie> Seasons An optional list of ITraktSyncRatingsPostSeasons. Each ITraktSyncRatingsPostSeason must have at least a valid Trakt id. public IList<ITraktSyncRatingsPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostSeason> Shows An optional list of ITraktSyncRatingsPostShows. Each ITraktSyncRatingsPostShow must have at least a valid Trakt id. public IList<ITraktSyncRatingsPostShow> Shows { get; set; } Property Value IList<ITraktSyncRatingsPostShow> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostEpisode.html",
    "title": "Class TraktSyncRatingsPostEpisode | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post episode, containing the required episode ids, a rating and an optional datetime, when the episode was rated. public class TraktSyncRatingsPostEpisode : ITraktSyncRatingsPostEpisode Inheritance object TraktSyncRatingsPostEpisode Implements ITraktSyncRatingsPostEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds RatedAt Gets or sets the optional UTC datetime, when the Trakt episode was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the episode. public int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostMovie.html",
    "title": "Class TraktSyncRatingsPostMovie | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostMovie Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post movie, containing the required movie ids, a rating and an optional datetime, when the movie was rated. public class TraktSyncRatingsPostMovie : ITraktSyncRatingsPostMovie Inheritance object TraktSyncRatingsPostMovie Implements ITraktSyncRatingsPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds RatedAt Gets or sets the optional UTC datetime, when the Trakt movie was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the movie. public int Rating { get; set; } Property Value int Title Gets or sets the optional title of the Trakt movie. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostSeason.html",
    "title": "Class TraktSyncRatingsPostSeason | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostSeason Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post season, containing the required season ids, a rating and an optional datetime, when the season was rated. public class TraktSyncRatingsPostSeason : ITraktSyncRatingsPostSeason Inheritance object TraktSyncRatingsPostSeason Implements ITraktSyncRatingsPostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds RatedAt Gets or sets the optional UTC datetime, when the Trakt season was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the season. public int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShow.html",
    "title": "Class TraktSyncRatingsPostShow | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostShow Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post show, containing the required show ids, a rating and an optional datetime, when the show was rated. Can also contain optional seasons. public class TraktSyncRatingsPostShow : ITraktSyncRatingsPostShow Inheritance object TraktSyncRatingsPostShow Implements ITraktSyncRatingsPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds RatedAt Gets or sets the optional UTC datetime, when the Trakt show was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the show. public int? Rating { get; set; } Property Value int? Seasons An optional list of ITraktSyncRatingsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the ratings. Otherwise, only the specified seasons and / or episodes will be added to the ratings. public IList<ITraktSyncRatingsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncRatingsPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowEpisode.html",
    "title": "Class TraktSyncRatingsPostShowEpisode | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post episode, containing the required episode number, a rating and an optional datetime, when the episode was rated. public class TraktSyncRatingsPostShowEpisode : ITraktSyncRatingsPostShowEpisode Inheritance object TraktSyncRatingsPostShowEpisode Implements ITraktSyncRatingsPostShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Number Gets or sets the required season number of the Trakt episode. public int Number { get; set; } Property Value int RatedAt Gets or sets the optional UTC datetime, when the Trakt episode was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the episode. public int Rating { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsPostShowSeason.html",
    "title": "Class TraktSyncRatingsPostShowSeason | Trakt.NET",
    "keywords": "Class TraktSyncRatingsPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings post season, containing the required season number and optional episodes, a rating and an optional datetime, when the season was rated. public class TraktSyncRatingsPostShowSeason : ITraktSyncRatingsPostShowSeason Inheritance object TraktSyncRatingsPostShowSeason Implements ITraktSyncRatingsPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncRatingsPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the ratings. Otherwise, only the specified episodes will be added to the ratings. public IList<ITraktSyncRatingsPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncRatingsPostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int RatedAt Gets or sets the optional UTC datetime, when the Trakt season was rated. public DateTime? RatedAt { get; set; } Property Value DateTime? Rating Gets or sets the rating for the season. public int? Rating { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.TraktSyncRatingsRemovePost.html",
    "title": "Class TraktSyncRatingsRemovePost | Trakt.NET",
    "keywords": "Class TraktSyncRatingsRemovePost Namespace TraktNet.Objects.Post.Syncs.Ratings Assembly Trakt.NET.dll A Trakt ratings remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's ratings. public class TraktSyncRatingsRemovePost : TraktSyncRatingsPost, ITraktSyncRatingsRemovePost, ITraktSyncRatingsPost Inheritance object TraktSyncRatingsPost TraktSyncRatingsRemovePost Implements ITraktSyncRatingsRemovePost ITraktSyncRatingsPost Inherited Members TraktSyncRatingsPost.Movies TraktSyncRatingsPost.Shows TraktSyncRatingsPost.Seasons TraktSyncRatingsPost.Episodes TraktSyncRatingsPost.ToJson(CancellationToken) TraktSyncRatingsPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Syncs.Ratings.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Ratings.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Ratings | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Ratings Classes TraktSyncRatingsPost A Trakt ratings post, containing all movies, shows, seasons and / or episodes, which should be added to the user's ratings. TraktSyncRatingsPostEpisode A Trakt ratings post episode, containing the required episode ids, a rating and an optional datetime, when the episode was rated. TraktSyncRatingsPostMovie A Trakt ratings post movie, containing the required movie ids, a rating and an optional datetime, when the movie was rated. TraktSyncRatingsPostSeason A Trakt ratings post season, containing the required season ids, a rating and an optional datetime, when the season was rated. TraktSyncRatingsPostShow A Trakt ratings post show, containing the required show ids, a rating and an optional datetime, when the show was rated. Can also contain optional seasons. TraktSyncRatingsPostShowEpisode A Trakt ratings post episode, containing the required episode number, a rating and an optional datetime, when the episode was rated. TraktSyncRatingsPostShowSeason A Trakt ratings post season, containing the required season number and optional episodes, a rating and an optional datetime, when the season was rated. TraktSyncRatingsRemovePost A Trakt ratings remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's ratings. Interfaces ITraktSyncRatingsPost A Trakt ratings post, containing all movies, shows, seasons and / or episodes, which should be added to the user's ratings. ITraktSyncRatingsPostEpisode A Trakt ratings post episode, containing the required episode ids, a rating and an optional datetime, when the episode was rated. ITraktSyncRatingsPostMovie A Trakt ratings post movie, containing the required movie ids, a rating and an optional datetime, when the movie was rated. ITraktSyncRatingsPostSeason A Trakt ratings post season, containing the required season ids, a rating and an optional datetime, when the season was rated. ITraktSyncRatingsPostShow A Trakt ratings post show, containing the required show ids, a rating and an optional datetime, when the show was rated. Can also contain optional seasons. ITraktSyncRatingsPostShowEpisode A Trakt ratings post episode, containing the required episode number, a rating and an optional datetime, when the episode was rated. ITraktSyncRatingsPostShowSeason A Trakt ratings post season, containing the required season number and optional episodes, a rating and an optional datetime, when the season was rated. ITraktSyncRatingsRemovePost A Trakt ratings remove post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's ratings."
  },
  "api/TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseGroup.html",
    "title": "Interface ITraktSyncPostResponseGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncPostResponseGroup Namespace TraktNet.Objects.Post.Syncs.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons and episodes. public interface ITraktSyncPostResponseGroup Properties Episodes Gets or sets the number of episodes. int? Episodes { get; set; } Property Value int? Movies Gets or sets the number of movies. int? Movies { get; set; } Property Value int? Seasons Gets or sets the number of seasons. int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Responses.ITraktSyncPostResponseNotFoundGroup.html",
    "title": "Interface ITraktSyncPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktSyncPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons and episodes, which were not found. public interface ITraktSyncPostResponseNotFoundGroup Properties Episodes A list of ITraktPostResponseNotFoundEpisode, containing the ids of episodes, which were not found. Nullable IList<ITraktPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktPostResponseNotFoundEpisode> Movies A list of ITraktPostResponseNotFoundMovie, containing the ids of movies, which were not found. Nullable IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> Seasons A list of ITraktPostResponseNotFoundSeason, containing the ids of seasons, which were not found. Nullable IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShow, containing the ids of shows, which were not found. Nullable IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseGroup.html",
    "title": "Class TraktSyncPostResponseGroup | Trakt.NET",
    "keywords": "Class TraktSyncPostResponseGroup Namespace TraktNet.Objects.Post.Syncs.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons and episodes. public class TraktSyncPostResponseGroup : ITraktSyncPostResponseGroup Inheritance object TraktSyncPostResponseGroup Implements ITraktSyncPostResponseGroup Derived TraktSyncHistoryRemovePostResponseGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets the number of episodes. public int? Episodes { get; set; } Property Value int? Movies Gets or sets the number of movies. public int? Movies { get; set; } Property Value int? Seasons Gets or sets the number of seasons. public int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. public int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Responses.TraktSyncPostResponseNotFoundGroup.html",
    "title": "Class TraktSyncPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktSyncPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Syncs.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons and episodes, which were not found. public class TraktSyncPostResponseNotFoundGroup : ITraktSyncPostResponseNotFoundGroup Inheritance object TraktSyncPostResponseNotFoundGroup Implements ITraktSyncPostResponseNotFoundGroup Derived TraktSyncHistoryRemovePostResponseNotFoundGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes A list of ITraktPostResponseNotFoundEpisode, containing the ids of episodes, which were not found. Nullable public IList<ITraktPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktPostResponseNotFoundEpisode> Movies A list of ITraktPostResponseNotFoundMovie, containing the ids of movies, which were not found. Nullable public IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> Seasons A list of ITraktPostResponseNotFoundSeason, containing the ids of seasons, which were not found. Nullable public IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShow, containing the ids of shows, which were not found. Nullable public IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Responses Classes TraktSyncPostResponseGroup A collection containing the number of movies, shows, seasons and episodes. TraktSyncPostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons and episodes, which were not found. Interfaces ITraktSyncPostResponseGroup A collection containing the number of movies, shows, seasons and episodes. ITraktSyncPostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons and episodes, which were not found."
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPost.html",
    "title": "Interface ITraktSyncWatchlistPost | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPost Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be added to the user's watchlist. public interface ITraktSyncWatchlistPost Properties Episodes An optional list of ITraktSyncWatchlistPostEpisodes. Each ITraktSyncWatchlistPostEpisode must have at least a valid Trakt id. IList<ITraktSyncWatchlistPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncWatchlistPostEpisode> Movies An optional list of ITraktSyncWatchlistPostMovies. Each ITraktSyncWatchlistPostMovie must have at least a valid Trakt id. IList<ITraktSyncWatchlistPostMovie> Movies { get; set; } Property Value IList<ITraktSyncWatchlistPostMovie> Seasons An optional list of ITraktSyncWatchlistPostSeasons. Each ITraktSyncWatchlistPostSeason must have at least a valid Trakt id. IList<ITraktSyncWatchlistPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncWatchlistPostSeason> Shows An optional list of ITraktSyncWatchlistPostShows. Each ITraktSyncWatchlistPostShow must have at least a valid Trakt id. IList<ITraktSyncWatchlistPostShow> Shows { get; set; } Property Value IList<ITraktSyncWatchlistPostShow>"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostEpisode.html",
    "title": "Interface ITraktSyncWatchlistPostEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostEpisode Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post episode, containing the required episode ids. public interface ITraktSyncWatchlistPostEpisode Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Notes Gets or sets the episode notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostMovie.html",
    "title": "Interface ITraktSyncWatchlistPostMovie | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostMovie Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post movie, containing the required movie ids. public interface ITraktSyncWatchlistPostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the movie notes. string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt movie. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostSeason.html",
    "title": "Interface ITraktSyncWatchlistPostSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostSeason Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post season, containing the required season ids. public interface ITraktSyncWatchlistPostSeason Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Notes Gets or sets the season notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShow.html",
    "title": "Interface ITraktSyncWatchlistPostShow | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostShow Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post show, containing the required show ids. Can also contain optional seasons. public interface ITraktSyncWatchlistPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the show notes. string Notes { get; set; } Property Value string Seasons An optional list of ITraktSyncWatchlistPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the watchlist. Otherwise, only the specified seasons and / or episodes will be added to the watchlist. IList<ITraktSyncWatchlistPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncWatchlistPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowEpisode.html",
    "title": "Interface ITraktSyncWatchlistPostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post episode, containing the required episode number. public interface ITraktSyncWatchlistPostShowEpisode Properties Number Gets or sets the required season number of the Trakt episode. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistPostShowSeason.html",
    "title": "Interface ITraktSyncWatchlistPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post season, containing the required season number and optional episodes. public interface ITraktSyncWatchlistPostShowSeason Properties Episodes An optional list of ITraktSyncWatchlistPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the watchlist. Otherwise, only the specified episodes will be added to the watchlist. IList<ITraktSyncWatchlistPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncWatchlistPostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.ITraktSyncWatchlistRemovePost.html",
    "title": "Interface ITraktSyncWatchlistRemovePost | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistRemovePost Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's watchlist. public interface ITraktSyncWatchlistRemovePost : ITraktSyncWatchlistPost Inherited Members ITraktSyncWatchlistPost.Movies ITraktSyncWatchlistPost.Shows ITraktSyncWatchlistPost.Seasons ITraktSyncWatchlistPost.Episodes"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistPostResponse.html",
    "title": "Interface ITraktSyncWatchlistPostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostResponse Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses Assembly Trakt.NET.dll Represents the response for a watchlist post. See also ITraktSyncWatchlistPost. Contains the number of added, existing and not found movies, shows, seasons and episodes. public interface ITraktSyncWatchlistPostResponse Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Existing { get; set; } Property Value ITraktSyncPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.ITraktSyncWatchlistRemovePostResponse.html",
    "title": "Interface ITraktSyncWatchlistRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses Assembly Trakt.NET.dll Represents the response for a watchlist remove post. See also ITraktSyncWatchlistPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public interface ITraktSyncWatchlistRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistPostResponse.html",
    "title": "Class TraktSyncWatchlistPostResponse | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostResponse Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses Assembly Trakt.NET.dll Represents the response for a watchlist post. See also ITraktSyncWatchlistPost. Contains the number of added, existing and not found movies, shows, seasons and episodes. public class TraktSyncWatchlistPostResponse : ITraktSyncWatchlistPostResponse Inheritance object TraktSyncWatchlistPostResponse Implements ITraktSyncWatchlistPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Added { get; set; } Property Value ITraktSyncPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Existing { get; set; } Property Value ITraktSyncPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.TraktSyncWatchlistRemovePostResponse.html",
    "title": "Class TraktSyncWatchlistRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistRemovePostResponse Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses Assembly Trakt.NET.dll Represents the response for a watchlist remove post. See also ITraktSyncWatchlistPost. Contains the number of deleted and not found movies, shows, seasons and episodes. public class TraktSyncWatchlistRemovePostResponse : ITraktSyncWatchlistRemovePostResponse Inheritance object TraktSyncWatchlistRemovePostResponse Implements ITraktSyncWatchlistRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows, seasons and episodes. Nullable public ITraktSyncPostResponseGroup Deleted { get; set; } Property Value ITraktSyncPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons and episodes, which were not found. Nullable public ITraktSyncPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktSyncPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Watchlist.Responses Classes TraktSyncWatchlistPostResponse Represents the response for a watchlist post. See also ITraktSyncWatchlistPost. Contains the number of added, existing and not found movies, shows, seasons and episodes. TraktSyncWatchlistRemovePostResponse Represents the response for a watchlist remove post. See also ITraktSyncWatchlistPost. Contains the number of deleted and not found movies, shows, seasons and episodes. Interfaces ITraktSyncWatchlistPostResponse Represents the response for a watchlist post. See also ITraktSyncWatchlistPost. Contains the number of added, existing and not found movies, shows, seasons and episodes. ITraktSyncWatchlistRemovePostResponse Represents the response for a watchlist remove post. See also ITraktSyncWatchlistPost. Contains the number of deleted and not found movies, shows, seasons and episodes."
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPost.html",
    "title": "Class TraktSyncWatchlistPost | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPost Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be added to the user's watchlist. public class TraktSyncWatchlistPost : ITraktSyncWatchlistPost Inheritance object TraktSyncWatchlistPost Implements ITraktSyncWatchlistPost Derived TraktSyncWatchlistRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncWatchlistPostEpisodes. Each ITraktSyncWatchlistPostEpisode must have at least a valid Trakt id. public IList<ITraktSyncWatchlistPostEpisode> Episodes { get; set; } Property Value IList<ITraktSyncWatchlistPostEpisode> Movies An optional list of ITraktSyncWatchlistPostMovies. Each ITraktSyncWatchlistPostMovie must have at least a valid Trakt id. public IList<ITraktSyncWatchlistPostMovie> Movies { get; set; } Property Value IList<ITraktSyncWatchlistPostMovie> Seasons An optional list of ITraktSyncWatchlistPostSeasons. Each ITraktSyncWatchlistPostSeason must have at least a valid Trakt id. public IList<ITraktSyncWatchlistPostSeason> Seasons { get; set; } Property Value IList<ITraktSyncWatchlistPostSeason> Shows An optional list of ITraktSyncWatchlistPostShows. Each ITraktSyncWatchlistPostShow must have at least a valid Trakt id. public IList<ITraktSyncWatchlistPostShow> Shows { get; set; } Property Value IList<ITraktSyncWatchlistPostShow> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostEpisode.html",
    "title": "Class TraktSyncWatchlistPostEpisode | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostEpisode Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post episode, containing the required episode ids. public class TraktSyncWatchlistPostEpisode : ITraktSyncWatchlistPostEpisode Inheritance object TraktSyncWatchlistPostEpisode Implements ITraktSyncWatchlistPostEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Notes Gets or sets the episode notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostMovie.html",
    "title": "Class TraktSyncWatchlistPostMovie | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostMovie Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post movie, containing the required movie ids. public class TraktSyncWatchlistPostMovie : ITraktSyncWatchlistPostMovie Inheritance object TraktSyncWatchlistPostMovie Implements ITraktSyncWatchlistPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the movie notes. public string Notes { get; set; } Property Value string Title Gets or sets the optional title of the Trakt movie. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt movie. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostSeason.html",
    "title": "Class TraktSyncWatchlistPostSeason | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostSeason Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post season, containing the required season ids. public class TraktSyncWatchlistPostSeason : ITraktSyncWatchlistPostSeason Inheritance object TraktSyncWatchlistPostSeason Implements ITraktSyncWatchlistPostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Notes Gets or sets the season notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShow.html",
    "title": "Class TraktSyncWatchlistPostShow | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostShow Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post show, containing the required show ids. Can also contain optional seasons. public class TraktSyncWatchlistPostShow : ITraktSyncWatchlistPostShow Inheritance object TraktSyncWatchlistPostShow Implements ITraktSyncWatchlistPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the show notes. public string Notes { get; set; } Property Value string Seasons An optional list of ITraktSyncWatchlistPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the watchlist. Otherwise, only the specified seasons and / or episodes will be added to the watchlist. public IList<ITraktSyncWatchlistPostShowSeason> Seasons { get; set; } Property Value IList<ITraktSyncWatchlistPostShowSeason> Title Gets or sets the optional title of the Trakt show. Nullable public string Title { get; set; } Property Value string Year Gets or sets the optional year of the Trakt show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowEpisode.html",
    "title": "Class TraktSyncWatchlistPostShowEpisode | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostShowEpisode Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post episode, containing the required episode number. public class TraktSyncWatchlistPostShowEpisode : ITraktSyncWatchlistPostShowEpisode Inheritance object TraktSyncWatchlistPostShowEpisode Implements ITraktSyncWatchlistPostShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Number Gets or sets the required season number of the Trakt episode. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistPostShowSeason.html",
    "title": "Class TraktSyncWatchlistPostShowSeason | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistPostShowSeason Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post season, containing the required season number and optional episodes. public class TraktSyncWatchlistPostShowSeason : ITraktSyncWatchlistPostShowSeason Inheritance object TraktSyncWatchlistPostShowSeason Implements ITraktSyncWatchlistPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktSyncWatchlistPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the watchlist. Otherwise, only the specified episodes will be added to the watchlist. public IList<ITraktSyncWatchlistPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktSyncWatchlistPostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.TraktSyncWatchlistRemovePost.html",
    "title": "Class TraktSyncWatchlistRemovePost | Trakt.NET",
    "keywords": "Class TraktSyncWatchlistRemovePost Namespace TraktNet.Objects.Post.Syncs.Watchlist Assembly Trakt.NET.dll A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's watchlist. public class TraktSyncWatchlistRemovePost : TraktSyncWatchlistPost, ITraktSyncWatchlistRemovePost, ITraktSyncWatchlistPost Inheritance object TraktSyncWatchlistPost TraktSyncWatchlistRemovePost Implements ITraktSyncWatchlistRemovePost ITraktSyncWatchlistPost Inherited Members TraktSyncWatchlistPost.Movies TraktSyncWatchlistPost.Shows TraktSyncWatchlistPost.Seasons TraktSyncWatchlistPost.Episodes TraktSyncWatchlistPost.ToJson(CancellationToken) TraktSyncWatchlistPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Syncs.Watchlist.html": {
    "href": "api/TraktNet.Objects.Post.Syncs.Watchlist.html",
    "title": "Namespace TraktNet.Objects.Post.Syncs.Watchlist | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Syncs.Watchlist Classes TraktSyncWatchlistPost A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be added to the user's watchlist. TraktSyncWatchlistPostEpisode A Trakt watchlist post episode, containing the required episode ids. TraktSyncWatchlistPostMovie A Trakt watchlist post movie, containing the required movie ids. TraktSyncWatchlistPostSeason A Trakt watchlist post season, containing the required season ids. TraktSyncWatchlistPostShow A Trakt watchlist post show, containing the required show ids. Can also contain optional seasons. TraktSyncWatchlistPostShowEpisode A Trakt watchlist post episode, containing the required episode number. TraktSyncWatchlistPostShowSeason A Trakt watchlist post season, containing the required season number and optional episodes. TraktSyncWatchlistRemovePost A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's watchlist. Interfaces ITraktSyncWatchlistPost A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be added to the user's watchlist. ITraktSyncWatchlistPostEpisode A Trakt watchlist post episode, containing the required episode ids. ITraktSyncWatchlistPostMovie A Trakt watchlist post movie, containing the required movie ids. ITraktSyncWatchlistPostSeason A Trakt watchlist post season, containing the required season ids. ITraktSyncWatchlistPostShow A Trakt watchlist post show, containing the required show ids. Can also contain optional seasons. ITraktSyncWatchlistPostShowEpisode A Trakt watchlist post episode, containing the required episode number. ITraktSyncWatchlistPostShowSeason A Trakt watchlist post season, containing the required season number and optional episodes. ITraktSyncWatchlistRemovePost A Trakt watchlist post, containing all movies, shows, seasons and / or episodes, which should be removed from the user's watchlist."
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPost.html",
    "title": "Interface ITraktUserHiddenItemsPost | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPost Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post, containing all movies, shows, seasons and / or users, which should be added to an user's hidden items list. public interface ITraktUserHiddenItemsPost Properties Movies An optional list of ITraktUserHiddenItemsPostMovies. Each ITraktUserHiddenItemsPostMovie must have at least a valid Trakt id. IList<ITraktUserHiddenItemsPostMovie> Movies { get; set; } Property Value IList<ITraktUserHiddenItemsPostMovie> Seasons An optional list of ITraktUserHiddenItemsPostSeasons. Each ITraktUserHiddenItemsPostSeason must have at least a valid Trakt id and a name. IList<ITraktUserHiddenItemsPostSeason> Seasons { get; set; } Property Value IList<ITraktUserHiddenItemsPostSeason> Shows An optional list of ITraktUserHiddenItemsPostShows. Each ITraktUserHiddenItemsPostShow must have at least a valid Trakt id. IList<ITraktUserHiddenItemsPostShow> Shows { get; set; } Property Value IList<ITraktUserHiddenItemsPostShow> Users An optional list of ITraktUsers. IList<ITraktUser> Users { get; set; } Property Value IList<ITraktUser>"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostMovie.html",
    "title": "Interface ITraktUserHiddenItemsPostMovie | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostMovie Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post movie, containing the required movie ids. public interface ITraktUserHiddenItemsPostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the movie title. string Title { get; set; } Property Value string Year Gets or sets the movie year. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostSeason.html",
    "title": "Interface ITraktUserHiddenItemsPostSeason | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostSeason Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post season, containing the required season ids. public interface ITraktUserHiddenItemsPostSeason Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShow.html",
    "title": "Interface ITraktUserHiddenItemsPostShow | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostShow Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post show, containing the required show ids. Can also contain optional seasons. public interface ITraktUserHiddenItemsPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktUserHiddenItemsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the hidden items list. Otherwise, only the specified seasons will be added to the hidden items list. IList<ITraktUserHiddenItemsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktUserHiddenItemsPostShowSeason> Title Gets or sets the title of the show. string Title { get; set; } Property Value string Year Gets or sets the year of the show. int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsPostShowSeason.html",
    "title": "Interface ITraktUserHiddenItemsPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostShowSeason Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post season, containing the required season number. public interface ITraktUserHiddenItemsPostShowSeason Properties Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.ITraktUserHiddenItemsRemovePost.html",
    "title": "Interface ITraktUserHiddenItemsRemovePost | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsRemovePost Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post, containing all movies, shows, seasons and / or users, which should be remove from an user's hidden items list. public interface ITraktUserHiddenItemsRemovePost : ITraktUserHiddenItemsPost Inherited Members ITraktUserHiddenItemsPost.Movies ITraktUserHiddenItemsPost.Shows ITraktUserHiddenItemsPost.Seasons ITraktUserHiddenItemsPost.Users"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponse.html",
    "title": "Interface ITraktUserHiddenItemsPostResponse | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostResponse Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll Represents the response for an user hidden items post. See also ITraktUserHiddenItemsPost. Contains the number of added and not found movies, shows and seasons. public interface ITraktUserHiddenItemsPostResponse Properties Added A collection containing the number of added movies, shows and seasons. Nullable ITraktUserHiddenItemsPostResponseGroup Added { get; set; } Property Value ITraktUserHiddenItemsPostResponseGroup NotFound A collection containing the ids of movies, shows and seasons, which were not found. Nullable ITraktUserHiddenItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserHiddenItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseGroup.html",
    "title": "Interface ITraktUserHiddenItemsPostResponseGroup | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostResponseGroup Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows and seasons. public interface ITraktUserHiddenItemsPostResponseGroup Properties Movies Gets or sets the number of movies. int? Movies { get; set; } Property Value int? Seasons Gets or sets the number of seasons. int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. int? Shows { get; set; } Property Value int? Users Gets or sets the number of users. int? Users { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsPostResponseNotFoundGroup.html",
    "title": "Interface ITraktUserHiddenItemsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows and seasons, which were not found. public interface ITraktUserHiddenItemsPostResponseNotFoundGroup Properties Movies A list of ITraktPostResponseNotFoundMovies, containing the ids of movies, which were not found. Nullable IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> Seasons A list of ITraktPostResponseNotFoundSeasons, containing the ids of seasons, which were not found. Nullable IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShows, containing the ids of shows, which were not found. Nullable IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow> Users A list of ITraktUsers, containing users, which were not found. Nullable IList<ITraktUser> Users { get; set; } Property Value IList<ITraktUser>"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.ITraktUserHiddenItemsRemovePostResponse.html",
    "title": "Interface ITraktUserHiddenItemsRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsRemovePostResponse Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll Represents the response for an user hidden items remove post. See also ITraktUserHiddenItemsPost. Contains the number of deleted and not found movies, shows and seasons. public interface ITraktUserHiddenItemsRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows and seasons. Nullable ITraktUserHiddenItemsPostResponseGroup Deleted { get; set; } Property Value ITraktUserHiddenItemsPostResponseGroup NotFound A collection containing the ids of movies, shows and seasons, which were not found. Nullable ITraktUserHiddenItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserHiddenItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponse.html",
    "title": "Class TraktUserHiddenItemsPostResponse | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostResponse Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll Represents the response for an user hidden items post. See also ITraktUserHiddenItemsPost. Contains the number of added and not found movies, shows and seasons. public class TraktUserHiddenItemsPostResponse : ITraktUserHiddenItemsPostResponse Inheritance object TraktUserHiddenItemsPostResponse Implements ITraktUserHiddenItemsPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows and seasons. Nullable public ITraktUserHiddenItemsPostResponseGroup Added { get; set; } Property Value ITraktUserHiddenItemsPostResponseGroup NotFound A collection containing the ids of movies, shows and seasons, which were not found. Nullable public ITraktUserHiddenItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserHiddenItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseGroup.html",
    "title": "Class TraktUserHiddenItemsPostResponseGroup | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostResponseGroup Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows and seasons. public class TraktUserHiddenItemsPostResponseGroup : ITraktUserHiddenItemsPostResponseGroup Inheritance object TraktUserHiddenItemsPostResponseGroup Implements ITraktUserHiddenItemsPostResponseGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies Gets or sets the number of movies. public int? Movies { get; set; } Property Value int? Seasons Gets or sets the number of seasons. public int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. public int? Shows { get; set; } Property Value int? Users Gets or sets the number of users. public int? Users { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsPostResponseNotFoundGroup.html",
    "title": "Class TraktUserHiddenItemsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows and seasons, which were not found. public class TraktUserHiddenItemsPostResponseNotFoundGroup : ITraktUserHiddenItemsPostResponseNotFoundGroup Inheritance object TraktUserHiddenItemsPostResponseNotFoundGroup Implements ITraktUserHiddenItemsPostResponseNotFoundGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies A list of ITraktPostResponseNotFoundMovie, containing the ids of movies, which were not found. Nullable public IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> Seasons A list of ITraktPostResponseNotFoundSeason, containing the ids of seasons, which were not found. Nullable public IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShow, containing the ids of shows, which were not found. Nullable public IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow> Users A list of ITraktUsers, containing users, which were not found. Nullable public IList<ITraktUser> Users { get; set; } Property Value IList<ITraktUser>"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.TraktUserHiddenItemsRemovePostResponse.html",
    "title": "Class TraktUserHiddenItemsRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsRemovePostResponse Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Assembly Trakt.NET.dll Represents the response for an user hidden items remove post. See also ITraktUserHiddenItemsPost. Contains the number of deleted and not found movies, shows and seasons. public class TraktUserHiddenItemsRemovePostResponse : ITraktUserHiddenItemsRemovePostResponse Inheritance object TraktUserHiddenItemsRemovePostResponse Implements ITraktUserHiddenItemsRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows and seasons. Nullable public ITraktUserHiddenItemsPostResponseGroup Deleted { get; set; } Property Value ITraktUserHiddenItemsPostResponseGroup NotFound A collection containing the ids of movies, shows and seasons, which were not found. Nullable public ITraktUserHiddenItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserHiddenItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users.HiddenItems.Responses Classes TraktUserHiddenItemsPostResponse Represents the response for an user hidden items post. See also ITraktUserHiddenItemsPost. Contains the number of added and not found movies, shows and seasons. TraktUserHiddenItemsPostResponseGroup A collection containing the number of movies, shows and seasons. TraktUserHiddenItemsPostResponseNotFoundGroup A collection containing the ids of movies, shows and seasons, which were not found. TraktUserHiddenItemsRemovePostResponse Represents the response for an user hidden items remove post. See also ITraktUserHiddenItemsPost. Contains the number of deleted and not found movies, shows and seasons. Interfaces ITraktUserHiddenItemsPostResponse Represents the response for an user hidden items post. See also ITraktUserHiddenItemsPost. Contains the number of added and not found movies, shows and seasons. ITraktUserHiddenItemsPostResponseGroup A collection containing the number of movies, shows and seasons. ITraktUserHiddenItemsPostResponseNotFoundGroup A collection containing the ids of movies, shows and seasons, which were not found. ITraktUserHiddenItemsRemovePostResponse Represents the response for an user hidden items remove post. See also ITraktUserHiddenItemsPost. Contains the number of deleted and not found movies, shows and seasons."
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPost.html",
    "title": "Class TraktUserHiddenItemsPost | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPost Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post, containing all movies, shows, seasons and / or users, which should be added to an user's hidden items list. public class TraktUserHiddenItemsPost : ITraktUserHiddenItemsPost Inheritance object TraktUserHiddenItemsPost Implements ITraktUserHiddenItemsPost Derived TraktUserHiddenItemsRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Movies An optional list of ITraktUserHiddenItemsPostMovies. Each ITraktUserHiddenItemsPostMovie must have at least a valid Trakt id. public IList<ITraktUserHiddenItemsPostMovie> Movies { get; set; } Property Value IList<ITraktUserHiddenItemsPostMovie> Seasons An optional list of ITraktUserHiddenItemsPostSeasons. Each ITraktUserHiddenItemsPostSeason must have at least a valid Trakt id and a name. public IList<ITraktUserHiddenItemsPostSeason> Seasons { get; set; } Property Value IList<ITraktUserHiddenItemsPostSeason> Shows An optional list of ITraktUserHiddenItemsPostShows. Each ITraktUserHiddenItemsPostShow must have at least a valid Trakt id. public IList<ITraktUserHiddenItemsPostShow> Shows { get; set; } Property Value IList<ITraktUserHiddenItemsPostShow> Users An optional list of ITraktUsers. public IList<ITraktUser> Users { get; set; } Property Value IList<ITraktUser> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostMovie.html",
    "title": "Class TraktUserHiddenItemsPostMovie | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostMovie Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post movie, containing the required movie ids. public class TraktUserHiddenItemsPostMovie : ITraktUserHiddenItemsPostMovie Inheritance object TraktUserHiddenItemsPostMovie Implements ITraktUserHiddenItemsPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Title Gets or sets the movie title. public string Title { get; set; } Property Value string Year Gets or sets the movie year. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostSeason.html",
    "title": "Class TraktUserHiddenItemsPostSeason | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostSeason Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post season, containing the required season ids. public class TraktUserHiddenItemsPostSeason : ITraktUserHiddenItemsPostSeason Inheritance object TraktUserHiddenItemsPostSeason Implements ITraktUserHiddenItemsPostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShow.html",
    "title": "Class TraktUserHiddenItemsPostShow | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostShow Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post show, containing the required show ids. Can also contain optional seasons. public class TraktUserHiddenItemsPostShow : ITraktUserHiddenItemsPostShow Inheritance object TraktUserHiddenItemsPostShow Implements ITraktUserHiddenItemsPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Seasons An optional list of ITraktUserHiddenItemsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the hidden items list. Otherwise, only the specified seasons will be added to the hidden items list. public IList<ITraktUserHiddenItemsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktUserHiddenItemsPostShowSeason> Title Gets or sets the title of the show. public string Title { get; set; } Property Value string Year Gets or sets the year of the show. public int? Year { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsPostShowSeason.html",
    "title": "Class TraktUserHiddenItemsPostShowSeason | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsPostShowSeason Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post season, containing the required season number. public class TraktUserHiddenItemsPostShowSeason : ITraktUserHiddenItemsPostShowSeason Inheritance object TraktUserHiddenItemsPostShowSeason Implements ITraktUserHiddenItemsPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.TraktUserHiddenItemsRemovePost.html",
    "title": "Class TraktUserHiddenItemsRemovePost | Trakt.NET",
    "keywords": "Class TraktUserHiddenItemsRemovePost Namespace TraktNet.Objects.Post.Users.HiddenItems Assembly Trakt.NET.dll An user hidden items post, containing all movies, shows, seasons and / or users, which should be remove from an user's hidden items list. public class TraktUserHiddenItemsRemovePost : TraktUserHiddenItemsPost, ITraktUserHiddenItemsRemovePost, ITraktUserHiddenItemsPost Inheritance object TraktUserHiddenItemsPost TraktUserHiddenItemsRemovePost Implements ITraktUserHiddenItemsRemovePost ITraktUserHiddenItemsPost Inherited Members TraktUserHiddenItemsPost.Movies TraktUserHiddenItemsPost.Shows TraktUserHiddenItemsPost.Seasons TraktUserHiddenItemsPost.Users TraktUserHiddenItemsPost.ToJson(CancellationToken) TraktUserHiddenItemsPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Users.HiddenItems.html": {
    "href": "api/TraktNet.Objects.Post.Users.HiddenItems.html",
    "title": "Namespace TraktNet.Objects.Post.Users.HiddenItems | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users.HiddenItems Classes TraktUserHiddenItemsPost An user hidden items post, containing all movies, shows, seasons and / or users, which should be added to an user's hidden items list. TraktUserHiddenItemsPostMovie An user hidden items post movie, containing the required movie ids. TraktUserHiddenItemsPostSeason An user hidden items post season, containing the required season ids. TraktUserHiddenItemsPostShow An user hidden items post show, containing the required show ids. Can also contain optional seasons. TraktUserHiddenItemsPostShowSeason An user hidden items post season, containing the required season number. TraktUserHiddenItemsRemovePost An user hidden items post, containing all movies, shows, seasons and / or users, which should be remove from an user's hidden items list. Interfaces ITraktUserHiddenItemsPost An user hidden items post, containing all movies, shows, seasons and / or users, which should be added to an user's hidden items list. ITraktUserHiddenItemsPostMovie An user hidden items post movie, containing the required movie ids. ITraktUserHiddenItemsPostSeason An user hidden items post season, containing the required season ids. ITraktUserHiddenItemsPostShow An user hidden items post show, containing the required show ids. Can also contain optional seasons. ITraktUserHiddenItemsPostShowSeason An user hidden items post season, containing the required season number. ITraktUserHiddenItemsRemovePost An user hidden items post, containing all movies, shows, seasons and / or users, which should be remove from an user's hidden items list."
  },
  "api/TraktNet.Objects.Post.Users.ITraktUserPersonalListPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.ITraktUserPersonalListPost.html",
    "title": "Interface ITraktUserPersonalListPost | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListPost Namespace TraktNet.Objects.Post.Users Assembly Trakt.NET.dll An episode personal list post. public interface ITraktUserPersonalListPost Properties AllowComments Gets or sets, whether the personal list allows comments. bool? AllowComments { get; set; } Property Value bool? Description Gets or sets the optional description of the personal list. Nullable string Description { get; set; } Property Value string DisplayNumbers Gets or sets, whether the personal list should display numbers. bool? DisplayNumbers { get; set; } Property Value bool? Name Gets or sets the required name of the personal list. string Name { get; set; } Property Value string Privacy Gets or sets the optional privacy setting of the personal list. See also TraktListPrivacy. Nullable TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy SortBy Gets or sets the custom list sort-by setting. See also TraktSortBy. Nullable TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets or sets the custom list sort-how setting. See also TraktSortHow. Nullable TraktSortHow SortHow { get; set; } Property Value TraktSortHow Methods HasAnyValuesSet() Returns whether the post has any values set. bool HasAnyValuesSet() Returns bool"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPost.html",
    "title": "Interface ITraktUserPersonalListItemsPost | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPost Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be added to an user's personal list. public interface ITraktUserPersonalListItemsPost Properties Episodes An optional list of ITraktUserPersonalListItemsPostEpisodes. Each ITraktUserPersonalListItemsPostEpisode must have at least a valid Trakt id. IList<ITraktUserPersonalListItemsPostEpisode> Episodes { get; set; } Property Value IList<ITraktUserPersonalListItemsPostEpisode> Movies An optional list of ITraktUserPersonalListItemsPostMovies. Each ITraktUserPersonalListItemsPostMovie must have at least a valid Trakt id. IList<ITraktUserPersonalListItemsPostMovie> Movies { get; set; } Property Value IList<ITraktUserPersonalListItemsPostMovie> People An optional list of ITraktUserPersonalListItemsPostPersons. Each ITraktUserPersonalListItemsPostPerson must have at least a valid Trakt id and a name. IList<ITraktUserPersonalListItemsPostPerson> People { get; set; } Property Value IList<ITraktUserPersonalListItemsPostPerson> Seasons An optional list of ITraktUserPersonalListItemsPostSeasons. Each ITraktUserPersonalListItemsPostSeason must have at least a valid Trakt id. IList<ITraktUserPersonalListItemsPostSeason> Seasons { get; set; } Property Value IList<ITraktUserPersonalListItemsPostSeason> Shows An optional list of ITraktUserPersonalListItemsPostShows. Each ITraktUserPersonalListItemsPostShow must have at least a valid Trakt id. IList<ITraktUserPersonalListItemsPostShow> Shows { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShow>"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostEpisode.html",
    "title": "Interface ITraktUserPersonalListItemsPostEpisode | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostEpisode Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post episode, containing the required episode ids. public interface ITraktUserPersonalListItemsPostEpisode Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Notes Gets or sets the episode notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostMovie.html",
    "title": "Interface ITraktUserPersonalListItemsPostMovie | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostMovie Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post movie, containing the required movie ids. public interface ITraktUserPersonalListItemsPostMovie Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the movie notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostPerson.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostPerson.html",
    "title": "Interface ITraktUserPersonalListItemsPostPerson | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostPerson Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post person, containing the required person ids. public interface ITraktUserPersonalListItemsPostPerson Properties Ids Gets or sets the required person ids. See also ITraktPersonIds. ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds Notes Gets or sets the person notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostSeason.html",
    "title": "Interface ITraktUserPersonalListItemsPostSeason | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostSeason Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post season, containing the required season ids. public interface ITraktUserPersonalListItemsPostSeason Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Notes Gets or sets the season notes. string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShow.html",
    "title": "Interface ITraktUserPersonalListItemsPostShow | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostShow Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post show, containing the required show ids. Can also contain optional seasons. public interface ITraktUserPersonalListItemsPostShow Properties Ids Gets or sets the required show ids. See also ITraktShowIds. ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the show notes. string Notes { get; set; } Property Value string Seasons An optional list of ITraktUserPersonalListItemsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the personal list. Otherwise, only the specified seasons and / or episodes will be added to the personal list. IList<ITraktUserPersonalListItemsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShowSeason>"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShowEpisode.html",
    "title": "Interface ITraktUserPersonalListItemsPostShowEpisode | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostShowEpisode Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post episode, containing the required episode number. public interface ITraktUserPersonalListItemsPostShowEpisode Properties Number Gets or sets the required season number of the Trakt episode. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsPostShowSeason.html",
    "title": "Interface ITraktUserPersonalListItemsPostShowSeason | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostShowSeason Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post season, containing the required season number and optional episodes. public interface ITraktUserPersonalListItemsPostShowSeason Properties Episodes An optional list of ITraktUserPersonalListItemsPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the personal list. Otherwise, only the specified episodes will be added to the personal list. IList<ITraktUserPersonalListItemsPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShowEpisode> Number Gets or sets the required season number of the Trakt season. int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.ITraktUserPersonalListItemsRemovePost.html",
    "title": "Interface ITraktUserPersonalListItemsRemovePost | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsRemovePost Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be removed from an user's personal list. public interface ITraktUserPersonalListItemsRemovePost : ITraktUserPersonalListItemsPost Inherited Members ITraktUserPersonalListItemsPost.Movies ITraktUserPersonalListItemsPost.Shows ITraktUserPersonalListItemsPost.Seasons ITraktUserPersonalListItemsPost.Episodes ITraktUserPersonalListItemsPost.People"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponse.html",
    "title": "Interface ITraktUserPersonalListItemsPostResponse | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostResponse Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll Represents the response for an user personal list items post. See also ITraktUserPersonalListItemsPost. Contains the number of added, existing and not found movies, shows, seasons, episodes and people. public interface ITraktUserPersonalListItemsPostResponse Properties Added A collection containing the number of added movies, shows, seasons, episodes and people. Nullable ITraktUserPersonalListItemsPostResponseGroup Added { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons, episodes and people. Nullable ITraktUserPersonalListItemsPostResponseGroup Existing { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. Nullable ITraktUserPersonalListItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserPersonalListItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponseGroup.html",
    "title": "Interface ITraktUserPersonalListItemsPostResponseGroup | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostResponseGroup Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons, episodes and people. public interface ITraktUserPersonalListItemsPostResponseGroup Properties Episodes Gets or sets the number of episodes. int? Episodes { get; set; } Property Value int? Movies Gets or sets the number of movies. int? Movies { get; set; } Property Value int? People Gets or sets the number of people. int? People { get; set; } Property Value int? Seasons Gets or sets the number of seasons. int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsPostResponseNotFoundGroup.html",
    "title": "Interface ITraktUserPersonalListItemsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. public interface ITraktUserPersonalListItemsPostResponseNotFoundGroup Properties Episodes A list of ITraktPostResponseNotFoundEpisode, containing the ids of episodes, which were not found. Nullable IList<ITraktPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktPostResponseNotFoundEpisode> Movies A list of ITraktPostResponseNotFoundMovie, containing the ids of movies, which were not found. Nullable IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> People A list of ITraktPostResponseNotFoundPerson, containing the ids of people, which were not found. Nullable IList<ITraktPostResponseNotFoundPerson> People { get; set; } Property Value IList<ITraktPostResponseNotFoundPerson> Seasons A list of ITraktPostResponseNotFoundSeason, containing the ids of seasons, which were not found. Nullable IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShow, containing the ids of shows, which were not found. Nullable IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.ITraktUserPersonalListItemsRemovePostResponse.html",
    "title": "Interface ITraktUserPersonalListItemsRemovePostResponse | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsRemovePostResponse Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll Represents the response for an user personal list items remove post. See also ITraktUserPersonalListItemsPost. Contains the number of deleted and not found movies, shows, seasons, episodes and people. public interface ITraktUserPersonalListItemsRemovePostResponse Properties Deleted A collection containing the number of deleted movies, shows, seasons, episodes and people. Nullable ITraktUserPersonalListItemsPostResponseGroup Deleted { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup List Information about the updated list. Nullable ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. Nullable ITraktUserPersonalListItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserPersonalListItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponse.html",
    "title": "Class TraktUserPersonalListItemsPostResponse | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostResponse Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll Represents the response for an user personal list items post. See also ITraktUserPersonalListItemsPost. Contains the number of added, existing and not found movies, shows, seasons, episodes and people. public class TraktUserPersonalListItemsPostResponse : ITraktUserPersonalListItemsPostResponse Inheritance object TraktUserPersonalListItemsPostResponse Implements ITraktUserPersonalListItemsPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Added A collection containing the number of added movies, shows, seasons, episodes and people. Nullable public ITraktUserPersonalListItemsPostResponseGroup Added { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup Existing A collection containing the number of existing movies, shows, seasons, episodes and people. Nullable public ITraktUserPersonalListItemsPostResponseGroup Existing { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. Nullable public ITraktUserPersonalListItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserPersonalListItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponseGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponseGroup.html",
    "title": "Class TraktUserPersonalListItemsPostResponseGroup | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostResponseGroup Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll A collection containing the number of movies, shows, seasons, episodes and people. public class TraktUserPersonalListItemsPostResponseGroup : ITraktUserPersonalListItemsPostResponseGroup Inheritance object TraktUserPersonalListItemsPostResponseGroup Implements ITraktUserPersonalListItemsPostResponseGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes Gets or sets the number of episodes. public int? Episodes { get; set; } Property Value int? Movies Gets or sets the number of movies. public int? Movies { get; set; } Property Value int? People Gets or sets the number of people. public int? People { get; set; } Property Value int? Seasons Gets or sets the number of seasons. public int? Seasons { get; set; } Property Value int? Shows Gets or sets the number of shows. public int? Shows { get; set; } Property Value int?"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponseNotFoundGroup.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsPostResponseNotFoundGroup.html",
    "title": "Class TraktUserPersonalListItemsPostResponseNotFoundGroup | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostResponseNotFoundGroup Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. public class TraktUserPersonalListItemsPostResponseNotFoundGroup : ITraktUserPersonalListItemsPostResponseNotFoundGroup Inheritance object TraktUserPersonalListItemsPostResponseNotFoundGroup Implements ITraktUserPersonalListItemsPostResponseNotFoundGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes A list of ITraktPostResponseNotFoundEpisode, containing the ids of episodes, which were not found. Nullable public IList<ITraktPostResponseNotFoundEpisode> Episodes { get; set; } Property Value IList<ITraktPostResponseNotFoundEpisode> Movies A list of ITraktPostResponseNotFoundMovie, containing the ids of movies, which were not found. Nullable public IList<ITraktPostResponseNotFoundMovie> Movies { get; set; } Property Value IList<ITraktPostResponseNotFoundMovie> People A list of ITraktPostResponseNotFoundPerson, containing the ids of people, which were not found. Nullable public IList<ITraktPostResponseNotFoundPerson> People { get; set; } Property Value IList<ITraktPostResponseNotFoundPerson> Seasons A list of ITraktPostResponseNotFoundSeason, containing the ids of seasons, which were not found. Nullable public IList<ITraktPostResponseNotFoundSeason> Seasons { get; set; } Property Value IList<ITraktPostResponseNotFoundSeason> Shows A list of ITraktPostResponseNotFoundShow, containing the ids of shows, which were not found. Nullable public IList<ITraktPostResponseNotFoundShow> Shows { get; set; } Property Value IList<ITraktPostResponseNotFoundShow>"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsRemovePostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.TraktUserPersonalListItemsRemovePostResponse.html",
    "title": "Class TraktUserPersonalListItemsRemovePostResponse | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsRemovePostResponse Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Assembly Trakt.NET.dll Represents the response for an user personal list items remove post. See also ITraktUserPersonalListItemsPost. Contains the number of deleted and not found movies, shows, seasons, episodes and people. public class TraktUserPersonalListItemsRemovePostResponse : ITraktUserPersonalListItemsRemovePostResponse Inheritance object TraktUserPersonalListItemsRemovePostResponse Implements ITraktUserPersonalListItemsRemovePostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Deleted A collection containing the number of deleted movies, shows, seasons, episodes and people. Nullable public ITraktUserPersonalListItemsPostResponseGroup Deleted { get; set; } Property Value ITraktUserPersonalListItemsPostResponseGroup List Information about the updated list. Nullable public ITraktPostResponseListData List { get; set; } Property Value ITraktPostResponseListData NotFound A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. Nullable public ITraktUserPersonalListItemsPostResponseNotFoundGroup NotFound { get; set; } Property Value ITraktUserPersonalListItemsPostResponseNotFoundGroup"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users.PersonalListItems.Responses Classes TraktUserPersonalListItemsPostResponse Represents the response for an user personal list items post. See also ITraktUserPersonalListItemsPost. Contains the number of added, existing and not found movies, shows, seasons, episodes and people. TraktUserPersonalListItemsPostResponseGroup A collection containing the number of movies, shows, seasons, episodes and people. TraktUserPersonalListItemsPostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. TraktUserPersonalListItemsRemovePostResponse Represents the response for an user personal list items remove post. See also ITraktUserPersonalListItemsPost. Contains the number of deleted and not found movies, shows, seasons, episodes and people. Interfaces ITraktUserPersonalListItemsPostResponse Represents the response for an user personal list items post. See also ITraktUserPersonalListItemsPost. Contains the number of added, existing and not found movies, shows, seasons, episodes and people. ITraktUserPersonalListItemsPostResponseGroup A collection containing the number of movies, shows, seasons, episodes and people. ITraktUserPersonalListItemsPostResponseNotFoundGroup A collection containing the ids of movies, shows, seasons, episodes and people, which were not found. ITraktUserPersonalListItemsRemovePostResponse Represents the response for an user personal list items remove post. See also ITraktUserPersonalListItemsPost. Contains the number of deleted and not found movies, shows, seasons, episodes and people."
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPost.html",
    "title": "Class TraktUserPersonalListItemsPost | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPost Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be added to an user's personal list. public class TraktUserPersonalListItemsPost : ITraktUserPersonalListItemsPost Inheritance object TraktUserPersonalListItemsPost Implements ITraktUserPersonalListItemsPost Derived TraktUserPersonalListItemsRemovePost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktUserPersonalListItemsPostEpisodes. Each ITraktUserPersonalListItemsPostEpisode must have at least a valid Trakt id. public IList<ITraktUserPersonalListItemsPostEpisode> Episodes { get; set; } Property Value IList<ITraktUserPersonalListItemsPostEpisode> Movies An optional list of ITraktUserPersonalListItemsPostMovies. Each ITraktUserPersonalListItemsPostMovie must have at least a valid Trakt id. public IList<ITraktUserPersonalListItemsPostMovie> Movies { get; set; } Property Value IList<ITraktUserPersonalListItemsPostMovie> People An optional list of ITraktUserPersonalListItemsPostPersons. Each ITraktUserPersonalListItemsPostPerson must have at least a valid Trakt id and a name. public IList<ITraktUserPersonalListItemsPostPerson> People { get; set; } Property Value IList<ITraktUserPersonalListItemsPostPerson> Seasons An optional list of ITraktUserPersonalListItemsPostSeasons. Each ITraktUserPersonalListItemsPostSeason must have at least a valid Trakt id. public IList<ITraktUserPersonalListItemsPostSeason> Seasons { get; set; } Property Value IList<ITraktUserPersonalListItemsPostSeason> Shows An optional list of ITraktUserPersonalListItemsPostShows. Each ITraktUserPersonalListItemsPostShow must have at least a valid Trakt id. public IList<ITraktUserPersonalListItemsPostShow> Shows { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShow> Methods ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostEpisode.html",
    "title": "Class TraktUserPersonalListItemsPostEpisode | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostEpisode Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post episode, containing the required episode ids. public class TraktUserPersonalListItemsPostEpisode : ITraktUserPersonalListItemsPostEpisode Inheritance object TraktUserPersonalListItemsPostEpisode Implements ITraktUserPersonalListItemsPostEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required episode ids. See also ITraktEpisodeIds. public ITraktEpisodeIds Ids { get; set; } Property Value ITraktEpisodeIds Notes Gets or sets the episode notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostMovie.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostMovie.html",
    "title": "Class TraktUserPersonalListItemsPostMovie | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostMovie Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post movie, containing the required movie ids. public class TraktUserPersonalListItemsPostMovie : ITraktUserPersonalListItemsPostMovie Inheritance object TraktUserPersonalListItemsPostMovie Implements ITraktUserPersonalListItemsPostMovie Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required movie ids. See also ITraktMovieIds. public ITraktMovieIds Ids { get; set; } Property Value ITraktMovieIds Notes Gets or sets the movie notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostPerson.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostPerson.html",
    "title": "Class TraktUserPersonalListItemsPostPerson | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostPerson Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post person, containing the required person ids. public class TraktUserPersonalListItemsPostPerson : ITraktUserPersonalListItemsPostPerson Inheritance object TraktUserPersonalListItemsPostPerson Implements ITraktUserPersonalListItemsPostPerson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required person ids. See also ITraktPersonIds. public ITraktPersonIds Ids { get; set; } Property Value ITraktPersonIds Notes Gets or sets the person notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostSeason.html",
    "title": "Class TraktUserPersonalListItemsPostSeason | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostSeason Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post season, containing the required season ids. public class TraktUserPersonalListItemsPostSeason : ITraktUserPersonalListItemsPostSeason Inheritance object TraktUserPersonalListItemsPostSeason Implements ITraktUserPersonalListItemsPostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required season ids. See also ITraktSeasonIds. public ITraktSeasonIds Ids { get; set; } Property Value ITraktSeasonIds Notes Gets or sets the season notes. public string Notes { get; set; } Property Value string"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShow.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShow.html",
    "title": "Class TraktUserPersonalListItemsPostShow | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostShow Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post show, containing the required show ids. Can also contain optional seasons. public class TraktUserPersonalListItemsPostShow : ITraktUserPersonalListItemsPostShow Inheritance object TraktUserPersonalListItemsPostShow Implements ITraktUserPersonalListItemsPostShow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids Gets or sets the required show ids. See also ITraktShowIds. public ITraktShowIds Ids { get; set; } Property Value ITraktShowIds Notes Gets or sets the show notes. public string Notes { get; set; } Property Value string Seasons An optional list of ITraktUserPersonalListItemsPostShowSeasons. If no seasons are set, the whole Trakt show will be added to the personal list. Otherwise, only the specified seasons and / or episodes will be added to the personal list. public IList<ITraktUserPersonalListItemsPostShowSeason> Seasons { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShowSeason>"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShowEpisode.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShowEpisode.html",
    "title": "Class TraktUserPersonalListItemsPostShowEpisode | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostShowEpisode Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post episode, containing the required episode number. public class TraktUserPersonalListItemsPostShowEpisode : ITraktUserPersonalListItemsPostShowEpisode Inheritance object TraktUserPersonalListItemsPostShowEpisode Implements ITraktUserPersonalListItemsPostShowEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Number Gets or sets the required season number of the Trakt episode. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShowSeason.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsPostShowSeason.html",
    "title": "Class TraktUserPersonalListItemsPostShowSeason | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsPostShowSeason Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post season, containing the required season number and optional episodes. public class TraktUserPersonalListItemsPostShowSeason : ITraktUserPersonalListItemsPostShowSeason Inheritance object TraktUserPersonalListItemsPostShowSeason Implements ITraktUserPersonalListItemsPostShowSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episodes An optional list of ITraktUserPersonalListItemsPostShowEpisodes. If no episodes are set, the whole Trakt season will be added to the personal list. Otherwise, only the specified episodes will be added to the personal list. public IList<ITraktUserPersonalListItemsPostShowEpisode> Episodes { get; set; } Property Value IList<ITraktUserPersonalListItemsPostShowEpisode> Number Gets or sets the required season number of the Trakt season. public int Number { get; set; } Property Value int"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsRemovePost.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.TraktUserPersonalListItemsRemovePost.html",
    "title": "Class TraktUserPersonalListItemsRemovePost | Trakt.NET",
    "keywords": "Class TraktUserPersonalListItemsRemovePost Namespace TraktNet.Objects.Post.Users.PersonalListItems Assembly Trakt.NET.dll An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be removed from an user's personal list. public class TraktUserPersonalListItemsRemovePost : TraktUserPersonalListItemsPost, ITraktUserPersonalListItemsRemovePost, ITraktUserPersonalListItemsPost Inheritance object TraktUserPersonalListItemsPost TraktUserPersonalListItemsRemovePost Implements ITraktUserPersonalListItemsRemovePost ITraktUserPersonalListItemsPost Inherited Members TraktUserPersonalListItemsPost.Movies TraktUserPersonalListItemsPost.Shows TraktUserPersonalListItemsPost.Seasons TraktUserPersonalListItemsPost.Episodes TraktUserPersonalListItemsPost.People TraktUserPersonalListItemsPost.ToJson(CancellationToken) TraktUserPersonalListItemsPost.Validate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/TraktNet.Objects.Post.Users.PersonalListItems.html": {
    "href": "api/TraktNet.Objects.Post.Users.PersonalListItems.html",
    "title": "Namespace TraktNet.Objects.Post.Users.PersonalListItems | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users.PersonalListItems Classes TraktUserPersonalListItemsPost An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be added to an user's personal list. TraktUserPersonalListItemsPostEpisode An user personal list items post episode, containing the required episode ids. TraktUserPersonalListItemsPostMovie An user personal list items post movie, containing the required movie ids. TraktUserPersonalListItemsPostPerson An user personal list items post person, containing the required person ids. TraktUserPersonalListItemsPostSeason An user personal list items post season, containing the required season ids. TraktUserPersonalListItemsPostShow An user personal list items post show, containing the required show ids. Can also contain optional seasons. TraktUserPersonalListItemsPostShowEpisode An user personal list items post episode, containing the required episode number. TraktUserPersonalListItemsPostShowSeason An user personal list items post season, containing the required season number and optional episodes. TraktUserPersonalListItemsRemovePost An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be removed from an user's personal list. Interfaces ITraktUserPersonalListItemsPost An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be added to an user's personal list. ITraktUserPersonalListItemsPostEpisode An user personal list items post episode, containing the required episode ids. ITraktUserPersonalListItemsPostMovie An user personal list items post movie, containing the required movie ids. ITraktUserPersonalListItemsPostPerson An user personal list items post person, containing the required person ids. ITraktUserPersonalListItemsPostSeason An user personal list items post season, containing the required season ids. ITraktUserPersonalListItemsPostShow An user personal list items post show, containing the required show ids. Can also contain optional seasons. ITraktUserPersonalListItemsPostShowEpisode An user personal list items post episode, containing the required episode number. ITraktUserPersonalListItemsPostShowSeason An user personal list items post season, containing the required season number and optional episodes. ITraktUserPersonalListItemsRemovePost An user personal list items post, containing all movies, shows, seasons, episodes and / or people, which should be removed from an user's personal list."
  },
  "api/TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.Responses.ITraktUserFollowUserPostResponse.html",
    "title": "Interface ITraktUserFollowUserPostResponse | Trakt.NET",
    "keywords": "Interface ITraktUserFollowUserPostResponse Namespace TraktNet.Objects.Post.Users.Responses Assembly Trakt.NET.dll Represents the response for the approve of a follower request. public interface ITraktUserFollowUserPostResponse Properties ApprovedAt Gets or sets the UTC datetime, when the follower request was approved. DateTime? ApprovedAt { get; set; } Property Value DateTime? User Gets or sets the ITraktUser, who was approved. Nullable ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Post.Users.Responses.TraktUserFollowUserPostResponse.html": {
    "href": "api/TraktNet.Objects.Post.Users.Responses.TraktUserFollowUserPostResponse.html",
    "title": "Class TraktUserFollowUserPostResponse | Trakt.NET",
    "keywords": "Class TraktUserFollowUserPostResponse Namespace TraktNet.Objects.Post.Users.Responses Assembly Trakt.NET.dll Represents the response for the approve of a follower request. public class TraktUserFollowUserPostResponse : ITraktUserFollowUserPostResponse Inheritance object TraktUserFollowUserPostResponse Implements ITraktUserFollowUserPostResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApprovedAt Gets or sets the UTC datetime, when the follower request was approved. public DateTime? ApprovedAt { get; set; } Property Value DateTime? User Gets or sets the ITraktUser, who was approved. Nullable public ITraktUser User { get; set; } Property Value ITraktUser"
  },
  "api/TraktNet.Objects.Post.Users.Responses.html": {
    "href": "api/TraktNet.Objects.Post.Users.Responses.html",
    "title": "Namespace TraktNet.Objects.Post.Users.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users.Responses Classes TraktUserFollowUserPostResponse Represents the response for the approve of a follower request. Interfaces ITraktUserFollowUserPostResponse Represents the response for the approve of a follower request."
  },
  "api/TraktNet.Objects.Post.Users.TraktUserPersonalListPost.html": {
    "href": "api/TraktNet.Objects.Post.Users.TraktUserPersonalListPost.html",
    "title": "Class TraktUserPersonalListPost | Trakt.NET",
    "keywords": "Class TraktUserPersonalListPost Namespace TraktNet.Objects.Post.Users Assembly Trakt.NET.dll An episode custom list post. public class TraktUserPersonalListPost : ITraktUserPersonalListPost Inheritance object TraktUserPersonalListPost Implements ITraktUserPersonalListPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowComments Gets or sets, whether the custom list allows comments. public bool? AllowComments { get; set; } Property Value bool? Description Gets or sets the optional description of the custom list. Nullable public string Description { get; set; } Property Value string DisplayNumbers Gets or sets, whether the custom list should display numbers. public bool? DisplayNumbers { get; set; } Property Value bool? Name Gets or sets the required name of the custom list. public string Name { get; set; } Property Value string Privacy Gets or sets the optional privacy setting of the custom list. See also TraktListPrivacy. Nullable public TraktListPrivacy Privacy { get; set; } Property Value TraktListPrivacy SortBy Gets or sets the custom list sort-by setting. See also TraktSortBy. Nullable public TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets or sets the custom list sort-how setting. See also TraktSortHow. Nullable public TraktSortHow SortHow { get; set; } Property Value TraktSortHow Methods HasAnyValuesSet() Returns whether the post has any values set. public bool HasAnyValuesSet() Returns bool ToJson(CancellationToken) public Task<string> ToJson(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<string> Validate() Checks whether the post data is valid. public void Validate()"
  },
  "api/TraktNet.Objects.Post.Users.html": {
    "href": "api/TraktNet.Objects.Post.Users.html",
    "title": "Namespace TraktNet.Objects.Post.Users | Trakt.NET",
    "keywords": "Namespace TraktNet.Objects.Post.Users Classes TraktUserPersonalListPost An episode custom list post. Interfaces ITraktUserPersonalListPost An episode personal list post."
  },
  "api/TraktNet.Parameters.ITraktBasicRatingsFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktBasicRatingsFilter.html",
    "title": "Interface ITraktBasicRatingsFilter | Trakt.NET",
    "keywords": "Interface ITraktBasicRatingsFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktBasicRatingsFilter Properties HasRatingsValues Returns whether the filter has any rating values set. bool HasRatingsValues { get; } Property Value bool Ratings Optional Trakt rating range between 0 and 100. Range<uint>? Ratings { get; } Property Value Range<uint>? Votes Optional Trakt vote count between 0 and 100000. Range<uint>? Votes { get; } Property Value Range<uint>? Methods GetRatingsParameters() Returns a list of key value pairs of set filter rating values. IDictionary<string, object> GetRatingsParameters() Returns IDictionary<string, object> A list of key value pairs of set filter rating values. RatingsToString() Returns a string representation of set filter rating values. string RatingsToString() Returns string A string representation of set filter rating values."
  },
  "api/TraktNet.Parameters.ITraktBasicRatingsFilterBuilder-2.html": {
    "href": "api/TraktNet.Parameters.ITraktBasicRatingsFilterBuilder-2.html",
    "title": "Interface ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder> | Trakt.NET",
    "keywords": "Interface ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder> Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder> where TFilter : ITraktFilter where TFilterBuilder : ITraktFilterBuilder<TFilter, TFilterBuilder> Type Parameters TFilter TFilterBuilder Methods WithRatings(uint, uint) Adds the given Trakt rating range, with start and end, to the builder. TFilterBuilder WithRatings(uint start, uint end) Parameters start uint The start value of the Trakt rating range. Maximum value should be 100. end uint The end value of the Trakt rating range. Maximum value should be 100. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 100. ArgumentOutOfRangeException Thrown, if the given end is greater than 100. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithVotes(uint, uint) Adds the given Trakt vote count range, with start and end, to the builder. TFilterBuilder WithVotes(uint start, uint end) Parameters start uint The start value of the Trakt vote count. Maximum value should be 100000. end uint The end value of the Trakt vote count. Maximum value should be 100000. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 100000. ArgumentOutOfRangeException Thrown, if the given end is greater than 100000. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value."
  },
  "api/TraktNet.Parameters.ITraktCalendarFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktCalendarFilter.html",
    "title": "Interface ITraktCalendarFilter | Trakt.NET",
    "keywords": "Interface ITraktCalendarFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll A filter for calendar requests. public interface ITraktCalendarFilter : ITraktFilter, ITraktCalendarRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktFilter.Query ITraktFilter.Year ITraktFilter.Years ITraktFilter.Genres ITraktFilter.Languages ITraktFilter.Countries ITraktFilter.Runtimes ITraktFilter.Studios ITraktFilter.HasValues ITraktFilter.GetParameters() ITraktFilter.ToString() ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString()"
  },
  "api/TraktNet.Parameters.ITraktCalendarFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktCalendarFilterBuilder.html",
    "title": "Interface ITraktCalendarFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktCalendarFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll Filter builder for ITraktCalendarFilters. Provides methods for adding values to a ITraktCalendarFilter. public interface ITraktCalendarFilterBuilder : ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>, ITraktCalendarRatingsFilterBuilder, ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder> Inherited Members ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithQuery(string) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithYear(uint) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithYears(uint, uint) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithGenres(string, params string[]) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithGenres(IEnumerable<string>) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithLanguages(string, params string[]) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithLanguages(IEnumerable<string>) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithCountries(string, params string[]) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithCountries(IEnumerable<string>) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithRuntimes(uint, uint) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithStudios(string, params string[]) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithStudios(IEnumerable<string>) ITraktFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.Build() ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.ITraktCalendarRatingsFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktCalendarRatingsFilter.html",
    "title": "Interface ITraktCalendarRatingsFilter | Trakt.NET",
    "keywords": "Interface ITraktCalendarRatingsFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktCalendarRatingsFilter : ITraktBasicRatingsFilter Inherited Members ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString()"
  },
  "api/TraktNet.Parameters.ITraktCalendarRatingsFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktCalendarRatingsFilterBuilder.html",
    "title": "Interface ITraktCalendarRatingsFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktCalendarRatingsFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktCalendarRatingsFilterBuilder : ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder> Inherited Members ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktCalendarFilter, ITraktCalendarFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.ITraktCommonRatingsFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktCommonRatingsFilter.html",
    "title": "Interface ITraktCommonRatingsFilter | Trakt.NET",
    "keywords": "Interface ITraktCommonRatingsFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktCommonRatingsFilter : ITraktBasicRatingsFilter Inherited Members ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString() Properties IMDBRatings Optional IMDB rating range between 0.0 and 10.0. Range<float>? IMDBRatings { get; } Property Value Range<float>? IMDBVotes Optional IMDB vote count between 0 and 3000000. Range<uint>? IMDBVotes { get; } Property Value Range<uint>? TMDBRatings Optional TMDB rating range between 0.0 and 10.0. Range<float>? TMDBRatings { get; } Property Value Range<float>? TMDBVotes Optional TMDB vote count between 0 and 100000. Range<uint>? TMDBVotes { get; } Property Value Range<uint>?"
  },
  "api/TraktNet.Parameters.ITraktCommonRatingsFilterBuilder-2.html": {
    "href": "api/TraktNet.Parameters.ITraktCommonRatingsFilterBuilder-2.html",
    "title": "Interface ITraktCommonRatingsFilterBuilder<TFilter, TFilterBuilder> | Trakt.NET",
    "keywords": "Interface ITraktCommonRatingsFilterBuilder<TFilter, TFilterBuilder> Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktCommonRatingsFilterBuilder<TFilter, TFilterBuilder> : ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder> where TFilter : ITraktFilter where TFilterBuilder : ITraktFilterBuilder<TFilter, TFilterBuilder> Type Parameters TFilter TFilterBuilder Inherited Members ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder>.WithVotes(uint, uint) Methods WithIMDBRatings(float, float) Adds the given IMDB rating range, with start and end, to the builder. TFilterBuilder WithIMDBRatings(float start, float end) Parameters start float The start value of the IMDB rating range. Maximum value should be 10.0. end float The end value of the IMDB rating range. Maximum value should be 10.0. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 10.0. ArgumentOutOfRangeException Thrown, if the given end is greater than 10.0. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithIMDBVotes(uint, uint) Adds the given IMDB vote count range, with start and end, to the builder. TFilterBuilder WithIMDBVotes(uint start, uint end) Parameters start uint The start value of the IMDB vote count. Maximum value should be 3000000. end uint The end value of the IMDB vote count. Maximum value should be 3000000. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 3000000. ArgumentOutOfRangeException Thrown, if the given end is greater than 3000000. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithTMDBRatings(float, float) Adds the given TMDB rating range, with start and end, to the builder. TFilterBuilder WithTMDBRatings(float start, float end) Parameters start float The start value of the TMDB rating range. Maximum value should be 10.0. end float The end value of the TMDB rating range. Maximum value should be 10.0. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 10.0. ArgumentOutOfRangeException Thrown, if the given end is greater than 10.0. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithTMDBVotes(uint, uint) Adds the given TMDB vote count range, with start and end, to the builder. TFilterBuilder WithTMDBVotes(uint start, uint end) Parameters start uint The start value of the TMDB vote count. Maximum value should be 100000. end uint The end value of the TMDB vote count. Maximum value should be 100000. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 100000. ArgumentOutOfRangeException Thrown, if the given end is greater than 100000. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value."
  },
  "api/TraktNet.Parameters.ITraktFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktFilter.html",
    "title": "Interface ITraktFilter | Trakt.NET",
    "keywords": "Interface ITraktFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktFilter Properties Countries Optional 2 character country codes. string[] Countries { get; } Property Value string[] Genres Optional genre slugs. string[] Genres { get; } Property Value string[] HasValues Returns whether the filter has any values set. bool HasValues { get; } Property Value bool Languages Optional 2 character language codes. string[] Languages { get; } Property Value string[] Query Optional search titles and descriptions. string Query { get; } Property Value string Runtimes Optional runtime range in minutes. Range<uint>? Runtimes { get; } Property Value Range<uint>? Studios Optional studio slugs. string[] Studios { get; } Property Value string[] Year Optional 4 digit year. uint? Year { get; } Property Value uint? Years Optional range of 4 digit years. Range<uint>? Years { get; } Property Value Range<uint>? Methods GetParameters() Returns a list of key value pairs of set filter values. IDictionary<string, object> GetParameters() Returns IDictionary<string, object> A list of key value pairs of set filter values. ToString() Returns a string representation of set filter values. string ToString() Returns string A string representation of set filter values."
  },
  "api/TraktNet.Parameters.ITraktFilterBuilder-2.html": {
    "href": "api/TraktNet.Parameters.ITraktFilterBuilder-2.html",
    "title": "Interface ITraktFilterBuilder<TFilter, TFilterBuilder> | Trakt.NET",
    "keywords": "Interface ITraktFilterBuilder<TFilter, TFilterBuilder> Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktFilterBuilder<TFilter, TFilterBuilder> where TFilter : ITraktFilter where TFilterBuilder : ITraktFilterBuilder<TFilter, TFilterBuilder> Type Parameters TFilter TFilterBuilder Methods Build() Creates a new TFilter instance. TFilter Build() Returns TFilter A new TFilter instance. WithCountries(IEnumerable<string>) Adds the given countries to the builder. TFilterBuilder WithCountries(IEnumerable<string> countries) Parameters countries IEnumerable<string> A list of 2 character country codes which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given countries is null. ArgumentOutOfRangeException Thrown, if any of the given countries is not a 2 character country code. WithCountries(string, params string[]) Adds the given country and optional list of countries to the builder. TFilterBuilder WithCountries(string country, params string[] countries) Parameters country string A 2 character country code which will be added to the builder. countries string[] An optional list of 2 character country codes which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given country is null. ArgumentOutOfRangeException Thrown, if the given country is not a 2 character country code. ArgumentOutOfRangeException Thrown, if any of the given countries is not a 2 character country code. WithGenres(IEnumerable<string>) Adds the given genres to the builder. Empty values will be ignored. TFilterBuilder WithGenres(IEnumerable<string> genres) Parameters genres IEnumerable<string> A list of genre slugs which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given genres is null. WithGenres(string, params string[]) Adds the given genre and optional list of genres to the builder. Empty values will be ignored. TFilterBuilder WithGenres(string genre, params string[] genres) Parameters genre string A genre slug which will be added to the builder. genres string[] An optional list of genre slugs which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given genre is null. WithLanguages(IEnumerable<string>) Adds the given languages to the builder. TFilterBuilder WithLanguages(IEnumerable<string> languages) Parameters languages IEnumerable<string> A list of 2 character language codes which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given languages is null. ArgumentOutOfRangeException Thrown, if any of the given languages is not a 2 character language code. WithLanguages(string, params string[]) Adds the given language and optional list of languages to the builder. TFilterBuilder WithLanguages(string language, params string[] languages) Parameters language string A 2 character language code which will be added to the builder. languages string[] An optional list of 2 character language codes which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given language is null. ArgumentOutOfRangeException Thrown, if the given language is not a 2 character language code. ArgumentOutOfRangeException Thrown, if any of the given languages is not a 2 character language code. WithQuery(string) Adds the given query to the builder. TFilterBuilder WithQuery(string query) Parameters query string A query which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given query is null. ArgumentException Thrown, if the given query is empty. WithRuntimes(uint, uint) Adds the given runtime range in minutes, with start and end, to the builder. TFilterBuilder WithRuntimes(uint start, uint end) Parameters start uint The start value of the runtime range in minutes. end uint The end value of the runtime range in minutes. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithStudios(IEnumerable<string>) Adds the given studios to the builder. Empty values will be ignored. TFilterBuilder WithStudios(IEnumerable<string> studios) Parameters studios IEnumerable<string> An optional list of studio slugs which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given studios is null. WithStudios(string, params string[]) Adds the given studio and optional list of studios to the builder. Empty values will be ignored. TFilterBuilder WithStudios(string studio, params string[] studios) Parameters studio string A studio slug which will be added to the builder. studios string[] An optional list of studio slugs which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given studio is null. WithYear(uint) Adds the given year to the builder. The method overwrites an already set years range. TFilterBuilder WithYear(uint year) Parameters year uint A single 4 digit year which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given year is not a 4 digit value. WithYears(uint, uint) Adds the given range of years, with startYear and endYear, to the builder. The method overwrites an already set year. TFilterBuilder WithYears(uint startYear, uint endYear) Parameters startYear uint The start value of the range of years. Should be a 4 digit value. endYear uint The end value of the range of years. Should be a 4 digit value. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given startYear is not a 4 digit value. ArgumentOutOfRangeException Thrown, if the given endYear is not a 4 digit value. ArgumentOutOfRangeException Thrown, if the given startYear value is greater than the given endYear value."
  },
  "api/TraktNet.Parameters.ITraktMovieFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktMovieFilter.html",
    "title": "Interface ITraktMovieFilter | Trakt.NET",
    "keywords": "Interface ITraktMovieFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll A filter for movie requests. public interface ITraktMovieFilter : ITraktShowAndMovieFilter, ITraktFilter, ITraktMovieRatingsFilter, ITraktCommonRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktShowAndMovieFilter.Certifications ITraktFilter.Query ITraktFilter.Year ITraktFilter.Years ITraktFilter.Genres ITraktFilter.Languages ITraktFilter.Countries ITraktFilter.Runtimes ITraktFilter.Studios ITraktFilter.HasValues ITraktFilter.GetParameters() ITraktFilter.ToString() ITraktMovieRatingsFilter.RottenTomatousMeter ITraktMovieRatingsFilter.Metascores ITraktCommonRatingsFilter.TMDBRatings ITraktCommonRatingsFilter.TMDBVotes ITraktCommonRatingsFilter.IMDBRatings ITraktCommonRatingsFilter.IMDBVotes ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString()"
  },
  "api/TraktNet.Parameters.ITraktMovieFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktMovieFilterBuilder.html",
    "title": "Interface ITraktMovieFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktMovieFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll Filter builder for ITraktMovieFilters. Provides methods for adding values to a ITraktMovieFilter. public interface ITraktMovieFilterBuilder : ITraktShowAndMovieFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>, ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>, ITraktMovieRatingsFilterBuilder, ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder> Inherited Members ITraktShowAndMovieFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithCertifications(string, params string[]) ITraktShowAndMovieFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithCertifications(IEnumerable<string>) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithQuery(string) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithYear(uint) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithYears(uint, uint) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithGenres(string, params string[]) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithGenres(IEnumerable<string>) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithLanguages(string, params string[]) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithLanguages(IEnumerable<string>) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithCountries(string, params string[]) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithCountries(IEnumerable<string>) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithRuntimes(uint, uint) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithStudios(string, params string[]) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithStudios(IEnumerable<string>) ITraktFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.Build() ITraktMovieRatingsFilterBuilder.WithRottenTomatoesMeter(float, float) ITraktMovieRatingsFilterBuilder.WithMetascores(float, float) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.ITraktMovieRatingsFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktMovieRatingsFilter.html",
    "title": "Interface ITraktMovieRatingsFilter | Trakt.NET",
    "keywords": "Interface ITraktMovieRatingsFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktMovieRatingsFilter : ITraktCommonRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktCommonRatingsFilter.TMDBRatings ITraktCommonRatingsFilter.TMDBVotes ITraktCommonRatingsFilter.IMDBRatings ITraktCommonRatingsFilter.IMDBVotes ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString() Properties Metascores Optional Metacritic score range between 0 and 100. Range<float>? Metascores { get; } Property Value Range<float>? RottenTomatousMeter Optional Rotten Tomatoes meter range between 0 and 100. Range<float>? RottenTomatousMeter { get; } Property Value Range<float>?"
  },
  "api/TraktNet.Parameters.ITraktMovieRatingsFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktMovieRatingsFilterBuilder.html",
    "title": "Interface ITraktMovieRatingsFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktMovieRatingsFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktMovieRatingsFilterBuilder : ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder> Inherited Members ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktMovieFilter, ITraktMovieFilterBuilder>.WithVotes(uint, uint) Methods WithMetascores(float, float) Adds the given Metacritic score range, with start and end, to the builder. ITraktMovieFilterBuilder WithMetascores(float start, float end) Parameters start float The start value of the Metacritic score range. Maximum value should be 100.0. end float The end value of the Metacritic score range. Maximum value should be 100.0. Returns ITraktMovieFilterBuilder Returns a reference to itself. See also ITraktMovieFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 100.0. ArgumentOutOfRangeException Thrown, if the given end is greater than 100.0. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value. WithRottenTomatoesMeter(float, float) Adds the given Rotten Tomatoes meter range, with start and end, to the builder. ITraktMovieFilterBuilder WithRottenTomatoesMeter(float start, float end) Parameters start float The start value of the Rotten Tomatoes meter range. Maximum value should be 100.0. end float The end value of the Rotten Tomatoes meter range. Maximum value should be 100.0. Returns ITraktMovieFilterBuilder Returns a reference to itself. See also ITraktMovieFilterBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given start is greater than 100.0. ArgumentOutOfRangeException Thrown, if the given end is greater than 100.0. ArgumentOutOfRangeException Thrown, if the given start value is greater than the given end value."
  },
  "api/TraktNet.Parameters.ITraktSearchFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktSearchFilter.html",
    "title": "Interface ITraktSearchFilter | Trakt.NET",
    "keywords": "Interface ITraktSearchFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll A filter for search requests. public interface ITraktSearchFilter : ITraktShowAndMovieFilter, ITraktFilter, ITraktCommonRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktShowAndMovieFilter.Certifications ITraktFilter.Query ITraktFilter.Year ITraktFilter.Years ITraktFilter.Genres ITraktFilter.Languages ITraktFilter.Countries ITraktFilter.Runtimes ITraktFilter.Studios ITraktFilter.HasValues ITraktFilter.GetParameters() ITraktFilter.ToString() ITraktCommonRatingsFilter.TMDBRatings ITraktCommonRatingsFilter.TMDBVotes ITraktCommonRatingsFilter.IMDBRatings ITraktCommonRatingsFilter.IMDBVotes ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString()"
  },
  "api/TraktNet.Parameters.ITraktSearchFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktSearchFilterBuilder.html",
    "title": "Interface ITraktSearchFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktSearchFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll Filter builder for ITraktSearchFilters. Provides methods for adding values to a ITraktSearchFilter. public interface ITraktSearchFilterBuilder : ITraktShowAndMovieFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>, ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>, ITraktSearchRatingsFilterBuilder, ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder> Inherited Members ITraktShowAndMovieFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithCertifications(string, params string[]) ITraktShowAndMovieFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithCertifications(IEnumerable<string>) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithQuery(string) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithYear(uint) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithYears(uint, uint) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithGenres(string, params string[]) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithGenres(IEnumerable<string>) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithLanguages(string, params string[]) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithLanguages(IEnumerable<string>) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithCountries(string, params string[]) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithCountries(IEnumerable<string>) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithRuntimes(uint, uint) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithStudios(string, params string[]) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithStudios(IEnumerable<string>) ITraktFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.Build() ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.ITraktSearchRatingsFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktSearchRatingsFilterBuilder.html",
    "title": "Interface ITraktSearchRatingsFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktSearchRatingsFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktSearchRatingsFilterBuilder : ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder> Inherited Members ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktSearchFilter, ITraktSearchFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.ITraktShowAndMovieFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktShowAndMovieFilter.html",
    "title": "Interface ITraktShowAndMovieFilter | Trakt.NET",
    "keywords": "Interface ITraktShowAndMovieFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktShowAndMovieFilter : ITraktFilter Inherited Members ITraktFilter.Query ITraktFilter.Year ITraktFilter.Years ITraktFilter.Genres ITraktFilter.Languages ITraktFilter.Countries ITraktFilter.Runtimes ITraktFilter.Studios ITraktFilter.HasValues ITraktFilter.GetParameters() ITraktFilter.ToString() Properties Certifications Optional US content certifications. string[] Certifications { get; } Property Value string[]"
  },
  "api/TraktNet.Parameters.ITraktShowAndMovieFilterBuilder-2.html": {
    "href": "api/TraktNet.Parameters.ITraktShowAndMovieFilterBuilder-2.html",
    "title": "Interface ITraktShowAndMovieFilterBuilder<TFilter, TFilterBuilder> | Trakt.NET",
    "keywords": "Interface ITraktShowAndMovieFilterBuilder<TFilter, TFilterBuilder> Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktShowAndMovieFilterBuilder<TFilter, TFilterBuilder> : ITraktFilterBuilder<TFilter, TFilterBuilder> where TFilter : ITraktFilter where TFilterBuilder : ITraktFilterBuilder<TFilter, TFilterBuilder> Type Parameters TFilter TFilterBuilder Inherited Members ITraktFilterBuilder<TFilter, TFilterBuilder>.WithQuery(string) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithYear(uint) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithYears(uint, uint) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithGenres(string, params string[]) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithGenres(IEnumerable<string>) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithLanguages(string, params string[]) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithLanguages(IEnumerable<string>) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithCountries(string, params string[]) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithCountries(IEnumerable<string>) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithRuntimes(uint, uint) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithStudios(string, params string[]) ITraktFilterBuilder<TFilter, TFilterBuilder>.WithStudios(IEnumerable<string>) ITraktFilterBuilder<TFilter, TFilterBuilder>.Build() Methods WithCertifications(IEnumerable<string>) Adds the given certifications to the builder. Empty values will be ignored. TFilterBuilder WithCertifications(IEnumerable<string> certifications) Parameters certifications IEnumerable<string> A list of US content certifications which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given certifications is null. WithCertifications(string, params string[]) Adds the given certification and optional list of certifications to the builder. Empty values will be ignored. TFilterBuilder WithCertifications(string certification, params string[] certifications) Parameters certification string A US content certification which will be added to the builder. certifications string[] An optional list of US content certifications which will be added to the builder. Returns TFilterBuilder Returns a reference to itself. See also TFilterBuilder. Exceptions ArgumentNullException Thrown, if the given certification is null."
  },
  "api/TraktNet.Parameters.ITraktShowFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktShowFilter.html",
    "title": "Interface ITraktShowFilter | Trakt.NET",
    "keywords": "Interface ITraktShowFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll A filter for show requests. public interface ITraktShowFilter : ITraktShowAndMovieFilter, ITraktFilter, ITraktShowRatingsFilter, ITraktCommonRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktShowAndMovieFilter.Certifications ITraktFilter.Query ITraktFilter.Year ITraktFilter.Years ITraktFilter.Genres ITraktFilter.Languages ITraktFilter.Countries ITraktFilter.Runtimes ITraktFilter.Studios ITraktFilter.HasValues ITraktFilter.GetParameters() ITraktFilter.ToString() ITraktCommonRatingsFilter.TMDBRatings ITraktCommonRatingsFilter.TMDBVotes ITraktCommonRatingsFilter.IMDBRatings ITraktCommonRatingsFilter.IMDBVotes ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString() Properties NetworkIds Optional network names. uint[] NetworkIds { get; } Property Value uint[] States Optional show status. TraktShowStatus[] States { get; } Property Value TraktShowStatus[]"
  },
  "api/TraktNet.Parameters.ITraktShowFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktShowFilterBuilder.html",
    "title": "Interface ITraktShowFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktShowFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll Filter builder for ITraktShowFilters. Provides methods for adding values to a ITraktShowFilter. public interface ITraktShowFilterBuilder : ITraktShowAndMovieFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>, ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>, ITraktShowRatingsFilterBuilder, ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder> Inherited Members ITraktShowAndMovieFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithCertifications(string, params string[]) ITraktShowAndMovieFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithCertifications(IEnumerable<string>) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithQuery(string) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithYear(uint) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithYears(uint, uint) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithGenres(string, params string[]) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithGenres(IEnumerable<string>) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithLanguages(string, params string[]) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithLanguages(IEnumerable<string>) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithCountries(string, params string[]) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithCountries(IEnumerable<string>) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithRuntimes(uint, uint) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithStudios(string, params string[]) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithStudios(IEnumerable<string>) ITraktFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.Build() ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithVotes(uint, uint) Methods WithNetworkIds(IEnumerable<uint>) Adds the given networkIds to the builder. Network ids == 0 will be ignored. ITraktShowFilterBuilder WithNetworkIds(IEnumerable<uint> networkIds) Parameters networkIds IEnumerable<uint> A list of network ids which will be added to the builder. Returns ITraktShowFilterBuilder Returns a reference to itself. See also ITraktShowFilterBuilder. Exceptions ArgumentNullException Thrown, if the given networkIds is null. WithNetworkIds(uint, params uint[]) Adds the given networkId and optional list of networkIds to the builder. Network ids == 0 will be ignored. ITraktShowFilterBuilder WithNetworkIds(uint networkId, params uint[] networkIds) Parameters networkId uint A network id which will be added to the builder. networkIds uint[] An optional list of network ids which will be added to the builder. Returns ITraktShowFilterBuilder Returns a reference to itself. See also ITraktShowFilterBuilder. WithStates(IEnumerable<TraktShowStatus>) Adds the given states to the builder. ITraktShowFilterBuilder WithStates(IEnumerable<TraktShowStatus> states) Parameters states IEnumerable<TraktShowStatus> A list of TraktShowStatus which will be added to the builder. Returns ITraktShowFilterBuilder Returns a reference to itself. See also ITraktShowFilterBuilder. Exceptions ArgumentNullException Thrown, if the given states is null. ArgumentException Thrown, if any of the given states has the value Unspecified. WithStates(TraktShowStatus, params TraktShowStatus[]) Adds the given status and optional list of states to the builder. ITraktShowFilterBuilder WithStates(TraktShowStatus status, params TraktShowStatus[] states) Parameters status TraktShowStatus A TraktShowStatus which will be added to the builder. states TraktShowStatus[] An optional list of TraktShowStatus which will be added to the builder. Returns ITraktShowFilterBuilder Returns a reference to itself. See also ITraktShowFilterBuilder. Exceptions ArgumentNullException Thrown, if the given status is null. ArgumentException Thrown, if the given status has the value Unspecified. ArgumentException Thrown, if any of the given states has the value Unspecified."
  },
  "api/TraktNet.Parameters.ITraktShowRatingsFilter.html": {
    "href": "api/TraktNet.Parameters.ITraktShowRatingsFilter.html",
    "title": "Interface ITraktShowRatingsFilter | Trakt.NET",
    "keywords": "Interface ITraktShowRatingsFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktShowRatingsFilter : ITraktCommonRatingsFilter, ITraktBasicRatingsFilter Inherited Members ITraktCommonRatingsFilter.TMDBRatings ITraktCommonRatingsFilter.TMDBVotes ITraktCommonRatingsFilter.IMDBRatings ITraktCommonRatingsFilter.IMDBVotes ITraktBasicRatingsFilter.Ratings ITraktBasicRatingsFilter.Votes ITraktBasicRatingsFilter.HasRatingsValues ITraktBasicRatingsFilter.GetRatingsParameters() ITraktBasicRatingsFilter.RatingsToString()"
  },
  "api/TraktNet.Parameters.ITraktShowRatingsFilterBuilder.html": {
    "href": "api/TraktNet.Parameters.ITraktShowRatingsFilterBuilder.html",
    "title": "Interface ITraktShowRatingsFilterBuilder | Trakt.NET",
    "keywords": "Interface ITraktShowRatingsFilterBuilder Namespace TraktNet.Parameters Assembly Trakt.NET.dll public interface ITraktShowRatingsFilterBuilder : ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>, ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder> Inherited Members ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithTMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithTMDBVotes(uint, uint) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithIMDBRatings(float, float) ITraktCommonRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithIMDBVotes(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithRatings(uint, uint) ITraktBasicRatingsFilterBuilder<ITraktShowFilter, ITraktShowFilterBuilder>.WithVotes(uint, uint)"
  },
  "api/TraktNet.Parameters.TraktCommentQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktCommentQueryParams.html",
    "title": "Struct TraktCommentQueryParams | Trakt.NET",
    "keywords": "Struct TraktCommentQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll A single query parameter for multiple comment queries. Contains a combination of a comment id and an optional extended info. public readonly struct TraktCommentQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktCommentQueryParams(uint, TraktExtendedInfo) Initializes a new instance of the TraktCommentQueryParams class. public TraktCommentQueryParams(uint commentId, TraktExtendedInfo extendedInfo) Parameters commentId uint A comment id. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo. Properties CommentId Returns the comment id. public uint CommentId { get; } Property Value uint ExtendedInfo Returns the optional extended info. Nullable. public TraktExtendedInfo ExtendedInfo { get; } Property Value TraktExtendedInfo"
  },
  "api/TraktNet.Parameters.TraktEpisodeQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktEpisodeQueryParams.html",
    "title": "Struct TraktEpisodeQueryParams | Trakt.NET",
    "keywords": "Struct TraktEpisodeQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll A single query parameter for multiple episode queries. Contains a combination of a show id or slug, a season- and episode-number and an optional extended info. public struct TraktEpisodeQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktEpisodeQueryParams(string, uint, uint, TraktExtendedInfo) Initializes a new instance of the TraktEpisodeQueryParams class. public TraktEpisodeQueryParams(string showId, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo) Parameters showId string A Trakt show id or slug. seasonNumber uint A season number for a season in a show with the given show id. episodeNumber uint An episode number for an episode in the season with the given season number. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo. Properties Episode Returns the episode number. public readonly uint Episode { get; } Property Value uint ExtendedInfo Returns the optional extended info. Nullable. public readonly TraktExtendedInfo ExtendedInfo { get; } Property Value TraktExtendedInfo Season Returns the season number. public readonly uint Season { get; } Property Value uint ShowId Returns the show id or slug. public readonly string ShowId { get; } Property Value string"
  },
  "api/TraktNet.Parameters.TraktExtendedInfo.html": {
    "href": "api/TraktNet.Parameters.TraktExtendedInfo.html",
    "title": "Class TraktExtendedInfo | Trakt.NET",
    "keywords": "Class TraktExtendedInfo Namespace TraktNet.Parameters Assembly Trakt.NET.dll A boolean flag container representing the possible extended options for Trakt requests, allowing retrieving of additional data, such as images. This class has an fluent interface. See \"Trakt API Doc - Extended Info\" for more information. public class TraktExtendedInfo Inheritance object TraktExtendedInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraktExtendedInfo() Initializes a new instance of the TraktExtendedInfo class. All flags are disabled by default. public TraktExtendedInfo() Properties Comments Gets or sets, whether comment media object information should be retrieved. Only supported by GetListLikesAsync(string, TraktExtendedInfo, TraktPagedParameters, CancellationToken). Will be ignored otherwise. See also SetEpisodes() and ResetEpisodes(). public bool Comments { get; set; } Property Value bool Episodes Gets or sets, whether episodes information should be retrieved. Only supported by GetAllSeasonsAsync(string, TraktExtendedInfo, string, CancellationToken). Will be ignored otherwise. See also SetEpisodes() and ResetEpisodes(). public bool Episodes { get; set; } Property Value bool Full Gets or sets, whether full information should be retrieved. See also SetFull() and ResetFull(). public bool Full { get; set; } Property Value bool GuestStars Gets or sets, whether guest_stars information should be retrieved. See also SetGuestStars() and ResetGuestStars(). public bool GuestStars { get; set; } Property Value bool HasAnySet Returns, whether any flag is enabled. public bool HasAnySet { get; } Property Value bool Metadata Gets or sets, whether metadata information should be retrieved. Only supported by GetCollectionMoviesAsync(TraktExtendedInfo, CancellationToken), GetCollectionShowsAsync(TraktExtendedInfo, CancellationToken), GetCollectionMoviesAsync(string, TraktExtendedInfo, CancellationToken) and GetCollectionShowsAsync(string, TraktExtendedInfo, CancellationToken). Will be ignored otherwise. See also SetMetadata() and ResetMetadata(). public bool Metadata { get; set; } Property Value bool NoSeasons Gets or sets, whether no seasons information should be retrieved. Only supported by GetWatchedShowsAsync(TraktExtendedInfo, CancellationToken) and GetWatchedShowsAsync(string, TraktExtendedInfo, CancellationToken). Will be ignored otherwise. See also SetNoSeasons() and ResetNoSeasons(). public bool NoSeasons { get; set; } Property Value bool Vip Gets or sets, whether user vip information should be retrieved. For example supported by GetUserProfileAsync(string, TraktExtendedInfo, CancellationToken). See also SetVip() and ResetVip(). public bool Vip { get; set; } Property Value bool Methods Reset() Disables all flags. public TraktExtendedInfo Reset() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetComments() Disables the comments information flag. See also Comments. public TraktExtendedInfo ResetComments() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetEpisodes() Disables the episodes information flag. See also Episodes. public TraktExtendedInfo ResetEpisodes() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetFull() Disables the full information flag. See also Full. public TraktExtendedInfo ResetFull() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetGuestStars() Disables the guest_stars information flag. See also GuestStars. public TraktExtendedInfo ResetGuestStars() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetMetadata() Disables the metadata information flag. See also Metadata. public TraktExtendedInfo ResetMetadata() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetNoSeasons() Disables the no seasons information flag. See also NoSeasons. public TraktExtendedInfo ResetNoSeasons() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ResetVip() Disables the vip information flag. See also Vip. public TraktExtendedInfo ResetVip() Returns TraktExtendedInfo The current TraktExtendedInfo instance. Resolve() Creates a string representation list of all enabled flags. See also ToString(). public IEnumerable<string> Resolve() Returns IEnumerable<string> A list containing string representations of each enabled flag. SetComments() Enables the comments information flag. See also Comments. public TraktExtendedInfo SetComments() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetEpisodes() Enables the episodes information flag. See also Episodes. public TraktExtendedInfo SetEpisodes() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetFull() Enables the full information flag. See also Full. public TraktExtendedInfo SetFull() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetGuestStars() Enables the guest_stars information flag. See also GuestStars. public TraktExtendedInfo SetGuestStars() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetMetadata() Enables the metadata information flag. See also Metadata. public TraktExtendedInfo SetMetadata() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetNoSeasons() Enables the no seasons information flag. See also NoSeasons. public TraktExtendedInfo SetNoSeasons() Returns TraktExtendedInfo The current TraktExtendedInfo instance. SetVip() Enables the vip information flag. See also Vip. public TraktExtendedInfo SetVip() Returns TraktExtendedInfo The current TraktExtendedInfo instance. ToString() Creates a string containing string representations of all enabled flags separated by a comma. See also Resolve(). public override string ToString() Returns string A string containing string representations of all enabled flags separated by a comma."
  },
  "api/TraktNet.Parameters.TraktFilter.html": {
    "href": "api/TraktNet.Parameters.TraktFilter.html",
    "title": "Class TraktFilter | Trakt.NET",
    "keywords": "Class TraktFilter Namespace TraktNet.Parameters Assembly Trakt.NET.dll public static class TraktFilter Inheritance object TraktFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NewCalendarFilter() Creates a new ITraktCalendarFilterBuilder. public static ITraktCalendarFilterBuilder NewCalendarFilter() Returns ITraktCalendarFilterBuilder An ITraktCalendarFilterBuilder instance. NewMovieFilter() Creates a new ITraktMovieFilterBuilder. public static ITraktMovieFilterBuilder NewMovieFilter() Returns ITraktMovieFilterBuilder An ITraktMovieFilterBuilder instance. NewSearchFilter() Creates a new ITraktSearchFilterBuilder. public static ITraktSearchFilterBuilder NewSearchFilter() Returns ITraktSearchFilterBuilder An ITraktSearchFilterBuilder instance. NewShowFilter() Creates a new ITraktShowFilterBuilder. public static ITraktShowFilterBuilder NewShowFilter() Returns ITraktShowFilterBuilder An ITraktShowFilterBuilder instance."
  },
  "api/TraktNet.Parameters.TraktIncludeReplies.html": {
    "href": "api/TraktNet.Parameters.TraktIncludeReplies.html",
    "title": "Enum TraktIncludeReplies | Trakt.NET",
    "keywords": "Enum TraktIncludeReplies Namespace TraktNet.Parameters Assembly Trakt.NET.dll public enum TraktIncludeReplies Fields False = 1 Only = 2 True = 0"
  },
  "api/TraktNet.Parameters.TraktMultipleCommentsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleCommentsQueryParams.html",
    "title": "Class TraktMultipleCommentsQueryParams | Trakt.NET",
    "keywords": "Class TraktMultipleCommentsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll Collection containing multiple different combinations of comment ids and optionalextended infos. public class TraktMultipleCommentsQueryParams : TraktMultipleQueryParams<TraktCommentQueryParams>, IEnumerable<TraktCommentQueryParams>, IEnumerable Inheritance object TraktMultipleQueryParams<TraktCommentQueryParams> TraktMultipleCommentsQueryParams Implements IEnumerable<TraktCommentQueryParams> IEnumerable Inherited Members TraktMultipleQueryParams<TraktCommentQueryParams>._items TraktMultipleQueryParams<TraktCommentQueryParams>.Add(TraktCommentQueryParams) TraktMultipleQueryParams<TraktCommentQueryParams>.Count TraktMultipleQueryParams<TraktCommentQueryParams>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples This example shows an instantiation of this class. new TraktMultipleCommentsQueryParams { // { comment-id[, extended info] } { 1 }, { 3, new TraktExtendedInfo { Full = true } } }; Methods Add(uint, TraktExtendedInfo) Adds a new episode query parameter pack to the collection. public void Add(uint commentId, TraktExtendedInfo extendedInfo = null) Parameters commentId uint A comment id. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo."
  },
  "api/TraktNet.Parameters.TraktMultipleEpisodesQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleEpisodesQueryParams.html",
    "title": "Class TraktMultipleEpisodesQueryParams | Trakt.NET",
    "keywords": "Class TraktMultipleEpisodesQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll Collection containing multiple different combinations of show ids, season- and episode-numbers and extended infos. public class TraktMultipleEpisodesQueryParams : TraktMultipleQueryParams<TraktEpisodeQueryParams>, IEnumerable<TraktEpisodeQueryParams>, IEnumerable Inheritance object TraktMultipleQueryParams<TraktEpisodeQueryParams> TraktMultipleEpisodesQueryParams Implements IEnumerable<TraktEpisodeQueryParams> IEnumerable Inherited Members TraktMultipleQueryParams<TraktEpisodeQueryParams>._items TraktMultipleQueryParams<TraktEpisodeQueryParams>.Add(TraktEpisodeQueryParams) TraktMultipleQueryParams<TraktEpisodeQueryParams>.Count TraktMultipleQueryParams<TraktEpisodeQueryParams>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples This example shows an instantiation of this class. new TraktMultipleEpisodesQueryParams { // { show-id, seasonnumber, episodenumber[, extended info] } { \"show-id-1\", 1, 1 }, { \"show-id-2\", 3, 5, new TraktExtendedInfo { Full = true } }, { \"show-id-3\", 2, 1 } }; Methods Add(string, uint, uint, TraktExtendedInfo) Adds a new episode query parameter pack to the collection. public void Add(string showId, uint seasonNumber, uint episodeNumber, TraktExtendedInfo extendedInfo = null) Parameters showId string A Trakt show id or slug. seasonNumber uint A season number for a season in a show with the given show id. episodeNumber uint An episode number for an episode in the season with the given season number. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo."
  },
  "api/TraktNet.Parameters.TraktMultipleObjectsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleObjectsQueryParams.html",
    "title": "Class TraktMultipleObjectsQueryParams | Trakt.NET",
    "keywords": "Class TraktMultipleObjectsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll Collection containing multiple different combinations of ids and extended infos. public class TraktMultipleObjectsQueryParams : TraktMultipleQueryParams<TraktObjectsQueryParams>, IEnumerable<TraktObjectsQueryParams>, IEnumerable Inheritance object TraktMultipleQueryParams<TraktObjectsQueryParams> TraktMultipleObjectsQueryParams Implements IEnumerable<TraktObjectsQueryParams> IEnumerable Inherited Members TraktMultipleQueryParams<TraktObjectsQueryParams>._items TraktMultipleQueryParams<TraktObjectsQueryParams>.Add(TraktObjectsQueryParams) TraktMultipleQueryParams<TraktObjectsQueryParams>.Count TraktMultipleQueryParams<TraktObjectsQueryParams>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples This example shows an instantiation of this class. new TraktMultipleObjectsQueryParams { // { id[, extended info] } \"id-1\", { \"id-2\", new TraktExtendedInfo { Full = true } }, \"id-3\" }; Methods Add(string, TraktExtendedInfo) Adds a new object query parameter pack to the collection. public void Add(string idOrSlug, TraktExtendedInfo extendedInfo = null) Parameters idOrSlug string A Trakt id or slug. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo."
  },
  "api/TraktNet.Parameters.TraktMultipleQueryParams-1.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleQueryParams-1.html",
    "title": "Class TraktMultipleQueryParams<T> | Trakt.NET",
    "keywords": "Class TraktMultipleQueryParams<T> Namespace TraktNet.Parameters Assembly Trakt.NET.dll public abstract class TraktMultipleQueryParams<T> : IEnumerable<T>, IEnumerable Type Parameters T Inheritance object TraktMultipleQueryParams<T> Implements IEnumerable<T> IEnumerable Derived TraktMultipleCommentsQueryParams TraktMultipleEpisodesQueryParams TraktMultipleObjectsQueryParams TraktMultipleSeasonsQueryParams TraktMultipleUserListsQueryParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TraktMultipleQueryParams() protected TraktMultipleQueryParams() Fields _items protected readonly List<T> _items Field Value List<T> Properties Count Gets the count of query parameters. public int Count { get; } Property Value int Methods Add(T) Generic method for adding a generic query parameter. public void Add(T item) Parameters item T GetEnumerator() public IEnumerator<T> GetEnumerator() Returns IEnumerator<T>"
  },
  "api/TraktNet.Parameters.TraktMultipleSeasonsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleSeasonsQueryParams.html",
    "title": "Class TraktMultipleSeasonsQueryParams | Trakt.NET",
    "keywords": "Class TraktMultipleSeasonsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll Collection containing multiple different combinations of show ids, season-numbers and extended infos. public class TraktMultipleSeasonsQueryParams : TraktMultipleQueryParams<TraktSeasonsQueryParams>, IEnumerable<TraktSeasonsQueryParams>, IEnumerable Inheritance object TraktMultipleQueryParams<TraktSeasonsQueryParams> TraktMultipleSeasonsQueryParams Implements IEnumerable<TraktSeasonsQueryParams> IEnumerable Inherited Members TraktMultipleQueryParams<TraktSeasonsQueryParams>._items TraktMultipleQueryParams<TraktSeasonsQueryParams>.Add(TraktSeasonsQueryParams) TraktMultipleQueryParams<TraktSeasonsQueryParams>.Count TraktMultipleQueryParams<TraktSeasonsQueryParams>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples This example shows an instantiation of this class. new TraktMultipleSeasonsQueryParams { // { show-id, seasonnumber[, extended info][, language code] } { \"show-id-1\", 1 }, { \"show-id-1\", 1, \"en\" }, { \"show-id-2\", 3, new TraktExtendedInfo { Full = true } }, { \"show-id-2\", 3, new TraktExtendedInfo { Full = true }, \"en\" }, { \"show-id-3\", 2 } }; Methods Add(string, uint, string) Adds a new season query parameter pack to the collection. public void Add(string showId, uint seasonNumber, string translationLanguageCode) Parameters showId string A Trakt show id or slug. seasonNumber uint A season number for a season in a show with the given show id. translationLanguageCode string An two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations. Add(string, uint, TraktExtendedInfo, string) Adds a new season query parameter pack to the collection. public void Add(string showId, uint seasonNumber, TraktExtendedInfo extendedInfo = null, string translationLanguageCode = null) Parameters showId string A Trakt show id or slug. seasonNumber uint A season number for a season in a show with the given show id. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo. translationLanguageCode string An optional two letter language code to query a specific translation for the returned episodes. Set this to \"all\" to get all available translations."
  },
  "api/TraktNet.Parameters.TraktMultipleUserListsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktMultipleUserListsQueryParams.html",
    "title": "Class TraktMultipleUserListsQueryParams | Trakt.NET",
    "keywords": "Class TraktMultipleUserListsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll Collection containing multiple different combinations of usernames and list ids. public class TraktMultipleUserListsQueryParams : TraktMultipleQueryParams<TraktUserListsQueryParams>, IEnumerable<TraktUserListsQueryParams>, IEnumerable Inheritance object TraktMultipleQueryParams<TraktUserListsQueryParams> TraktMultipleUserListsQueryParams Implements IEnumerable<TraktUserListsQueryParams> IEnumerable Inherited Members TraktMultipleQueryParams<TraktUserListsQueryParams>._items TraktMultipleQueryParams<TraktUserListsQueryParams>.Add(TraktUserListsQueryParams) TraktMultipleQueryParams<TraktUserListsQueryParams>.Count TraktMultipleQueryParams<TraktUserListsQueryParams>.GetEnumerator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples This example shows an instantiation of this class. new TraktMultipleUserListsQueryParams { // { username, list-id } { \"username-1\", \"list-id-1\" }, { \"username-2\", \"list-id-3\" }, { \"username-3\", \"list-id-5\" } }; Methods Add(string, string) Adds a new user list query parameter pack to the collection. public void Add(string usernameOrSlug, string listIdOrSlug) Parameters usernameOrSlug string An username or slug for a Trakt user. listIdOrSlug string A list id or slug for a list, which belongs the an user with the given username or slug."
  },
  "api/TraktNet.Parameters.TraktObjectsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktObjectsQueryParams.html",
    "title": "Struct TraktObjectsQueryParams | Trakt.NET",
    "keywords": "Struct TraktObjectsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll A single query parameter for multiple object queries. Contains a combination of a id or slug and an optional extended info. public struct TraktObjectsQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktObjectsQueryParams(string, TraktExtendedInfo) Initializes a new instance of the TraktSeasonsQueryParams class. public TraktObjectsQueryParams(string idOrSlug, TraktExtendedInfo extendedInfo) Parameters idOrSlug string A Trakt id or slug. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo. Properties ExtendedInfo Returns the optional extended info. Nullable. public readonly TraktExtendedInfo ExtendedInfo { get; } Property Value TraktExtendedInfo Id Returns the Trakt id or slug. public readonly string Id { get; } Property Value string"
  },
  "api/TraktNet.Parameters.TraktPagedParameters.html": {
    "href": "api/TraktNet.Parameters.TraktPagedParameters.html",
    "title": "Class TraktPagedParameters | Trakt.NET",
    "keywords": "Class TraktPagedParameters Namespace TraktNet.Parameters Assembly Trakt.NET.dll Container class for pagination parameters. See \"Trakt API Doc - Pagination\" for more information. public sealed class TraktPagedParameters Inheritance object TraktPagedParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TraktPagedParameters(uint?, uint?) Initializes a new instance of TraktPagedParameters. public TraktPagedParameters(uint? page = null, uint? limit = null) Parameters page uint? Number of page of results to be returned. Defaults to the first page. limit uint? Number of results to return per page. Defaults to 10. Properties Limit Number of results to return per page. Defaults to 10. public uint? Limit { get; set; } Property Value uint? Page Number of page of results to be returned. Defaults to the first page. public uint? Page { get; set; } Property Value uint?"
  },
  "api/TraktNet.Parameters.TraktSeasonsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktSeasonsQueryParams.html",
    "title": "Struct TraktSeasonsQueryParams | Trakt.NET",
    "keywords": "Struct TraktSeasonsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll A single query parameter for multiple season queries. Contains a combination of a show id or slug, a season-number and an optional extended info. public struct TraktSeasonsQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktSeasonsQueryParams(string, uint, TraktExtendedInfo, string) Initializes a new instance of the TraktSeasonsQueryParams class. public TraktSeasonsQueryParams(string showId, uint seasonNumber, TraktExtendedInfo extendedInfo, string translationLanguageCode) Parameters showId string A Trakt show id or slug. seasonNumber uint A season number for a season in a show with the given show id. extendedInfo TraktExtendedInfo An optional extended info. See also TraktExtendedInfo. translationLanguageCode string Properties ExtendedInfo Returns the optional extended info. Nullable. public readonly TraktExtendedInfo ExtendedInfo { get; } Property Value TraktExtendedInfo Season Returns the season number. public readonly uint Season { get; } Property Value uint ShowId Returns the show id or slug. public readonly string ShowId { get; } Property Value string TranslationLanguageCode Returns the optional translation language code. Nullable public readonly string TranslationLanguageCode { get; } Property Value string"
  },
  "api/TraktNet.Parameters.TraktUserListsQueryParams.html": {
    "href": "api/TraktNet.Parameters.TraktUserListsQueryParams.html",
    "title": "Struct TraktUserListsQueryParams | Trakt.NET",
    "keywords": "Struct TraktUserListsQueryParams Namespace TraktNet.Parameters Assembly Trakt.NET.dll A single query parameter for multiple user list queries. Contains a combination of an username or slug and a list id. public struct TraktUserListsQueryParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TraktUserListsQueryParams(string, string) Initializes a new instance of the TraktUserListsQueryParams class. public TraktUserListsQueryParams(string username, string listIdOrSlug) Parameters username string A username or slug for a Trakt user. listIdOrSlug string A list id or slug for a list, which belongs the an user with the given username or slug. Properties ListId Returns the list id. public readonly string ListId { get; } Property Value string Username Returns the username of slug for a Trakt user. public readonly string Username { get; } Property Value string"
  },
  "api/TraktNet.Parameters.html": {
    "href": "api/TraktNet.Parameters.html",
    "title": "Namespace TraktNet.Parameters | Trakt.NET",
    "keywords": "Namespace TraktNet.Parameters Classes TraktExtendedInfo A boolean flag container representing the possible extended options for Trakt requests, allowing retrieving of additional data, such as images. This class has an fluent interface. See \"Trakt API Doc - Extended Info\" for more information. TraktFilter TraktMultipleCommentsQueryParams Collection containing multiple different combinations of comment ids and optionalextended infos. TraktMultipleEpisodesQueryParams Collection containing multiple different combinations of show ids, season- and episode-numbers and extended infos. TraktMultipleObjectsQueryParams Collection containing multiple different combinations of ids and extended infos. TraktMultipleQueryParams<T> TraktMultipleSeasonsQueryParams Collection containing multiple different combinations of show ids, season-numbers and extended infos. TraktMultipleUserListsQueryParams Collection containing multiple different combinations of usernames and list ids. TraktPagedParameters Container class for pagination parameters. See \"Trakt API Doc - Pagination\" for more information. Structs TraktCommentQueryParams A single query parameter for multiple comment queries. Contains a combination of a comment id and an optional extended info. TraktEpisodeQueryParams A single query parameter for multiple episode queries. Contains a combination of a show id or slug, a season- and episode-number and an optional extended info. TraktObjectsQueryParams A single query parameter for multiple object queries. Contains a combination of a id or slug and an optional extended info. TraktSeasonsQueryParams A single query parameter for multiple season queries. Contains a combination of a show id or slug, a season-number and an optional extended info. TraktUserListsQueryParams A single query parameter for multiple user list queries. Contains a combination of an username or slug and a list id. Interfaces ITraktBasicRatingsFilter ITraktBasicRatingsFilterBuilder<TFilter, TFilterBuilder> ITraktCalendarFilter A filter for calendar requests. ITraktCalendarFilterBuilder Filter builder for ITraktCalendarFilters. Provides methods for adding values to a ITraktCalendarFilter. ITraktCalendarRatingsFilter ITraktCalendarRatingsFilterBuilder ITraktCommonRatingsFilter ITraktCommonRatingsFilterBuilder<TFilter, TFilterBuilder> ITraktFilter ITraktFilterBuilder<TFilter, TFilterBuilder> ITraktMovieFilter A filter for movie requests. ITraktMovieFilterBuilder Filter builder for ITraktMovieFilters. Provides methods for adding values to a ITraktMovieFilter. ITraktMovieRatingsFilter ITraktMovieRatingsFilterBuilder ITraktSearchFilter A filter for search requests. ITraktSearchFilterBuilder Filter builder for ITraktSearchFilters. Provides methods for adding values to a ITraktSearchFilter. ITraktSearchRatingsFilterBuilder ITraktShowAndMovieFilter ITraktShowAndMovieFilterBuilder<TFilter, TFilterBuilder> ITraktShowFilter A filter for show requests. ITraktShowFilterBuilder Filter builder for ITraktShowFilters. Provides methods for adding values to a ITraktShowFilter. ITraktShowRatingsFilter ITraktShowRatingsFilterBuilder Enums TraktIncludeReplies"
  },
  "api/TraktNet.PostBuilder.CollectedEntry-1.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEntry-1.html",
    "title": "Class CollectedEntry<T> | Trakt.NET",
    "keywords": "Class CollectedEntry<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class CollectedEntry<T> : CollectionEntry<T> Type Parameters T Inheritance object CollectionEntry<T> CollectedEntry<T> Derived CollectedEpisode CollectedEpisodeIds CollectedMovie CollectedMovieIds CollectedSeason CollectedSeasonIds CollectedShow CollectedShowIds Inherited Members CollectionEntry<T>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEntry(T, DateTime) protected CollectedEntry(T obj, DateTime collectedAt) Parameters obj T collectedAt DateTime Properties CollectedAt public DateTime CollectedAt { get; } Property Value DateTime"
  },
  "api/TraktNet.PostBuilder.CollectedEntryWithMetadata-1.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEntryWithMetadata-1.html",
    "title": "Class CollectedEntryWithMetadata<T> | Trakt.NET",
    "keywords": "Class CollectedEntryWithMetadata<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class CollectedEntryWithMetadata<T> : EntryWithMetadata<T> Type Parameters T Inheritance object CollectionEntry<T> EntryWithMetadata<T> CollectedEntryWithMetadata<T> Derived CollectedEpisodeIdsWithMetadata CollectedEpisodeWithMetadata CollectedMovieIdsWithMetadata CollectedMovieWithMetadata CollectedSeasonIdsWithMetadata CollectedSeasonWithMetadata CollectedShowIdsWithMetadata CollectedShowWithMetadata Inherited Members EntryWithMetadata<T>.Metadata CollectionEntry<T>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEntryWithMetadata(T, ITraktMetadata, DateTime) protected CollectedEntryWithMetadata(T obj, ITraktMetadata metadata, DateTime collectedAt) Parameters obj T metadata ITraktMetadata collectedAt DateTime Properties CollectedAt public DateTime CollectedAt { get; } Property Value DateTime"
  },
  "api/TraktNet.PostBuilder.CollectedEpisode.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEpisode.html",
    "title": "Class CollectedEpisode | Trakt.NET",
    "keywords": "Class CollectedEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with a UTC datetime, when it was collected. public sealed class CollectedEpisode : CollectedEntry<ITraktEpisode> Inheritance object CollectionEntry<ITraktEpisode> CollectedEntry<ITraktEpisode> CollectedEpisode Inherited Members CollectedEntry<ITraktEpisode>.CollectedAt CollectionEntry<ITraktEpisode>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEpisode(ITraktEpisode, DateTime) Initializes a new instance of the CollectedEpisode class. public CollectedEpisode(ITraktEpisode episode, DateTime collectedAt) Parameters episode ITraktEpisode A collected ITraktEpisode. collectedAt DateTime The UTC datetime when the episode was collected."
  },
  "api/TraktNet.PostBuilder.CollectedEpisodeIds.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEpisodeIds.html",
    "title": "Class CollectedEpisodeIds | Trakt.NET",
    "keywords": "Class CollectedEpisodeIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with a UTC datetime, when it was collected. public sealed class CollectedEpisodeIds : CollectedEntry<ITraktEpisodeIds> Inheritance object CollectionEntry<ITraktEpisodeIds> CollectedEntry<ITraktEpisodeIds> CollectedEpisodeIds Inherited Members CollectedEntry<ITraktEpisodeIds>.CollectedAt CollectionEntry<ITraktEpisodeIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEpisodeIds(ITraktEpisodeIds, DateTime) Initializes a new instance of the CollectedEpisodeIds class. public CollectedEpisodeIds(ITraktEpisodeIds episodeIds, DateTime collectedAt) Parameters episodeIds ITraktEpisodeIds A collected ITraktEpisodeIds. collectedAt DateTime The UTC datetime when the episodeIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedEpisodeIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEpisodeIdsWithMetadata.html",
    "title": "Class CollectedEpisodeIdsWithMetadata | Trakt.NET",
    "keywords": "Class CollectedEpisodeIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedEpisodeIdsWithMetadata : CollectedEntryWithMetadata<ITraktEpisodeIds> Inheritance object CollectionEntry<ITraktEpisodeIds> EntryWithMetadata<ITraktEpisodeIds> CollectedEntryWithMetadata<ITraktEpisodeIds> CollectedEpisodeIdsWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktEpisodeIds>.CollectedAt EntryWithMetadata<ITraktEpisodeIds>.Metadata CollectionEntry<ITraktEpisodeIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEpisodeIdsWithMetadata(ITraktEpisodeIds, ITraktMetadata, DateTime) Initializes a new instance of the CollectedEpisodeIdsWithMetadata class. public CollectedEpisodeIdsWithMetadata(ITraktEpisodeIds episodeIds, ITraktMetadata metadata, DateTime collectedAt) Parameters episodeIds ITraktEpisodeIds A collected ITraktEpisodeIds. metadata ITraktMetadata The ITraktMetadata for the episodeIds. collectedAt DateTime The UTC datetime when the episodeIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedEpisodeWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedEpisodeWithMetadata.html",
    "title": "Class CollectedEpisodeWithMetadata | Trakt.NET",
    "keywords": "Class CollectedEpisodeWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedEpisodeWithMetadata : CollectedEntryWithMetadata<ITraktEpisode> Inheritance object CollectionEntry<ITraktEpisode> EntryWithMetadata<ITraktEpisode> CollectedEntryWithMetadata<ITraktEpisode> CollectedEpisodeWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktEpisode>.CollectedAt EntryWithMetadata<ITraktEpisode>.Metadata CollectionEntry<ITraktEpisode>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedEpisodeWithMetadata(ITraktEpisode, ITraktMetadata, DateTime) Initializes a new instance of the CollectedEpisodeWithMetadata class. public CollectedEpisodeWithMetadata(ITraktEpisode episode, ITraktMetadata metadata, DateTime collectedAt) Parameters episode ITraktEpisode A collected ITraktEpisode. metadata ITraktMetadata The ITraktMetadata for the episode. collectedAt DateTime The UTC datetime when the episode was collected."
  },
  "api/TraktNet.PostBuilder.CollectedMovie.html": {
    "href": "api/TraktNet.PostBuilder.CollectedMovie.html",
    "title": "Class CollectedMovie | Trakt.NET",
    "keywords": "Class CollectedMovie Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with a UTC datetime, when it was collected. public sealed class CollectedMovie : CollectedEntry<ITraktMovie> Inheritance object CollectionEntry<ITraktMovie> CollectedEntry<ITraktMovie> CollectedMovie Inherited Members CollectedEntry<ITraktMovie>.CollectedAt CollectionEntry<ITraktMovie>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedMovie(ITraktMovie, DateTime) Initializes a new instance of the CollectedMovie class. public CollectedMovie(ITraktMovie movie, DateTime collectedAt) Parameters movie ITraktMovie A collected ITraktMovie. collectedAt DateTime The UTC datetime when the movie was collected."
  },
  "api/TraktNet.PostBuilder.CollectedMovieIds.html": {
    "href": "api/TraktNet.PostBuilder.CollectedMovieIds.html",
    "title": "Class CollectedMovieIds | Trakt.NET",
    "keywords": "Class CollectedMovieIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with a UTC datetime, when it was collected. public sealed class CollectedMovieIds : CollectedEntry<ITraktMovieIds> Inheritance object CollectionEntry<ITraktMovieIds> CollectedEntry<ITraktMovieIds> CollectedMovieIds Inherited Members CollectedEntry<ITraktMovieIds>.CollectedAt CollectionEntry<ITraktMovieIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedMovieIds(ITraktMovieIds, DateTime) Initializes a new instance of the CollectedMovieIds class. public CollectedMovieIds(ITraktMovieIds movieIds, DateTime collectedAt) Parameters movieIds ITraktMovieIds A collected ITraktMovieIds. collectedAt DateTime The UTC datetime when the movieIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedMovieIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedMovieIdsWithMetadata.html",
    "title": "Class CollectedMovieIdsWithMetadata | Trakt.NET",
    "keywords": "Class CollectedMovieIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedMovieIdsWithMetadata : CollectedEntryWithMetadata<ITraktMovieIds> Inheritance object CollectionEntry<ITraktMovieIds> EntryWithMetadata<ITraktMovieIds> CollectedEntryWithMetadata<ITraktMovieIds> CollectedMovieIdsWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktMovieIds>.CollectedAt EntryWithMetadata<ITraktMovieIds>.Metadata CollectionEntry<ITraktMovieIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedMovieIdsWithMetadata(ITraktMovieIds, ITraktMetadata, DateTime) Initializes a new instance of the CollectedMovieIdsWithMetadata class. public CollectedMovieIdsWithMetadata(ITraktMovieIds movieIds, ITraktMetadata metadata, DateTime collectedAt) Parameters movieIds ITraktMovieIds A collected ITraktMovieIds. metadata ITraktMetadata The ITraktMetadata for the movieIds. collectedAt DateTime The UTC datetime when the movieIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedMovieWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedMovieWithMetadata.html",
    "title": "Class CollectedMovieWithMetadata | Trakt.NET",
    "keywords": "Class CollectedMovieWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedMovieWithMetadata : CollectedEntryWithMetadata<ITraktMovie> Inheritance object CollectionEntry<ITraktMovie> EntryWithMetadata<ITraktMovie> CollectedEntryWithMetadata<ITraktMovie> CollectedMovieWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktMovie>.CollectedAt EntryWithMetadata<ITraktMovie>.Metadata CollectionEntry<ITraktMovie>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedMovieWithMetadata(ITraktMovie, ITraktMetadata, DateTime) Initializes a new instance of the CollectedMovieWithMetadata class. public CollectedMovieWithMetadata(ITraktMovie movie, ITraktMetadata metadata, DateTime collectedAt) Parameters movie ITraktMovie A collected ITraktMovie. metadata ITraktMetadata The ITraktMetadata for the movie. collectedAt DateTime The UTC datetime when the movie was collected."
  },
  "api/TraktNet.PostBuilder.CollectedSeason.html": {
    "href": "api/TraktNet.PostBuilder.CollectedSeason.html",
    "title": "Class CollectedSeason | Trakt.NET",
    "keywords": "Class CollectedSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with a UTC datetime, when it was collected. public sealed class CollectedSeason : CollectedEntry<ITraktSeason> Inheritance object CollectionEntry<ITraktSeason> CollectedEntry<ITraktSeason> CollectedSeason Inherited Members CollectedEntry<ITraktSeason>.CollectedAt CollectionEntry<ITraktSeason>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedSeason(ITraktSeason, DateTime) Initializes a new instance of the CollectedSeason class. public CollectedSeason(ITraktSeason season, DateTime collectedAt) Parameters season ITraktSeason A collected ITraktSeason. collectedAt DateTime The UTC datetime when the season was collected."
  },
  "api/TraktNet.PostBuilder.CollectedSeasonIds.html": {
    "href": "api/TraktNet.PostBuilder.CollectedSeasonIds.html",
    "title": "Class CollectedSeasonIds | Trakt.NET",
    "keywords": "Class CollectedSeasonIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with a UTC datetime, when it was collected. public sealed class CollectedSeasonIds : CollectedEntry<ITraktSeasonIds> Inheritance object CollectionEntry<ITraktSeasonIds> CollectedEntry<ITraktSeasonIds> CollectedSeasonIds Inherited Members CollectedEntry<ITraktSeasonIds>.CollectedAt CollectionEntry<ITraktSeasonIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedSeasonIds(ITraktSeasonIds, DateTime) Initializes a new instance of the CollectedSeasonIds class. public CollectedSeasonIds(ITraktSeasonIds seasonIds, DateTime collectedAt) Parameters seasonIds ITraktSeasonIds A collected ITraktSeasonIds. collectedAt DateTime The UTC datetime when the seasonIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedSeasonIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedSeasonIdsWithMetadata.html",
    "title": "Class CollectedSeasonIdsWithMetadata | Trakt.NET",
    "keywords": "Class CollectedSeasonIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedSeasonIdsWithMetadata : CollectedEntryWithMetadata<ITraktSeasonIds> Inheritance object CollectionEntry<ITraktSeasonIds> EntryWithMetadata<ITraktSeasonIds> CollectedEntryWithMetadata<ITraktSeasonIds> CollectedSeasonIdsWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktSeasonIds>.CollectedAt EntryWithMetadata<ITraktSeasonIds>.Metadata CollectionEntry<ITraktSeasonIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedSeasonIdsWithMetadata(ITraktSeasonIds, ITraktMetadata, DateTime) Initializes a new instance of the CollectedSeasonIdsWithMetadata class. public CollectedSeasonIdsWithMetadata(ITraktSeasonIds seasonIds, ITraktMetadata metadata, DateTime collectedAt) Parameters seasonIds ITraktSeasonIds A collected ITraktSeasonIds. metadata ITraktMetadata The ITraktMetadata for the seasonIds. collectedAt DateTime The UTC datetime when the seasonIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedSeasonWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedSeasonWithMetadata.html",
    "title": "Class CollectedSeasonWithMetadata | Trakt.NET",
    "keywords": "Class CollectedSeasonWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedSeasonWithMetadata : CollectedEntryWithMetadata<ITraktSeason> Inheritance object CollectionEntry<ITraktSeason> EntryWithMetadata<ITraktSeason> CollectedEntryWithMetadata<ITraktSeason> CollectedSeasonWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktSeason>.CollectedAt EntryWithMetadata<ITraktSeason>.Metadata CollectionEntry<ITraktSeason>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedSeasonWithMetadata(ITraktSeason, ITraktMetadata, DateTime) Initializes a new instance of the CollectedSeasonWithMetadata class. public CollectedSeasonWithMetadata(ITraktSeason season, ITraktMetadata metadata, DateTime collectedAt) Parameters season ITraktSeason A collected ITraktSeason. metadata ITraktMetadata The ITraktMetadata for the season. collectedAt DateTime The UTC datetime when the season was collected."
  },
  "api/TraktNet.PostBuilder.CollectedShow.html": {
    "href": "api/TraktNet.PostBuilder.CollectedShow.html",
    "title": "Class CollectedShow | Trakt.NET",
    "keywords": "Class CollectedShow Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a UTC datetime, when it was collected. public sealed class CollectedShow : CollectedEntry<ITraktShow> Inheritance object CollectionEntry<ITraktShow> CollectedEntry<ITraktShow> CollectedShow Inherited Members CollectedEntry<ITraktShow>.CollectedAt CollectionEntry<ITraktShow>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedShow(ITraktShow, DateTime) Initializes a new instance of the CollectedShow class. public CollectedShow(ITraktShow show, DateTime collectedAt) Parameters show ITraktShow A collected ITraktShow. collectedAt DateTime The UTC datetime when the show was collected."
  },
  "api/TraktNet.PostBuilder.CollectedShowIds.html": {
    "href": "api/TraktNet.PostBuilder.CollectedShowIds.html",
    "title": "Class CollectedShowIds | Trakt.NET",
    "keywords": "Class CollectedShowIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a UTC datetime, when it was collected. public sealed class CollectedShowIds : CollectedEntry<ITraktShowIds> Inheritance object CollectionEntry<ITraktShowIds> CollectedEntry<ITraktShowIds> CollectedShowIds Inherited Members CollectedEntry<ITraktShowIds>.CollectedAt CollectionEntry<ITraktShowIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedShowIds(ITraktShowIds, DateTime) Initializes a new instance of the CollectedShowIds class. public CollectedShowIds(ITraktShowIds showIds, DateTime collectedAt) Parameters showIds ITraktShowIds A collected ITraktShowIds. collectedAt DateTime The UTC datetime when the showIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedShowIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedShowIdsWithMetadata.html",
    "title": "Class CollectedShowIdsWithMetadata | Trakt.NET",
    "keywords": "Class CollectedShowIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedShowIdsWithMetadata : CollectedEntryWithMetadata<ITraktShowIds> Inheritance object CollectionEntry<ITraktShowIds> EntryWithMetadata<ITraktShowIds> CollectedEntryWithMetadata<ITraktShowIds> CollectedShowIdsWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktShowIds>.CollectedAt EntryWithMetadata<ITraktShowIds>.Metadata CollectionEntry<ITraktShowIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedShowIdsWithMetadata(ITraktShowIds, ITraktMetadata, DateTime) Initializes a new instance of the CollectedShowIdsWithMetadata class. public CollectedShowIdsWithMetadata(ITraktShowIds showIds, ITraktMetadata metadata, DateTime collectedAt) Parameters showIds ITraktShowIds A collected ITraktShowIds. metadata ITraktMetadata The ITraktMetadata for the showIds. collectedAt DateTime The UTC datetime when the showIds was collected."
  },
  "api/TraktNet.PostBuilder.CollectedShowWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.CollectedShowWithMetadata.html",
    "title": "Class CollectedShowWithMetadata | Trakt.NET",
    "keywords": "Class CollectedShowWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with ITraktMetadata and a UTC datetime, when it was collected. public sealed class CollectedShowWithMetadata : CollectedEntryWithMetadata<ITraktShow> Inheritance object CollectionEntry<ITraktShow> EntryWithMetadata<ITraktShow> CollectedEntryWithMetadata<ITraktShow> CollectedShowWithMetadata Inherited Members CollectedEntryWithMetadata<ITraktShow>.CollectedAt EntryWithMetadata<ITraktShow>.Metadata CollectionEntry<ITraktShow>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectedShowWithMetadata(ITraktShow, ITraktMetadata, DateTime) Initializes a new instance of the CollectedShowWithMetadata class. public CollectedShowWithMetadata(ITraktShow show, ITraktMetadata metadata, DateTime collectedAt) Parameters show ITraktShow A collected ITraktShow. metadata ITraktMetadata The ITraktMetadata for the show. collectedAt DateTime The UTC datetime when the show was collected."
  },
  "api/TraktNet.PostBuilder.CollectionAndSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.CollectionAndSeasons-1.html",
    "title": "Class CollectionAndSeasons<T> | Trakt.NET",
    "keywords": "Class CollectionAndSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class CollectionAndSeasons<T> Type Parameters T Inheritance object CollectionAndSeasons<T> Derived CollectionShowAndSeasons CollectionShowIdsAndSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CollectionAndSeasons(T, PostCollectionSeasons) protected CollectionAndSeasons(T obj, PostCollectionSeasons seasons) Parameters obj T seasons PostCollectionSeasons Properties Object public T Object { get; } Property Value T Seasons public PostCollectionSeasons Seasons { get; } Property Value PostCollectionSeasons"
  },
  "api/TraktNet.PostBuilder.CollectionEntry-1.html": {
    "href": "api/TraktNet.PostBuilder.CollectionEntry-1.html",
    "title": "Class CollectionEntry<T> | Trakt.NET",
    "keywords": "Class CollectionEntry<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class CollectionEntry<T> Type Parameters T Inheritance object CollectionEntry<T> Derived CollectedEntry<T> EntryWithMetadata<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CollectionEntry(T) protected CollectionEntry(T obj) Parameters obj T Properties Object public T Object { get; } Property Value T"
  },
  "api/TraktNet.PostBuilder.CollectionShowAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.CollectionShowAndSeasons.html",
    "title": "Class CollectionShowAndSeasons | Trakt.NET",
    "keywords": "Class CollectionShowAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a collection of seasons and episodes. See also PostCollectionSeasons. public sealed class CollectionShowAndSeasons : CollectionAndSeasons<ITraktShow> Inheritance object CollectionAndSeasons<ITraktShow> CollectionShowAndSeasons Inherited Members CollectionAndSeasons<ITraktShow>.Object CollectionAndSeasons<ITraktShow>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectionShowAndSeasons(ITraktShow, PostCollectionSeasons) Initializes a new instance of the CollectionShowAndSeasons class. public CollectionShowAndSeasons(ITraktShow show, PostCollectionSeasons seasons) Parameters show ITraktShow A collected ITraktShow. seasons PostCollectionSeasons A collection of seasons and episodes for the show. See also PostCollectionSeasons."
  },
  "api/TraktNet.PostBuilder.CollectionShowIdsAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.CollectionShowIdsAndSeasons.html",
    "title": "Class CollectionShowIdsAndSeasons | Trakt.NET",
    "keywords": "Class CollectionShowIdsAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a collection of seasons and episodes. See also PostCollectionSeasons. public sealed class CollectionShowIdsAndSeasons : CollectionAndSeasons<ITraktShowIds> Inheritance object CollectionAndSeasons<ITraktShowIds> CollectionShowIdsAndSeasons Inherited Members CollectionAndSeasons<ITraktShowIds>.Object CollectionAndSeasons<ITraktShowIds>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CollectionShowIdsAndSeasons(ITraktShowIds, PostCollectionSeasons) Initializes a new instance of the CollectionShowIdsAndSeasons class. public CollectionShowIdsAndSeasons(ITraktShowIds showIds, PostCollectionSeasons seasons) Parameters showIds ITraktShowIds A collected ITraktShowIds. seasons PostCollectionSeasons A collection of seasons and episodes for the showIds. See also PostCollectionSeasons."
  },
  "api/TraktNet.PostBuilder.EntryWithMetadata-1.html": {
    "href": "api/TraktNet.PostBuilder.EntryWithMetadata-1.html",
    "title": "Class EntryWithMetadata<T> | Trakt.NET",
    "keywords": "Class EntryWithMetadata<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class EntryWithMetadata<T> : CollectionEntry<T> Type Parameters T Inheritance object CollectionEntry<T> EntryWithMetadata<T> Derived CollectedEntryWithMetadata<T> EpisodeIdsWithMetadata EpisodeWithMetadata MovieIdsWithMetadata MovieWithMetadata SeasonIdsWithMetadata SeasonWithMetadata ShowIdsWithMetadata ShowWithMetadata Inherited Members CollectionEntry<T>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntryWithMetadata(T, ITraktMetadata) protected EntryWithMetadata(T obj, ITraktMetadata metadata) Parameters obj T metadata ITraktMetadata Properties Metadata public ITraktMetadata Metadata { get; } Property Value ITraktMetadata"
  },
  "api/TraktNet.PostBuilder.EntryWithNotes-1.html": {
    "href": "api/TraktNet.PostBuilder.EntryWithNotes-1.html",
    "title": "Class EntryWithNotes<T> | Trakt.NET",
    "keywords": "Class EntryWithNotes<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class EntryWithNotes<T> Type Parameters T Inheritance object EntryWithNotes<T> Derived EpisodeIdsWithNotes EpisodeWithNotes MovieIdsWithNotes MovieWithNotes PersonIdsWithNotes PersonWithNotes SeasonIdsWithNotes SeasonWithNotes ShowIdsWithNotes ShowWithNotes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntryWithNotes(T, string) protected EntryWithNotes(T obj, string notes) Parameters obj T notes string Properties Notes public string Notes { get; } Property Value string Object public T Object { get; } Property Value T"
  },
  "api/TraktNet.PostBuilder.EntryWithNotesAndSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.EntryWithNotesAndSeasons-1.html",
    "title": "Class EntryWithNotesAndSeasons<T> | Trakt.NET",
    "keywords": "Class EntryWithNotesAndSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class EntryWithNotesAndSeasons<T> Type Parameters T Inheritance object EntryWithNotesAndSeasons<T> Derived ShowIdsWithNotesAndSeasons ShowWithNotesAndSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EntryWithNotesAndSeasons(T, PostSeasons) protected EntryWithNotesAndSeasons(T obj, PostSeasons seasons) Parameters obj T seasons PostSeasons Properties Object public T Object { get; } Property Value T Seasons public PostSeasons Seasons { get; } Property Value PostSeasons"
  },
  "api/TraktNet.PostBuilder.EpisodeIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.EpisodeIdsWithMetadata.html",
    "title": "Class EpisodeIdsWithMetadata | Trakt.NET",
    "keywords": "Class EpisodeIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with ITraktMetadata. public sealed class EpisodeIdsWithMetadata : EntryWithMetadata<ITraktEpisodeIds> Inheritance object CollectionEntry<ITraktEpisodeIds> EntryWithMetadata<ITraktEpisodeIds> EpisodeIdsWithMetadata Inherited Members EntryWithMetadata<ITraktEpisodeIds>.Metadata CollectionEntry<ITraktEpisodeIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors EpisodeIdsWithMetadata(ITraktEpisodeIds, ITraktMetadata) Initializes a new instance of the EpisodeIdsWithMetadata class. public EpisodeIdsWithMetadata(ITraktEpisodeIds episodeIds, ITraktMetadata metadata) Parameters episodeIds ITraktEpisodeIds A ITraktEpisodeIds. metadata ITraktMetadata The ITraktMetadata for the episodeIds."
  },
  "api/TraktNet.PostBuilder.EpisodeIdsWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.EpisodeIdsWithNotes.html",
    "title": "Class EpisodeIdsWithNotes | Trakt.NET",
    "keywords": "Class EpisodeIdsWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with notes. public class EpisodeIdsWithNotes : EntryWithNotes<ITraktEpisodeIds> Inheritance object EntryWithNotes<ITraktEpisodeIds> EpisodeIdsWithNotes Inherited Members EntryWithNotes<ITraktEpisodeIds>.Object EntryWithNotes<ITraktEpisodeIds>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EpisodeIdsWithNotes(ITraktEpisodeIds, string) Initializes a new instance of the EpisodeIdsWithNotes class. public EpisodeIdsWithNotes(ITraktEpisodeIds episodeIds, string notes) Parameters episodeIds ITraktEpisodeIds A ITraktEpisodeIds. notes string The notes for the episodeIds."
  },
  "api/TraktNet.PostBuilder.EpisodeWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.EpisodeWithMetadata.html",
    "title": "Class EpisodeWithMetadata | Trakt.NET",
    "keywords": "Class EpisodeWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with ITraktMetadata. public sealed class EpisodeWithMetadata : EntryWithMetadata<ITraktEpisode> Inheritance object CollectionEntry<ITraktEpisode> EntryWithMetadata<ITraktEpisode> EpisodeWithMetadata Inherited Members EntryWithMetadata<ITraktEpisode>.Metadata CollectionEntry<ITraktEpisode>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors EpisodeWithMetadata(ITraktEpisode, ITraktMetadata) Initializes a new instance of the EpisodeWithMetadata class. public EpisodeWithMetadata(ITraktEpisode episode, ITraktMetadata metadata) Parameters episode ITraktEpisode A ITraktEpisode. metadata ITraktMetadata The ITraktMetadata for the episode."
  },
  "api/TraktNet.PostBuilder.EpisodeWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.EpisodeWithNotes.html",
    "title": "Class EpisodeWithNotes | Trakt.NET",
    "keywords": "Class EpisodeWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with notes. public class EpisodeWithNotes : EntryWithNotes<ITraktEpisode> Inheritance object EntryWithNotes<ITraktEpisode> EpisodeWithNotes Inherited Members EntryWithNotes<ITraktEpisode>.Object EntryWithNotes<ITraktEpisode>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EpisodeWithNotes(ITraktEpisode, string) Initializes a new instance of the EpisodeWithNotes class. public EpisodeWithNotes(ITraktEpisode episode, string notes) Parameters episode ITraktEpisode A ITraktEpisode. notes string The notes for the episode."
  },
  "api/TraktNet.PostBuilder.HiddenItemsEntryWithSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.HiddenItemsEntryWithSeasons-1.html",
    "title": "Class HiddenItemsEntryWithSeasons<T> | Trakt.NET",
    "keywords": "Class HiddenItemsEntryWithSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class HiddenItemsEntryWithSeasons<T> Type Parameters T Inheritance object HiddenItemsEntryWithSeasons<T> Derived HiddenShowIdsWithSeasons HiddenShowWithSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HiddenItemsEntryWithSeasons(T, IEnumerable<int>) protected HiddenItemsEntryWithSeasons(T obj, IEnumerable<int> seasons) Parameters obj T seasons IEnumerable<int> HiddenItemsEntryWithSeasons(T, int, params int[]) protected HiddenItemsEntryWithSeasons(T obj, int season, params int[] seasons) Parameters obj T season int seasons int[] Properties Object public T Object { get; } Property Value T Seasons public IEnumerable<int> Seasons { get; } Property Value IEnumerable<int>"
  },
  "api/TraktNet.PostBuilder.HiddenShowIdsWithSeasons.html": {
    "href": "api/TraktNet.PostBuilder.HiddenShowIdsWithSeasons.html",
    "title": "Class HiddenShowIdsWithSeasons | Trakt.NET",
    "keywords": "Class HiddenShowIdsWithSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a seasons collection. public sealed class HiddenShowIdsWithSeasons : HiddenItemsEntryWithSeasons<ITraktShowIds> Inheritance object HiddenItemsEntryWithSeasons<ITraktShowIds> HiddenShowIdsWithSeasons Inherited Members HiddenItemsEntryWithSeasons<ITraktShowIds>.Object HiddenItemsEntryWithSeasons<ITraktShowIds>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors HiddenShowIdsWithSeasons(ITraktShowIds, IEnumerable<int>) Initializes a new instance of the HiddenShowIdsWithSeasons class. public HiddenShowIdsWithSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds A ITraktShowIds. seasons IEnumerable<int> The seasons collection for the showIds. HiddenShowIdsWithSeasons(ITraktShowIds, int, params int[]) Initializes a new instance of the HiddenShowIdsWithSeasons class. public HiddenShowIdsWithSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds A ITraktShowIds. season int A season number. seasons int[] An optional list of season numbers."
  },
  "api/TraktNet.PostBuilder.HiddenShowWithSeasons.html": {
    "href": "api/TraktNet.PostBuilder.HiddenShowWithSeasons.html",
    "title": "Class HiddenShowWithSeasons | Trakt.NET",
    "keywords": "Class HiddenShowWithSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a seasons collection. public sealed class HiddenShowWithSeasons : HiddenItemsEntryWithSeasons<ITraktShow> Inheritance object HiddenItemsEntryWithSeasons<ITraktShow> HiddenShowWithSeasons Inherited Members HiddenItemsEntryWithSeasons<ITraktShow>.Object HiddenItemsEntryWithSeasons<ITraktShow>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors HiddenShowWithSeasons(ITraktShow, IEnumerable<int>) Initializes a new instance of the HiddenShowWithSeasons class. public HiddenShowWithSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow A ITraktShow. seasons IEnumerable<int> The seasons collection for the show. HiddenShowWithSeasons(ITraktShow, int, params int[]) Initializes a new instance of the HiddenShowWithSeasons class. public HiddenShowWithSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow A ITraktShow. season int A season number. seasons int[] An optional list of season numbers."
  },
  "api/TraktNet.PostBuilder.HistoryAndSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.HistoryAndSeasons-1.html",
    "title": "Class HistoryAndSeasons<T> | Trakt.NET",
    "keywords": "Class HistoryAndSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class HistoryAndSeasons<T> Type Parameters T Inheritance object HistoryAndSeasons<T> Derived WatchedShowAndSeasons WatchedShowIdsAndSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HistoryAndSeasons(T, PostHistorySeasons) protected HistoryAndSeasons(T obj, PostHistorySeasons seasons) Parameters obj T seasons PostHistorySeasons Properties Object public T Object { get; } Property Value T Seasons public PostHistorySeasons Seasons { get; } Property Value PostHistorySeasons"
  },
  "api/TraktNet.PostBuilder.ITraktCheckinPostBuilder-2.html": {
    "href": "api/TraktNet.PostBuilder.ITraktCheckinPostBuilder-2.html",
    "title": "Interface ITraktCheckinPostBuilder<TPostBuilder, TPostObject> | Trakt.NET",
    "keywords": "Interface ITraktCheckinPostBuilder<TPostBuilder, TPostObject> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktCheckinPostBuilder<TPostBuilder, out TPostObject> where TPostBuilder : ITraktCheckinPostBuilder<TPostBuilder, out TPostObject> where TPostObject : ITraktCheckinPost Type Parameters TPostBuilder TPostObject Methods Build() Creates a new TPostObject instance. TPostObject Build() Returns TPostObject A new TPostObject instance. Exceptions TraktPostValidationException Thrown, if the post object is empty. WithAppDate(string) Adds the given appDate to the builder. TPostBuilder WithAppDate(string appDate) Parameters appDate string The app date which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given appDate is null. WithAppVersion(string) Adds the given appVersion to the builder. TPostBuilder WithAppVersion(string appVersion) Parameters appVersion string The app version which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given appVersion is null. WithFoursquareVenueId(string) Adds the given foursquareVenueId to the builder. TPostBuilder WithFoursquareVenueId(string foursquareVenueId) Parameters foursquareVenueId string The foursquare venue id which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given foursquareVenueId is null. WithFoursquareVenueName(string) Adds the given foursquareVenueName to the builder. TPostBuilder WithFoursquareVenueName(string foursquareVenueName) Parameters foursquareVenueName string The foursquare venue name which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given foursquareVenueName is null. WithMessage(string) Adds the given message to the builder. TPostBuilder WithMessage(string message) Parameters message string The message which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given message is null. WithSharing(ITraktConnections) Adds the given sharing to the builder. TPostBuilder WithSharing(ITraktConnections sharing) Parameters sharing ITraktConnections The ITraktConnections which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given sharing is null."
  },
  "api/TraktNet.PostBuilder.ITraktCommentPostBuilder-2.html": {
    "href": "api/TraktNet.PostBuilder.ITraktCommentPostBuilder-2.html",
    "title": "Interface ITraktCommentPostBuilder<TPostBuilder, TPostObject> | Trakt.NET",
    "keywords": "Interface ITraktCommentPostBuilder<TPostBuilder, TPostObject> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktCommentPostBuilder<TPostBuilder, out TPostObject> where TPostBuilder : ITraktCommentPostBuilder<TPostBuilder, out TPostObject> where TPostObject : ITraktCommentPost Type Parameters TPostBuilder TPostObject Methods Build() Creates a new TPostObject instance. TPostObject Build() Returns TPostObject A new TPostObject instance. Exceptions TraktPostValidationException Thrown, if the post object is empty. WithComment(string) Adds the given comment to the builder. TPostBuilder WithComment(string comment) Parameters comment string The comment which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given comment is null. ArgumentOutOfRangeException Thrown, if the given comment is too short. WithSharing(ITraktConnections) Adds the given sharing to the builder. TPostBuilder WithSharing(ITraktConnections sharing) Parameters sharing ITraktConnections The ITraktConnections which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given sharing is null. WithSpoiler(bool) Sets whether a comment has spoilers. TPostBuilder WithSpoiler(bool hasSpoiler = true) Parameters hasSpoiler bool True, if a comment contains spoilers, false otherwise. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder."
  },
  "api/TraktNet.PostBuilder.ITraktEpisodeCheckinPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktEpisodeCheckinPostBuilder.html",
    "title": "Interface ITraktEpisodeCheckinPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCheckinPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktEpisodeCheckinPostBuilder : ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost> Inherited Members ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithMessage(string) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithAppVersion(string) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithAppDate(string) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithFoursquareVenueId(string) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithFoursquareVenueName(string) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.WithSharing(ITraktConnections) ITraktCheckinPostBuilder<ITraktEpisodeCheckinPostBuilder, ITraktEpisodeCheckinPost>.Build() Methods WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktEpisodeCheckinPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktEpisodeCheckinPostBuilder Returns a reference to itself. See also ITraktEpisodeCheckinPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisodeIds), WithEpisode(ITraktShow, int) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given episodes ids are null. ArgumentException Thrown, if the given episodes ids are not valid. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktEpisodeCheckinPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktEpisodeCheckinPostBuilder Returns a reference to itself. See also ITraktEpisodeCheckinPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktShow, int) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentException Thrown, if the given episodeIdss are not valid. WithEpisode(ITraktShow, int) Adds the given show and an absolute episode number to the builder. ITraktEpisodeCheckinPostBuilder WithEpisode(ITraktShow show, int absoluteEpisodeNumber) Parameters show ITraktShow The ITraktShow which will be added. absoluteEpisodeNumber int The absolute episode number which will be added. Returns ITraktEpisodeCheckinPostBuilder Returns a reference to itself. See also ITraktEpisodeCheckinPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktEpisodeIds) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given shows ids are null. ArgumentException Thrown, if the given shows ids are not valid. ArgumentOutOfRangeException Thrown, if the given absoluteEpisodeNumber is not valid. WithEpisode(ITraktShow, int, int) Adds the given show and a season and episode number to the builder. ITraktEpisodeCheckinPostBuilder WithEpisode(ITraktShow show, int seasonNumber, int episodeNumber) Parameters show ITraktShow The ITraktShow which will be added. seasonNumber int The season number which will be added. episodeNumber int The episode number which will be added. Returns ITraktEpisodeCheckinPostBuilder Returns a reference to itself. See also ITraktEpisodeCheckinPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktEpisodeIds) or WithEpisode(ITraktShow, int). Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given shows ids are null. ArgumentException Thrown, if the given shows ids are not valid. ArgumentOutOfRangeException Thrown, if the given seasonNumber is not valid. ArgumentOutOfRangeException Thrown, if the given episodeNumber is not valid."
  },
  "api/TraktNet.PostBuilder.ITraktEpisodeCommentPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktEpisodeCommentPostBuilder.html",
    "title": "Interface ITraktEpisodeCommentPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktEpisodeCommentPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktEpisodeCommentPostBuilder : ITraktCommentPostBuilder<ITraktEpisodeCommentPostBuilder, ITraktEpisodeCommentPost> Inherited Members ITraktCommentPostBuilder<ITraktEpisodeCommentPostBuilder, ITraktEpisodeCommentPost>.WithComment(string) ITraktCommentPostBuilder<ITraktEpisodeCommentPostBuilder, ITraktEpisodeCommentPost>.WithSpoiler(bool) ITraktCommentPostBuilder<ITraktEpisodeCommentPostBuilder, ITraktEpisodeCommentPost>.WithSharing(ITraktConnections) ITraktCommentPostBuilder<ITraktEpisodeCommentPostBuilder, ITraktEpisodeCommentPost>.Build() Methods WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktEpisodeCommentPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktEpisodeCommentPostBuilder Returns a reference to itself. See also ITraktEpisodeCommentPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisodeIds). Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given episodes ids are null. ArgumentException Thrown, if the given episodes ids are not valid. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktEpisodeCommentPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktEpisodeCommentPostBuilder Returns a reference to itself. See also ITraktEpisodeCommentPostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode). Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentException Thrown, if the given episodeIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktEpisodeScrobblePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktEpisodeScrobblePostBuilder.html",
    "title": "Interface ITraktEpisodeScrobblePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktEpisodeScrobblePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktEpisodeScrobblePostBuilder : ITraktScrobblePostBuilder<ITraktEpisodeScrobblePostBuilder, ITraktEpisodeScrobblePost> Inherited Members ITraktScrobblePostBuilder<ITraktEpisodeScrobblePostBuilder, ITraktEpisodeScrobblePost>.WithProgress(float) ITraktScrobblePostBuilder<ITraktEpisodeScrobblePostBuilder, ITraktEpisodeScrobblePost>.WithAppVersion(string) ITraktScrobblePostBuilder<ITraktEpisodeScrobblePostBuilder, ITraktEpisodeScrobblePost>.WithAppDate(string) ITraktScrobblePostBuilder<ITraktEpisodeScrobblePostBuilder, ITraktEpisodeScrobblePost>.Build() Methods WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktEpisodeScrobblePostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktEpisodeScrobblePostBuilder Returns a reference to itself. See also ITraktEpisodeScrobblePostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisodeIds), WithEpisode(ITraktShow, int) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given episodes ids are null. ArgumentException Thrown, if the given episodes ids are not valid. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktEpisodeScrobblePostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktEpisodeScrobblePostBuilder Returns a reference to itself. See also ITraktEpisodeScrobblePostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktShow, int) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentException Thrown, if the given episodeIdss are not valid. WithEpisode(ITraktShow, int) Adds the given show and an absolute episode number to the builder. ITraktEpisodeScrobblePostBuilder WithEpisode(ITraktShow show, int absoluteEpisodeNumber) Parameters show ITraktShow The ITraktShow which will be added. absoluteEpisodeNumber int The absolute episode number which will be added. Returns ITraktEpisodeScrobblePostBuilder Returns a reference to itself. See also ITraktEpisodeScrobblePostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktEpisodeIds) or WithEpisode(ITraktShow, int, int). Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given shows ids are null. ArgumentException Thrown, if the given shows ids are not valid. ArgumentOutOfRangeException Thrown, if the given absoluteEpisodeNumber is not valid. WithEpisode(ITraktShow, int, int) Adds the given show and a season and episode number to the builder. ITraktEpisodeScrobblePostBuilder WithEpisode(ITraktShow show, int seasonNumber, int episodeNumber) Parameters show ITraktShow The ITraktShow which will be added. seasonNumber int The season number which will be added. episodeNumber int The episode number which will be added. Returns ITraktEpisodeScrobblePostBuilder Returns a reference to itself. See also ITraktEpisodeScrobblePostBuilder. Remarks Overrides values already set by WithEpisode(ITraktEpisode), WithEpisode(ITraktEpisodeIds) or WithEpisode(ITraktShow, int). Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given shows ids are null. ArgumentException Thrown, if the given shows ids are not valid. ArgumentOutOfRangeException Thrown, if the given seasonNumber is not valid. ArgumentOutOfRangeException Thrown, if the given episodeNumber is not valid."
  },
  "api/TraktNet.PostBuilder.ITraktHiddenItemsPostBuilder-2.html": {
    "href": "api/TraktNet.PostBuilder.ITraktHiddenItemsPostBuilder-2.html",
    "title": "Interface ITraktHiddenItemsPostBuilder<TPostBuilder, TPostObject> | Trakt.NET",
    "keywords": "Interface ITraktHiddenItemsPostBuilder<TPostBuilder, TPostObject> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktHiddenItemsPostBuilder<TPostBuilder, TPostObject> where TPostBuilder : ITraktHiddenItemsPostBuilder<TPostBuilder, TPostObject> Type Parameters TPostBuilder TPostObject Methods Build() Creates a new TPostObject instance with the added movies, shows, seasons and users. TPostObject Build() Returns TPostObject A new TPostObject instance with the added movies, shows, seasons and users. WithMovie(ITraktMovie) Adds the given movie to the builder. TPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. TPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. TPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. TPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithSeason(ITraktSeason) Adds the given season to the builder. TPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. TPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. TPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. TPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithShow(ITraktShow) Adds the given show to the builder. TPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. TPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. TPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The season numbers for the show which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. TPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int The season number for the show which will be added. seasons int[] The optional season numbers for the show which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. TPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The season numbers for the showIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. TPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int The season number for the showIds which will be added. seasons int[] The optional season numbers for the showIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(HiddenShowIdsWithSeasons) Adds the given showIdsWithSeasons to the builder. TPostBuilder WithShowAndSeasons(HiddenShowIdsWithSeasons showIdsWithSeasons) Parameters showIdsWithSeasons HiddenShowIdsWithSeasons The HiddenShowIdsWithSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithSeasons is null. WithShowAndSeasons(HiddenShowWithSeasons) Adds the given showWithSeasons to the builder. TPostBuilder WithShowAndSeasons(HiddenShowWithSeasons showWithSeasons) Parameters showWithSeasons HiddenShowWithSeasons The HiddenShowWithSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithSeasons is null. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. TPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. TPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<HiddenShowIdsWithSeasons>) Adds the given showIdsWithSeasons collection to the builder. TPostBuilder WithShowsAndSeasons(IEnumerable<HiddenShowIdsWithSeasons> showIdsWithSeasons) Parameters showIdsWithSeasons IEnumerable<HiddenShowIdsWithSeasons> A collection of HiddenShowIdsWithSeasonss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithSeasons is null. WithShowsAndSeasons(IEnumerable<HiddenShowWithSeasons>) Adds the given showsWithSeasons collection to the builder. TPostBuilder WithShowsAndSeasons(IEnumerable<HiddenShowWithSeasons> showsWithSeasons) Parameters showsWithSeasons IEnumerable<HiddenShowWithSeasons> A collection of HiddenShowWithSeasonss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithSeasons is null. WithUser(ITraktUser) Adds the given user to the builder. TPostBuilder WithUser(ITraktUser user) Parameters user ITraktUser The ITraktUser which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given user is null. WithUser(ITraktUserIds) Adds the given userIds to the builder. TPostBuilder WithUser(ITraktUserIds userIds) Parameters userIds ITraktUserIds The ITraktUserIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given userIds is null. WithUsers(IEnumerable<ITraktUserIds>) Adds the given userIds collection to the builder. TPostBuilder WithUsers(IEnumerable<ITraktUserIds> userIds) Parameters userIds IEnumerable<ITraktUserIds> A collection of ITraktUserIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given userIds is null. WithUsers(IEnumerable<ITraktUser>) Adds the given users collection to the builder. TPostBuilder WithUsers(IEnumerable<ITraktUser> users) Parameters users IEnumerable<ITraktUser> A collection of ITraktUsers which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given users is null."
  },
  "api/TraktNet.PostBuilder.ITraktListCommentPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktListCommentPostBuilder.html",
    "title": "Interface ITraktListCommentPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktListCommentPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktListCommentPostBuilder : ITraktCommentPostBuilder<ITraktListCommentPostBuilder, ITraktListCommentPost> Inherited Members ITraktCommentPostBuilder<ITraktListCommentPostBuilder, ITraktListCommentPost>.WithComment(string) ITraktCommentPostBuilder<ITraktListCommentPostBuilder, ITraktListCommentPost>.WithSpoiler(bool) ITraktCommentPostBuilder<ITraktListCommentPostBuilder, ITraktListCommentPost>.WithSharing(ITraktConnections) ITraktCommentPostBuilder<ITraktListCommentPostBuilder, ITraktListCommentPost>.Build() Methods WithList(ITraktList) Adds the given list to the builder. ITraktListCommentPostBuilder WithList(ITraktList list) Parameters list ITraktList The ITraktList which will be added. Returns ITraktListCommentPostBuilder Returns a reference to itself. See also ITraktListCommentPostBuilder. Remarks Overrides values already set by WithList(ITraktListIds). Exceptions ArgumentNullException Thrown, if the given list is null. ArgumentNullException Thrown, if the given lists ids are null. ArgumentException Thrown, if the given lists ids are not valid. WithList(ITraktListIds) Adds the given listIds to the builder. ITraktListCommentPostBuilder WithList(ITraktListIds listIds) Parameters listIds ITraktListIds The ITraktListIds which will be added. Returns ITraktListCommentPostBuilder Returns a reference to itself. See also ITraktListCommentPostBuilder. Remarks Overrides values already set by WithList(ITraktList). Exceptions ArgumentNullException Thrown, if the given listIds is null. ArgumentException Thrown, if the given listIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktMovieCheckinPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktMovieCheckinPostBuilder.html",
    "title": "Interface ITraktMovieCheckinPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktMovieCheckinPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktMovieCheckinPostBuilder : ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost> Inherited Members ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithMessage(string) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithAppVersion(string) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithAppDate(string) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithFoursquareVenueId(string) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithFoursquareVenueName(string) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.WithSharing(ITraktConnections) ITraktCheckinPostBuilder<ITraktMovieCheckinPostBuilder, ITraktMovieCheckinPost>.Build() Methods WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktMovieCheckinPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktMovieCheckinPostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovieIds). Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given movies ids are null. ArgumentException Thrown, if the given movies ids are not valid. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktMovieCheckinPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktMovieCheckinPostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovie). Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktMovieCommentPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktMovieCommentPostBuilder.html",
    "title": "Interface ITraktMovieCommentPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktMovieCommentPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktMovieCommentPostBuilder : ITraktCommentPostBuilder<ITraktMovieCommentPostBuilder, ITraktMovieCommentPost> Inherited Members ITraktCommentPostBuilder<ITraktMovieCommentPostBuilder, ITraktMovieCommentPost>.WithComment(string) ITraktCommentPostBuilder<ITraktMovieCommentPostBuilder, ITraktMovieCommentPost>.WithSpoiler(bool) ITraktCommentPostBuilder<ITraktMovieCommentPostBuilder, ITraktMovieCommentPost>.WithSharing(ITraktConnections) ITraktCommentPostBuilder<ITraktMovieCommentPostBuilder, ITraktMovieCommentPost>.Build() Methods WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktMovieCommentPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktMovieCommentPostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovieIds). Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given movies ids are null. ArgumentException Thrown, if the given movies ids are not valid. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktMovieCommentPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovie which will be added. Returns ITraktMovieCommentPostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovie). Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktMovieScrobblePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktMovieScrobblePostBuilder.html",
    "title": "Interface ITraktMovieScrobblePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktMovieScrobblePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktMovieScrobblePostBuilder : ITraktScrobblePostBuilder<ITraktMovieScrobblePostBuilder, ITraktMovieScrobblePost> Inherited Members ITraktScrobblePostBuilder<ITraktMovieScrobblePostBuilder, ITraktMovieScrobblePost>.WithProgress(float) ITraktScrobblePostBuilder<ITraktMovieScrobblePostBuilder, ITraktMovieScrobblePost>.WithAppVersion(string) ITraktScrobblePostBuilder<ITraktMovieScrobblePostBuilder, ITraktMovieScrobblePost>.WithAppDate(string) ITraktScrobblePostBuilder<ITraktMovieScrobblePostBuilder, ITraktMovieScrobblePost>.Build() Methods WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktMovieScrobblePostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktMovieScrobblePostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovieIds). Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given movies ids are null. ArgumentException Thrown, if the given movies ids are not valid. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktMovieScrobblePostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktMovieScrobblePostBuilder Returns a reference to itself. See also ITraktMovieCheckinPostBuilder. Remarks Overrides values already set by WithMovie(ITraktMovie). Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentException Thrown, if the given movieIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktRemovePostBuilder-2.html": {
    "href": "api/TraktNet.PostBuilder.ITraktRemovePostBuilder-2.html",
    "title": "Interface ITraktRemovePostBuilder<TPostBuilder, TPostObject> | Trakt.NET",
    "keywords": "Interface ITraktRemovePostBuilder<TPostBuilder, TPostObject> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktRemovePostBuilder<TPostBuilder, TPostObject> where TPostBuilder : ITraktRemovePostBuilder<TPostBuilder, TPostObject> Type Parameters TPostBuilder TPostObject Methods Build() Creates a new TPostObject instance with the added movies, shows, seasons and episodes. TPostObject Build() Returns TPostObject A new TPostObject instance with the added movies, shows, seasons and episodes. WithEpisode(ITraktEpisode) Adds the given episode to the builder. TPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. TPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisodeIds>) Adds the given episodeIds collection to the builder. TPostBuilder WithEpisodes(IEnumerable<ITraktEpisodeIds> episodeIds) Parameters episodeIds IEnumerable<ITraktEpisodeIds> A collection of ITraktEpisodeIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisode>) Adds the given episodes collection to the builder. TPostBuilder WithEpisodes(IEnumerable<ITraktEpisode> episodes) Parameters episodes IEnumerable<ITraktEpisode> A collection of ITraktEpisodes which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodes is null. WithMovie(ITraktMovie) Adds the given movie to the builder. TPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. TPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. TPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. TPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithSeason(ITraktSeason) Adds the given season to the builder. TPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. TPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. TPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. TPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithShow(ITraktShow) Adds the given show to the builder. TPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. TPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. TPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The seasons for the show which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. TPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int A season number for the show which will be added. seasons int[] An optional array of season numbers for the show which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShow, PostSeasons) Adds the given show to the builder. TPostBuilder WithShowAndSeasons(ITraktShow show, PostSeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostSeasons The PostSeasons for the show which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. TPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The seasons for the showIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. TPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int A season number for the showIds which will be added. seasons int[] An optional array of season numbers for the showIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShowIds, PostSeasons) Adds the given showIds to the builder. TPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostSeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostSeasons The PostSeasons for the showIds which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ShowAndSeasons) Adds the given showAndSeasons to the builder. TPostBuilder WithShowAndSeasons(ShowAndSeasons showAndSeasons) Parameters showAndSeasons ShowAndSeasons The ShowAndSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(ShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. TPostBuilder WithShowAndSeasons(ShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons ShowIdsAndSeasons The ShowIdsAndSeasons which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. TPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. TPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. TPostBuilder WithShowsAndSeasons(IEnumerable<ShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<ShowAndSeasons> A collection of ShowAndSeasonss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. TPostBuilder WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<ShowIdsAndSeasons> A collection of ShowIdsAndSeasonss which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null."
  },
  "api/TraktNet.PostBuilder.ITraktScrobblePostBuilder-2.html": {
    "href": "api/TraktNet.PostBuilder.ITraktScrobblePostBuilder-2.html",
    "title": "Interface ITraktScrobblePostBuilder<TPostBuilder, TPostObject> | Trakt.NET",
    "keywords": "Interface ITraktScrobblePostBuilder<TPostBuilder, TPostObject> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktScrobblePostBuilder<TPostBuilder, out TPostObject> where TPostBuilder : ITraktScrobblePostBuilder<TPostBuilder, out TPostObject> where TPostObject : ITraktScrobblePost Type Parameters TPostBuilder TPostObject Methods Build() Creates a new TPostObject instance. TPostObject Build() Returns TPostObject A new TPostObject instance. Exceptions TraktPostValidationException Thrown, if the post object is empty. WithAppDate(string) Adds the given appDate to the builder. TPostBuilder WithAppDate(string appDate) Parameters appDate string The app date which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given appDate is null. WithAppVersion(string) Adds the given appVersion to the builder. TPostBuilder WithAppVersion(string appVersion) Parameters appVersion string The app version which will be added. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentNullException Thrown, if the given appVersion is null. WithProgress(float) Sets the progress of a scrobble post. TPostBuilder WithProgress(float progress) Parameters progress float The progress of a scrobble post. The value should be between 0 and 100. Returns TPostBuilder Returns a reference to itself. See also TPostBuilder. Exceptions ArgumentOutOfRangeException Thrown, if the given progress is not between 0 and 100."
  },
  "api/TraktNet.PostBuilder.ITraktSeasonCommentPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSeasonCommentPostBuilder.html",
    "title": "Interface ITraktSeasonCommentPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSeasonCommentPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSeasonCommentPostBuilder : ITraktCommentPostBuilder<ITraktSeasonCommentPostBuilder, ITraktSeasonCommentPost> Inherited Members ITraktCommentPostBuilder<ITraktSeasonCommentPostBuilder, ITraktSeasonCommentPost>.WithComment(string) ITraktCommentPostBuilder<ITraktSeasonCommentPostBuilder, ITraktSeasonCommentPost>.WithSpoiler(bool) ITraktCommentPostBuilder<ITraktSeasonCommentPostBuilder, ITraktSeasonCommentPost>.WithSharing(ITraktConnections) ITraktCommentPostBuilder<ITraktSeasonCommentPostBuilder, ITraktSeasonCommentPost>.Build() Methods WithSeason(ITraktSeason) Adds the given season to the builder. ITraktSeasonCommentPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns ITraktSeasonCommentPostBuilder Returns a reference to itself. See also ITraktSeasonCommentPostBuilder. Remarks Overrides values already set by WithSeason(ITraktSeasonIds). Exceptions ArgumentNullException Thrown, if the given season is null. ArgumentNullException Thrown, if the given seasons ids are null. ArgumentException Thrown, if the given seasons ids are not valid. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. ITraktSeasonCommentPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeason which will be added. Returns ITraktSeasonCommentPostBuilder Returns a reference to itself. See also ITraktSeasonCommentPostBuilder. Remarks Overrides values already set by WithSeason(ITraktSeason). Exceptions ArgumentNullException Thrown, if the given seasonIds is null. ArgumentException Thrown, if the given seasonIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktShowCommentPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktShowCommentPostBuilder.html",
    "title": "Interface ITraktShowCommentPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktShowCommentPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktShowCommentPostBuilder : ITraktCommentPostBuilder<ITraktShowCommentPostBuilder, ITraktShowCommentPost> Inherited Members ITraktCommentPostBuilder<ITraktShowCommentPostBuilder, ITraktShowCommentPost>.WithComment(string) ITraktCommentPostBuilder<ITraktShowCommentPostBuilder, ITraktShowCommentPost>.WithSpoiler(bool) ITraktCommentPostBuilder<ITraktShowCommentPostBuilder, ITraktShowCommentPost>.WithSharing(ITraktConnections) ITraktCommentPostBuilder<ITraktShowCommentPostBuilder, ITraktShowCommentPost>.Build() Methods WithShow(ITraktShow) Adds the given show to the builder. ITraktShowCommentPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktShowCommentPostBuilder Returns a reference to itself. See also ITraktShowCommentPostBuilder. Remarks Overrides values already set by WithShow(ITraktShowIds). Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given shows ids are null. ArgumentException Thrown, if the given shows ids are not valid. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktShowCommentPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShow which will be added. Returns ITraktShowCommentPostBuilder Returns a reference to itself. See also ITraktShowCommentPostBuilder. Remarks Overrides values already set by WithShow(ITraktShow). Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentException Thrown, if the given showIdss are not valid."
  },
  "api/TraktNet.PostBuilder.ITraktSyncCollectionPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncCollectionPostBuilder.html",
    "title": "Interface ITraktSyncCollectionPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Post builder for ITraktSyncCollectionPosts. Provides methods for adding movies, shows, seasons and episodes. public interface ITraktSyncCollectionPostBuilder Methods Build() Creates a new ITraktSyncCollectionPost instance with the added movies, shows, seasons and episodes. ITraktSyncCollectionPost Build() Returns ITraktSyncCollectionPost A new ITraktSyncCollectionPost instance with the added movies, shows, seasons and episodes. WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktSyncCollectionPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktSyncCollectionPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeCollectedAt(ITraktEpisode, DateTime) Adds the given episode to the builder. ITraktSyncCollectionPostBuilder WithEpisodeCollectedAt(ITraktEpisode episode, DateTime collectedAt) Parameters episode ITraktEpisode The ITraktEpisode which will be added. collectedAt DateTime The UTC datetime when the episode was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisodeCollectedAt(ITraktEpisodeIds, DateTime) Adds the given episodeIds to the builder. ITraktSyncCollectionPostBuilder WithEpisodeCollectedAt(ITraktEpisodeIds episodeIds, DateTime collectedAt) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. collectedAt DateTime The UTC datetime when the episodeIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeCollectedAt(CollectedEpisode) Adds the given episodeCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithEpisodeCollectedAt(CollectedEpisode episodeCollectedAt) Parameters episodeCollectedAt CollectedEpisode The CollectedEpisode which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeCollectedAt is null. WithEpisodeCollectedAt(CollectedEpisodeIds) Adds the given episodeIdsCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithEpisodeCollectedAt(CollectedEpisodeIds episodeIdsCollectedAt) Parameters episodeIdsCollectedAt CollectedEpisodeIds The CollectedEpisodeIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsCollectedAt is null. WithEpisodeWithMetadata(ITraktEpisode, ITraktMetadata) Adds the given episode to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadata(ITraktEpisode episode, ITraktMetadata metadata) Parameters episode ITraktEpisode The ITraktEpisode which will be added. metadata ITraktMetadata The ITraktMetadata for the given episode. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given metadata is null. WithEpisodeWithMetadata(ITraktEpisodeIds, ITraktMetadata) Adds the given episodeIds to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadata(ITraktEpisodeIds episodeIds, ITraktMetadata metadata) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given episodeIds. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentNullException Thrown, if the given metadata is null. WithEpisodeWithMetadata(EpisodeIdsWithMetadata) Adds the given episodeIdsWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadata(EpisodeIdsWithMetadata episodeIdsWithMetadata) Parameters episodeIdsWithMetadata EpisodeIdsWithMetadata The EpisodeIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithMetadata is null. WithEpisodeWithMetadata(EpisodeWithMetadata) Adds the given episodeWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadata(EpisodeWithMetadata episodeWithMetadata) Parameters episodeWithMetadata EpisodeWithMetadata The EpisodeWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithMetadata is null. WithEpisodeWithMetadataCollectedAt(ITraktEpisode, ITraktMetadata, DateTime) Adds the given episode to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadataCollectedAt(ITraktEpisode episode, ITraktMetadata metadata, DateTime collectedAt) Parameters episode ITraktEpisode The ITraktEpisode which will be added. metadata ITraktMetadata The ITraktMetadata for the given episode. collectedAt DateTime The UTC datetime when the episode was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given metadata is null. WithEpisodeWithMetadataCollectedAt(ITraktEpisodeIds, ITraktMetadata, DateTime) Adds the given episodeIds to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadataCollectedAt(ITraktEpisodeIds episodeIds, ITraktMetadata metadata, DateTime collectedAt) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given episodeIds. collectedAt DateTime The UTC datetime when the episodeIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentNullException Thrown, if the given metadata is null. WithEpisodeWithMetadataCollectedAt(CollectedEpisodeIdsWithMetadata) Adds the given episodeIdsWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadataCollectedAt(CollectedEpisodeIdsWithMetadata episodeIdsWithMetadataCollectedAt) Parameters episodeIdsWithMetadataCollectedAt CollectedEpisodeIdsWithMetadata The CollectedEpisodeIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithMetadataCollectedAt is null. WithEpisodeWithMetadataCollectedAt(CollectedEpisodeWithMetadata) Adds the given episodeWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithEpisodeWithMetadataCollectedAt(CollectedEpisodeWithMetadata episodeWithMetadataCollectedAt) Parameters episodeWithMetadataCollectedAt CollectedEpisodeWithMetadata The CollectedEpisodeWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithMetadataCollectedAt is null. WithEpisodes(IEnumerable<ITraktEpisodeIds>) Adds the given episodeIds collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodes(IEnumerable<ITraktEpisodeIds> episodeIds) Parameters episodeIds IEnumerable<ITraktEpisodeIds> A collection of ITraktEpisodeIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisode>) Adds the given episodes collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodes(IEnumerable<ITraktEpisode> episodes) Parameters episodes IEnumerable<ITraktEpisode> A collection of ITraktEpisodes which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodes is null. WithEpisodesCollectedAt(IEnumerable<CollectedEpisodeIds>) Adds the given episodeIdsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesCollectedAt(IEnumerable<CollectedEpisodeIds> episodeIdsCollectedAt) Parameters episodeIdsCollectedAt IEnumerable<CollectedEpisodeIds> A collection of CollectedEpisodeIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsCollectedAt is null. WithEpisodesCollectedAt(IEnumerable<CollectedEpisode>) Adds the given episodesCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesCollectedAt(IEnumerable<CollectedEpisode> episodesCollectedAt) Parameters episodesCollectedAt IEnumerable<CollectedEpisode> A collection of CollectedEpisodes which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesCollectedAt is null. WithEpisodesWithMetadata(IEnumerable<EpisodeIdsWithMetadata>) Adds the given episodeIdsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesWithMetadata(IEnumerable<EpisodeIdsWithMetadata> episodeIdsWithMetadata) Parameters episodeIdsWithMetadata IEnumerable<EpisodeIdsWithMetadata> A collection of EpisodeIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithMetadata is null. WithEpisodesWithMetadata(IEnumerable<EpisodeWithMetadata>) Adds the given episodesWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesWithMetadata(IEnumerable<EpisodeWithMetadata> episodesWithMetadata) Parameters episodesWithMetadata IEnumerable<EpisodeWithMetadata> A collection of EpisodeWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithMetadata is null. WithEpisodesWithMetadataCollectedAt(IEnumerable<CollectedEpisodeIdsWithMetadata>) Adds the given episodeIdsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesWithMetadataCollectedAt(IEnumerable<CollectedEpisodeIdsWithMetadata> episodeIdsWithMetadataCollectedAt) Parameters episodeIdsWithMetadataCollectedAt IEnumerable<CollectedEpisodeIdsWithMetadata> A collection of CollectedEpisodeIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithMetadataCollectedAt is null. WithEpisodesWithMetadataCollectedAt(IEnumerable<CollectedEpisodeWithMetadata>) Adds the given episodesWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithEpisodesWithMetadataCollectedAt(IEnumerable<CollectedEpisodeWithMetadata> episodesWithMetadataCollectedAt) Parameters episodesWithMetadataCollectedAt IEnumerable<CollectedEpisodeWithMetadata> A collection of CollectedEpisodeWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithMetadataCollectedAt is null. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktSyncCollectionPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktSyncCollectionPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieCollectedAt(ITraktMovie, DateTime) Adds the given movie to the builder. ITraktSyncCollectionPostBuilder WithMovieCollectedAt(ITraktMovie movie, DateTime collectedAt) Parameters movie ITraktMovie The ITraktMovie which will be added. collectedAt DateTime The UTC datetime when the movie was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovieCollectedAt(ITraktMovieIds, DateTime) Adds the given movieIds to the builder. ITraktSyncCollectionPostBuilder WithMovieCollectedAt(ITraktMovieIds movieIds, DateTime collectedAt) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. collectedAt DateTime The UTC datetime when the movieIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieCollectedAt(CollectedMovie) Adds the given movieCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithMovieCollectedAt(CollectedMovie movieCollectedAt) Parameters movieCollectedAt CollectedMovie The CollectedMovie which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieCollectedAt is null. WithMovieCollectedAt(CollectedMovieIds) Adds the given movieIdsCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithMovieCollectedAt(CollectedMovieIds movieIdsCollectedAt) Parameters movieIdsCollectedAt CollectedMovieIds The CollectedMovieIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsCollectedAt is null. WithMovieWithMetadata(ITraktMovie, ITraktMetadata) Adds the given movie to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadata(ITraktMovie movie, ITraktMetadata metadata) Parameters movie ITraktMovie The ITraktMovie which will be added. metadata ITraktMetadata The ITraktMetadata for the given movie. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given metadata is null. WithMovieWithMetadata(ITraktMovieIds, ITraktMetadata) Adds the given movieIds to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadata(ITraktMovieIds movieIds, ITraktMetadata metadata) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given movieIds. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentNullException Thrown, if the given metadata is null. WithMovieWithMetadata(MovieIdsWithMetadata) Adds the given movieIdsWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadata(MovieIdsWithMetadata movieIdsWithMetadata) Parameters movieIdsWithMetadata MovieIdsWithMetadata The MovieIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithMetadata is null. WithMovieWithMetadata(MovieWithMetadata) Adds the given movieWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadata(MovieWithMetadata movieWithMetadata) Parameters movieWithMetadata MovieWithMetadata The MovieWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithMetadata is null. WithMovieWithMetadataCollectedAt(ITraktMovie, ITraktMetadata, DateTime) Adds the given movie to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadataCollectedAt(ITraktMovie movie, ITraktMetadata metadata, DateTime collectedAt) Parameters movie ITraktMovie The ITraktMovie which will be added. metadata ITraktMetadata The ITraktMetadata for the given movie. collectedAt DateTime The UTC datetime when the movie was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given metadata is null. WithMovieWithMetadataCollectedAt(ITraktMovieIds, ITraktMetadata, DateTime) Adds the given movieIds to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadataCollectedAt(ITraktMovieIds movieIds, ITraktMetadata metadata, DateTime collectedAt) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given movieIds. collectedAt DateTime The UTC datetime when the movieIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentNullException Thrown, if the given metadata is null. WithMovieWithMetadataCollectedAt(CollectedMovieIdsWithMetadata) Adds the given movieIdsWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadataCollectedAt(CollectedMovieIdsWithMetadata movieIdsWithMetadataCollectedAt) Parameters movieIdsWithMetadataCollectedAt CollectedMovieIdsWithMetadata The CollectedMovieIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithMetadataCollectedAt is null. WithMovieWithMetadataCollectedAt(CollectedMovieWithMetadata) Adds the given movieWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithMovieWithMetadataCollectedAt(CollectedMovieWithMetadata movieWithMetadataCollectedAt) Parameters movieWithMetadataCollectedAt CollectedMovieWithMetadata The CollectedMovieWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithMetadataCollectedAt is null. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktSyncCollectionPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktSyncCollectionPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithMoviesCollectedAt(IEnumerable<CollectedMovieIds>) Adds the given movieIdsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesCollectedAt(IEnumerable<CollectedMovieIds> movieIdsCollectedAt) Parameters movieIdsCollectedAt IEnumerable<CollectedMovieIds> A collection of CollectedMovieIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsCollectedAt is null. WithMoviesCollectedAt(IEnumerable<CollectedMovie>) Adds the given moviesCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesCollectedAt(IEnumerable<CollectedMovie> moviesCollectedAt) Parameters moviesCollectedAt IEnumerable<CollectedMovie> A collection of CollectedMovies which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesCollectedAt is null. WithMoviesWithMetadata(IEnumerable<MovieIdsWithMetadata>) Adds the given movieIdsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesWithMetadata(IEnumerable<MovieIdsWithMetadata> movieIdsWithMetadata) Parameters movieIdsWithMetadata IEnumerable<MovieIdsWithMetadata> A collection of MovieIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithMetadata is null. WithMoviesWithMetadata(IEnumerable<MovieWithMetadata>) Adds the given moviesWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesWithMetadata(IEnumerable<MovieWithMetadata> moviesWithMetadata) Parameters moviesWithMetadata IEnumerable<MovieWithMetadata> A collection of MovieWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithMetadata is null. WithMoviesWithMetadataCollectedAt(IEnumerable<CollectedMovieIdsWithMetadata>) Adds the given movieIdsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesWithMetadataCollectedAt(IEnumerable<CollectedMovieIdsWithMetadata> movieIdsWithMetadataCollectedAt) Parameters movieIdsWithMetadataCollectedAt IEnumerable<CollectedMovieIdsWithMetadata> A collection of CollectedMovieIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithMetadataCollectedAt is null. WithMoviesWithMetadataCollectedAt(IEnumerable<CollectedMovieWithMetadata>) Adds the given moviesWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithMoviesWithMetadataCollectedAt(IEnumerable<CollectedMovieWithMetadata> moviesWithMetadataCollectedAt) Parameters moviesWithMetadataCollectedAt IEnumerable<CollectedMovieWithMetadata> A collection of CollectedMovieWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithMetadataCollectedAt is null. WithSeason(ITraktSeason) Adds the given season to the builder. ITraktSyncCollectionPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. ITraktSyncCollectionPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonCollectedAt(ITraktSeason, DateTime) Adds the given season to the builder. ITraktSyncCollectionPostBuilder WithSeasonCollectedAt(ITraktSeason season, DateTime collectedAt) Parameters season ITraktSeason The ITraktSeason which will be added. collectedAt DateTime The UTC datetime when the season was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeasonCollectedAt(ITraktSeasonIds, DateTime) Adds the given seasonIds to the builder. ITraktSyncCollectionPostBuilder WithSeasonCollectedAt(ITraktSeasonIds seasonIds, DateTime collectedAt) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. collectedAt DateTime The UTC datetime when the seasonIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonCollectedAt(CollectedSeason) Adds the given seasonCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithSeasonCollectedAt(CollectedSeason seasonCollectedAt) Parameters seasonCollectedAt CollectedSeason The CollectedSeason which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonCollectedAt is null. WithSeasonCollectedAt(CollectedSeasonIds) Adds the given seasonIdsCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithSeasonCollectedAt(CollectedSeasonIds seasonIdsCollectedAt) Parameters seasonIdsCollectedAt CollectedSeasonIds The CollectedSeasonIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsCollectedAt is null. WithSeasonWithMetadata(ITraktSeason, ITraktMetadata) Adds the given season to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadata(ITraktSeason season, ITraktMetadata metadata) Parameters season ITraktSeason The ITraktSeason which will be added. metadata ITraktMetadata The ITraktMetadata for the given season. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. ArgumentNullException Thrown, if the given metadata is null. WithSeasonWithMetadata(ITraktSeasonIds, ITraktMetadata) Adds the given seasonIds to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadata(ITraktSeasonIds seasonIds, ITraktMetadata metadata) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given seasonIds. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. ArgumentNullException Thrown, if the given metadata is null. WithSeasonWithMetadata(SeasonIdsWithMetadata) Adds the given seasonIdsWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadata(SeasonIdsWithMetadata seasonIdsWithMetadata) Parameters seasonIdsWithMetadata SeasonIdsWithMetadata The SeasonIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithMetadata is null. WithSeasonWithMetadata(SeasonWithMetadata) Adds the given seasonWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadata(SeasonWithMetadata seasonWithMetadata) Parameters seasonWithMetadata SeasonWithMetadata The SeasonWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithMetadata is null. WithSeasonWithMetadataCollectedAt(ITraktSeason, ITraktMetadata, DateTime) Adds the given season to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadataCollectedAt(ITraktSeason season, ITraktMetadata metadata, DateTime collectedAt) Parameters season ITraktSeason The ITraktSeason which will be added. metadata ITraktMetadata The ITraktMetadata for the given season. collectedAt DateTime The UTC datetime when the season was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. ArgumentNullException Thrown, if the given metadata is null. WithSeasonWithMetadataCollectedAt(ITraktSeasonIds, ITraktMetadata, DateTime) Adds the given seasonIds to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadataCollectedAt(ITraktSeasonIds seasonIds, ITraktMetadata metadata, DateTime collectedAt) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given seasonIds. collectedAt DateTime The UTC datetime when the seasonIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. ArgumentNullException Thrown, if the given metadata is null. WithSeasonWithMetadataCollectedAt(CollectedSeasonIdsWithMetadata) Adds the given seasonIdsWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadataCollectedAt(CollectedSeasonIdsWithMetadata seasonIdsWithMetadataCollectedAt) Parameters seasonIdsWithMetadataCollectedAt CollectedSeasonIdsWithMetadata The CollectedSeasonIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithMetadataCollectedAt is null. WithSeasonWithMetadataCollectedAt(CollectedSeasonWithMetadata) Adds the given seasonWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithSeasonWithMetadataCollectedAt(CollectedSeasonWithMetadata seasonWithMetadataCollectedAt) Parameters seasonWithMetadataCollectedAt CollectedSeasonWithMetadata The CollectedSeasonWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithMetadataCollectedAt is null. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. ITraktSyncCollectionPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. ITraktSyncCollectionPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithSeasonsCollectedAt(IEnumerable<CollectedSeasonIds>) Adds the given seasonIdsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsCollectedAt(IEnumerable<CollectedSeasonIds> seasonIdsCollectedAt) Parameters seasonIdsCollectedAt IEnumerable<CollectedSeasonIds> A collection of CollectedSeasonIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsCollectedAt is null. WithSeasonsCollectedAt(IEnumerable<CollectedSeason>) Adds the given seasonsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsCollectedAt(IEnumerable<CollectedSeason> seasonsCollectedAt) Parameters seasonsCollectedAt IEnumerable<CollectedSeason> A collection of CollectedSeasons which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsCollectedAt is null. WithSeasonsWithMetadata(IEnumerable<SeasonIdsWithMetadata>) Adds the given seasonIdsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsWithMetadata(IEnumerable<SeasonIdsWithMetadata> seasonIdsWithMetadata) Parameters seasonIdsWithMetadata IEnumerable<SeasonIdsWithMetadata> A collection of SeasonIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithMetadata is null. WithSeasonsWithMetadata(IEnumerable<SeasonWithMetadata>) Adds the given seasonsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsWithMetadata(IEnumerable<SeasonWithMetadata> seasonsWithMetadata) Parameters seasonsWithMetadata IEnumerable<SeasonWithMetadata> A collection of SeasonWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithMetadata is null. WithSeasonsWithMetadataCollectedAt(IEnumerable<CollectedSeasonIdsWithMetadata>) Adds the given seasonIdsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsWithMetadataCollectedAt(IEnumerable<CollectedSeasonIdsWithMetadata> seasonIdsWithMetadataCollectedAt) Parameters seasonIdsWithMetadataCollectedAt IEnumerable<CollectedSeasonIdsWithMetadata> A collection of CollectedSeasonIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithMetadataCollectedAt is null. WithSeasonsWithMetadataCollectedAt(IEnumerable<CollectedSeasonWithMetadata>) Adds the given seasonsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithSeasonsWithMetadataCollectedAt(IEnumerable<CollectedSeasonWithMetadata> seasonsWithMetadataCollectedAt) Parameters seasonsWithMetadataCollectedAt IEnumerable<CollectedSeasonWithMetadata> A collection of CollectedSeasonWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithMetadataCollectedAt is null. WithShow(ITraktShow) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The seasons for the show which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int A season number for the show which will be added. seasons int[] An optional array of season numbers for the show which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShow, PostCollectionSeasons) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShow show, PostCollectionSeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostCollectionSeasons The PostCollectionSeasons for the show which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The seasons for the showIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int A season number for the showIds which will be added. seasons int[] An optional array of season numbers for the showIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShowIds, PostCollectionSeasons) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostCollectionSeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostCollectionSeasons The PostCollectionSeasons for the showIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(CollectionShowAndSeasons) Adds the given showAndSeasons to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(CollectionShowAndSeasons showAndSeasons) Parameters showAndSeasons CollectionShowAndSeasons The CollectionShowAndSeasons which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(CollectionShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. ITraktSyncCollectionPostBuilder WithShowAndSeasons(CollectionShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons CollectionShowIdsAndSeasons The CollectionShowIdsAndSeasons which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowCollectedAt(ITraktShow, DateTime) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowCollectedAt(ITraktShow show, DateTime collectedAt) Parameters show ITraktShow The ITraktShow which will be added. collectedAt DateTime The UTC datetime when the show was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowCollectedAt(ITraktShowIds, DateTime) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowCollectedAt(ITraktShowIds showIds, DateTime collectedAt) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. collectedAt DateTime The UTC datetime when the showIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowCollectedAt(CollectedShow) Adds the given showCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithShowCollectedAt(CollectedShow showCollectedAt) Parameters showCollectedAt CollectedShow The CollectedShow which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showCollectedAt is null. WithShowCollectedAt(CollectedShowIds) Adds the given showIdsCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithShowCollectedAt(CollectedShowIds showIdsCollectedAt) Parameters showIdsCollectedAt CollectedShowIds The CollectedShowIds which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsCollectedAt is null. WithShowWithMetadata(ITraktShow, ITraktMetadata) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadata(ITraktShow show, ITraktMetadata metadata) Parameters show ITraktShow The ITraktShow which will be added. metadata ITraktMetadata The ITraktMetadata for the given show. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given metadata is null. WithShowWithMetadata(ITraktShowIds, ITraktMetadata) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadata(ITraktShowIds showIds, ITraktMetadata metadata) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given showIds. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given metadata is null. WithShowWithMetadata(ShowIdsWithMetadata) Adds the given showIdsWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadata(ShowIdsWithMetadata showIdsWithMetadata) Parameters showIdsWithMetadata ShowIdsWithMetadata The ShowIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithMetadata is null. WithShowWithMetadata(ShowWithMetadata) Adds the given showWithMetadata to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadata(ShowWithMetadata showWithMetadata) Parameters showWithMetadata ShowWithMetadata The ShowWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithMetadata is null. WithShowWithMetadataCollectedAt(ITraktShow, ITraktMetadata, DateTime) Adds the given show to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadataCollectedAt(ITraktShow show, ITraktMetadata metadata, DateTime collectedAt) Parameters show ITraktShow The ITraktShow which will be added. metadata ITraktMetadata The ITraktMetadata for the given show. collectedAt DateTime The UTC datetime when the show was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given metadata is null. WithShowWithMetadataCollectedAt(ITraktShowIds, ITraktMetadata, DateTime) Adds the given showIds to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadataCollectedAt(ITraktShowIds showIds, ITraktMetadata metadata, DateTime collectedAt) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. metadata ITraktMetadata The ITraktMetadata for the given showIds. collectedAt DateTime The UTC datetime when the showIds was collected. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given metadata is null. WithShowWithMetadataCollectedAt(CollectedShowIdsWithMetadata) Adds the given showIdsWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadataCollectedAt(CollectedShowIdsWithMetadata showIdsWithMetadataCollectedAt) Parameters showIdsWithMetadataCollectedAt CollectedShowIdsWithMetadata The CollectedShowIdsWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithMetadataCollectedAt is null. WithShowWithMetadataCollectedAt(CollectedShowWithMetadata) Adds the given showWithMetadataCollectedAt to the builder. ITraktSyncCollectionPostBuilder WithShowWithMetadataCollectedAt(CollectedShowWithMetadata showWithMetadataCollectedAt) Parameters showWithMetadataCollectedAt CollectedShowWithMetadata The CollectedShowWithMetadata which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithMetadataCollectedAt is null. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktSyncCollectionPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktSyncCollectionPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<CollectionShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. ITraktSyncCollectionPostBuilder WithShowsAndSeasons(IEnumerable<CollectionShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<CollectionShowAndSeasons> A collection of CollectionShowAndSeasonss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<CollectionShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. ITraktSyncCollectionPostBuilder WithShowsAndSeasons(IEnumerable<CollectionShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<CollectionShowIdsAndSeasons> A collection of CollectionShowIdsAndSeasonss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowsCollectedAt(IEnumerable<CollectedShowIds>) Adds the given showIdsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithShowsCollectedAt(IEnumerable<CollectedShowIds> showIdsCollectedAt) Parameters showIdsCollectedAt IEnumerable<CollectedShowIds> A collection of CollectedShowIdss which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsCollectedAt is null. WithShowsCollectedAt(IEnumerable<CollectedShow>) Adds the given showsCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithShowsCollectedAt(IEnumerable<CollectedShow> showsCollectedAt) Parameters showsCollectedAt IEnumerable<CollectedShow> A collection of CollectedShows which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsCollectedAt is null. WithShowsWithMetadata(IEnumerable<ShowIdsWithMetadata>) Adds the given showIdsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithShowsWithMetadata(IEnumerable<ShowIdsWithMetadata> showIdsWithMetadata) Parameters showIdsWithMetadata IEnumerable<ShowIdsWithMetadata> A collection of ShowIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithMetadata is null. WithShowsWithMetadata(IEnumerable<ShowWithMetadata>) Adds the given showsWithMetadata collection to the builder. ITraktSyncCollectionPostBuilder WithShowsWithMetadata(IEnumerable<ShowWithMetadata> showsWithMetadata) Parameters showsWithMetadata IEnumerable<ShowWithMetadata> A collection of ShowWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithMetadata is null. WithShowsWithMetadataCollectedAt(IEnumerable<CollectedShowIdsWithMetadata>) Adds the given showIdsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithShowsWithMetadataCollectedAt(IEnumerable<CollectedShowIdsWithMetadata> showIdsWithMetadataCollectedAt) Parameters showIdsWithMetadataCollectedAt IEnumerable<CollectedShowIdsWithMetadata> A collection of CollectedShowIdsWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithMetadataCollectedAt is null. WithShowsWithMetadataCollectedAt(IEnumerable<CollectedShowWithMetadata>) Adds the given showsWithMetadataCollectedAt collection to the builder. ITraktSyncCollectionPostBuilder WithShowsWithMetadataCollectedAt(IEnumerable<CollectedShowWithMetadata> showsWithMetadataCollectedAt) Parameters showsWithMetadataCollectedAt IEnumerable<CollectedShowWithMetadata> A collection of CollectedShowWithMetadatas which will be added. Returns ITraktSyncCollectionPostBuilder Returns a reference to itself. See also ITraktSyncCollectionPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithMetadataCollectedAt is null."
  },
  "api/TraktNet.PostBuilder.ITraktSyncCollectionRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncCollectionRemovePostBuilder.html",
    "title": "Interface ITraktSyncCollectionRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncCollectionRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncCollectionRemovePostBuilder : ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost> Inherited Members ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithMovie(ITraktMovie) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithMovie(ITraktMovieIds) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShow(ITraktShow) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShow(ITraktShowIds) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShow, PostSeasons) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ShowAndSeasons) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShowIds, PostSeasons) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowAndSeasons(ShowIdsAndSeasons) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithSeason(ITraktSeason) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithSeason(ITraktSeasonIds) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithEpisode(ITraktEpisode) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithEpisode(ITraktEpisodeIds) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithEpisodes(IEnumerable<ITraktEpisode>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.WithEpisodes(IEnumerable<ITraktEpisodeIds>) ITraktRemovePostBuilder<ITraktSyncCollectionRemovePostBuilder, ITraktSyncCollectionRemovePost>.Build()"
  },
  "api/TraktNet.PostBuilder.ITraktSyncFavoritesPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncFavoritesPostBuilder.html",
    "title": "Interface ITraktSyncFavoritesPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncFavoritesPostBuilder Methods Build() Creates a new ITraktSyncFavoritesPost instance with the added movies and shows. ITraktSyncFavoritesPost Build() Returns ITraktSyncFavoritesPost A new ITraktSyncFavoritesPost instance with the added movies and shows. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktSyncFavoritesPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktSyncFavoritesPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieWithNotes(ITraktMovie, string) Adds the given movie to the builder. ITraktSyncFavoritesPostBuilder WithMovieWithNotes(ITraktMovie movie, string notes) Parameters movie ITraktMovie The ITraktMovie which will be added. notes string The notes for the given movie. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(ITraktMovieIds, string) Adds the given movieIds to the builder. ITraktSyncFavoritesPostBuilder WithMovieWithNotes(ITraktMovieIds movieIds, string notes) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. notes string The notes for the given movieIds. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(MovieIdsWithNotes) Adds the given movieIdsWithNotes to the builder. ITraktSyncFavoritesPostBuilder WithMovieWithNotes(MovieIdsWithNotes movieIdsWithNotes) Parameters movieIdsWithNotes MovieIdsWithNotes The MovieIdsWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if the given movieIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieIdsWithNotes.Notes has more than 255 characters. WithMovieWithNotes(MovieWithNotes) Adds the given movieWithNotes to the builder. ITraktSyncFavoritesPostBuilder WithMovieWithNotes(MovieWithNotes movieWithNotes) Parameters movieWithNotes MovieWithNotes The MovieWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithNotes is null. ArgumentNullException Thrown, if the given movieWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieWithNotes.Notes has more than 255 characters. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktSyncFavoritesPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktSyncFavoritesPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes>) Adds the given movieIdsWithNotes collection to the builder. ITraktSyncFavoritesPostBuilder WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes> movieIdsWithNotes) Parameters movieIdsWithNotes IEnumerable<MovieIdsWithNotes> A collection of MovieIdsWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given movieIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given movieIdsWithNotes has notes which have more than 255 characters. WithMoviesWithNotes(IEnumerable<MovieWithNotes>) Adds the given moviesWithNotes collection to the builder. ITraktSyncFavoritesPostBuilder WithMoviesWithNotes(IEnumerable<MovieWithNotes> moviesWithNotes) Parameters moviesWithNotes IEnumerable<MovieWithNotes> A collection of MovieWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithNotes is null. ArgumentNullException Thrown, if one item of the given moviesWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given moviesWithNotes has notes which have more than 255 characters. WithShow(ITraktShow) Adds the given show to the builder. ITraktSyncFavoritesPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktSyncFavoritesPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowWithNotes(ITraktShow, string) Adds the given show to the builder. ITraktSyncFavoritesPostBuilder WithShowWithNotes(ITraktShow show, string notes) Parameters show ITraktShow The ITraktShow which will be added. notes string The notes for the given show. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ITraktShowIds, string) Adds the given showIds to the builder. ITraktSyncFavoritesPostBuilder WithShowWithNotes(ITraktShowIds showIds, string notes) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. notes string The notes for the given showIds. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ShowIdsWithNotes) Adds the given showIdsWithNotes to the builder. ITraktSyncFavoritesPostBuilder WithShowWithNotes(ShowIdsWithNotes showIdsWithNotes) Parameters showIdsWithNotes ShowIdsWithNotes The ShowIdsWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if the given showIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showIdsWithNotes.Notes has more than 255 characters. WithShowWithNotes(ShowWithNotes) Adds the given showWithNotes to the builder. ITraktSyncFavoritesPostBuilder WithShowWithNotes(ShowWithNotes showWithNotes) Parameters showWithNotes ShowWithNotes The ShowWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithNotes is null. ArgumentNullException Thrown, if the given showWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showWithNotes.Notes has more than 255 characters. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktSyncFavoritesPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktSyncFavoritesPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsWithNotes(IEnumerable<ShowIdsWithNotes>) Adds the given showIdsWithNotes collection to the builder. ITraktSyncFavoritesPostBuilder WithShowsWithNotes(IEnumerable<ShowIdsWithNotes> showIdsWithNotes) Parameters showIdsWithNotes IEnumerable<ShowIdsWithNotes> A collection of ShowIdsWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given showIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showIdsWithNotes has notes which have more than 255 characters. WithShowsWithNotes(IEnumerable<ShowWithNotes>) Adds the given showsWithNotes collection to the builder. ITraktSyncFavoritesPostBuilder WithShowsWithNotes(IEnumerable<ShowWithNotes> showsWithNotes) Parameters showsWithNotes IEnumerable<ShowWithNotes> A collection of ShowWithNotes which will be added. Returns ITraktSyncFavoritesPostBuilder Returns a reference to itself. See also ITraktSyncFavoritesPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithNotes is null. ArgumentNullException Thrown, if one item of the given showsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showsWithNotes has notes which have more than 255 characters."
  },
  "api/TraktNet.PostBuilder.ITraktSyncFavoritesRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncFavoritesRemovePostBuilder.html",
    "title": "Interface ITraktSyncFavoritesRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncFavoritesRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncFavoritesRemovePostBuilder Methods Build() Creates a new ITraktSyncFavoritesRemovePost instance with the added movies and shows. ITraktSyncFavoritesRemovePost Build() Returns ITraktSyncFavoritesRemovePost A new ITraktSyncFavoritesRemovePost instance with the added movies and shows. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktSyncFavoritesRemovePostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktSyncFavoritesRemovePostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktSyncFavoritesRemovePostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktSyncFavoritesRemovePostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithShow(ITraktShow) Adds the given show to the builder. ITraktSyncFavoritesRemovePostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktSyncFavoritesRemovePostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktSyncFavoritesRemovePostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktSyncFavoritesRemovePostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktSyncFavoritesRemovePostBuilder Returns a reference to itself. See also ITraktSyncFavoritesRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null."
  },
  "api/TraktNet.PostBuilder.ITraktSyncHistoryPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncHistoryPostBuilder.html",
    "title": "Interface ITraktSyncHistoryPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncHistoryPostBuilder Methods Build() Creates a new ITraktSyncHistoryPost instance with the added movies, shows, seasons and episodes. ITraktSyncHistoryPost Build() Returns ITraktSyncHistoryPost A new ITraktSyncHistoryPost instance with the added movies, shows, seasons and episodes. WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktSyncHistoryPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktSyncHistoryPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeWatchedAt(ITraktEpisode, DateTime) Adds the given episode to the builder. ITraktSyncHistoryPostBuilder WithEpisodeWatchedAt(ITraktEpisode episode, DateTime watchedAt) Parameters episode ITraktEpisode The ITraktEpisode which will be added. watchedAt DateTime The UTC datetime when the episode was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisodeWatchedAt(ITraktEpisodeIds, DateTime) Adds the given episodeIds to the builder. ITraktSyncHistoryPostBuilder WithEpisodeWatchedAt(ITraktEpisodeIds episodeIds, DateTime watchedAt) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. watchedAt DateTime The UTC datetime when the episodeIds was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeWatchedAt(WatchedEpisode) Adds the given episodeWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithEpisodeWatchedAt(WatchedEpisode episodeWatchedAt) Parameters episodeWatchedAt WatchedEpisode The WatchedEpisode which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWatchedAt is null. WithEpisodeWatchedAt(WatchedEpisodeIds) Adds the given episodeIdsWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithEpisodeWatchedAt(WatchedEpisodeIds episodeIdsWatchedAt) Parameters episodeIdsWatchedAt WatchedEpisodeIds The WatchedEpisodeIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWatchedAt is null. WithEpisodes(IEnumerable<ITraktEpisodeIds>) Adds the given episodeIds collection to the builder. ITraktSyncHistoryPostBuilder WithEpisodes(IEnumerable<ITraktEpisodeIds> episodeIds) Parameters episodeIds IEnumerable<ITraktEpisodeIds> A collection of ITraktEpisodeIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisode>) Adds the given episodes collection to the builder. ITraktSyncHistoryPostBuilder WithEpisodes(IEnumerable<ITraktEpisode> episodes) Parameters episodes IEnumerable<ITraktEpisode> A collection of ITraktEpisodes which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodes is null. WithEpisodesWatchedAt(IEnumerable<WatchedEpisodeIds>) Adds the given episodeIdsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithEpisodesWatchedAt(IEnumerable<WatchedEpisodeIds> episodeIdsWatchedAt) Parameters episodeIdsWatchedAt IEnumerable<WatchedEpisodeIds> A collection of WatchedEpisodeIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWatchedAt is null. WithEpisodesWatchedAt(IEnumerable<WatchedEpisode>) Adds the given episodesWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithEpisodesWatchedAt(IEnumerable<WatchedEpisode> episodesWatchedAt) Parameters episodesWatchedAt IEnumerable<WatchedEpisode> A collection of WatchedEpisodes which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWatchedAt is null. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktSyncHistoryPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktSyncHistoryPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieWatchedAt(ITraktMovie, DateTime) Adds the given movie to the builder. ITraktSyncHistoryPostBuilder WithMovieWatchedAt(ITraktMovie movie, DateTime watchedAt) Parameters movie ITraktMovie The ITraktMovie which will be added. watchedAt DateTime The UTC datetime when the movie was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovieWatchedAt(ITraktMovieIds, DateTime) Adds the given movieIds to the builder. ITraktSyncHistoryPostBuilder WithMovieWatchedAt(ITraktMovieIds movieIds, DateTime watchedAt) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. watchedAt DateTime The UTC datetime when the movieIds was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieWatchedAt(WatchedMovie) Adds the given movieWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithMovieWatchedAt(WatchedMovie movieWatchedAt) Parameters movieWatchedAt WatchedMovie The WatchedMovie which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWatchedAt is null. WithMovieWatchedAt(WatchedMovieIds) Adds the given movieIdsWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithMovieWatchedAt(WatchedMovieIds movieIdsWatchedAt) Parameters movieIdsWatchedAt WatchedMovieIds The WatchedMovieIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWatchedAt is null. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktSyncHistoryPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktSyncHistoryPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithMoviesWatchedAt(IEnumerable<WatchedMovieIds>) Adds the given movieIdsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithMoviesWatchedAt(IEnumerable<WatchedMovieIds> movieIdsWatchedAt) Parameters movieIdsWatchedAt IEnumerable<WatchedMovieIds> A collection of WatchedMovieIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWatchedAt is null. WithMoviesWatchedAt(IEnumerable<WatchedMovie>) Adds the given moviesWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithMoviesWatchedAt(IEnumerable<WatchedMovie> moviesWatchedAt) Parameters moviesWatchedAt IEnumerable<WatchedMovie> A collection of WatchedMovies which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWatchedAt is null. WithSeason(ITraktSeason) Adds the given season to the builder. ITraktSyncHistoryPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. ITraktSyncHistoryPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonWatchedAt(ITraktSeason, DateTime) Adds the given season to the builder. ITraktSyncHistoryPostBuilder WithSeasonWatchedAt(ITraktSeason season, DateTime watchedAt) Parameters season ITraktSeason The ITraktSeason which will be added. watchedAt DateTime The UTC datetime when the season was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeasonWatchedAt(ITraktSeasonIds, DateTime) Adds the given seasonIds to the builder. ITraktSyncHistoryPostBuilder WithSeasonWatchedAt(ITraktSeasonIds seasonIds, DateTime watchedAt) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. watchedAt DateTime The UTC datetime when the seasonIds was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonWatchedAt(WatchedSeason) Adds the given seasonWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithSeasonWatchedAt(WatchedSeason seasonWatchedAt) Parameters seasonWatchedAt WatchedSeason The WatchedSeason which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWatchedAt is null. WithSeasonWatchedAt(WatchedSeasonIds) Adds the given seasonIdsWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithSeasonWatchedAt(WatchedSeasonIds seasonIdsWatchedAt) Parameters seasonIdsWatchedAt WatchedSeasonIds The WatchedSeasonIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWatchedAt is null. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. ITraktSyncHistoryPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. ITraktSyncHistoryPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithSeasonsWatchedAt(IEnumerable<WatchedSeasonIds>) Adds the given seasonIdsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithSeasonsWatchedAt(IEnumerable<WatchedSeasonIds> seasonIdsWatchedAt) Parameters seasonIdsWatchedAt IEnumerable<WatchedSeasonIds> A collection of WatchedSeasonIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWatchedAt is null. WithSeasonsWatchedAt(IEnumerable<WatchedSeason>) Adds the given seasonsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithSeasonsWatchedAt(IEnumerable<WatchedSeason> seasonsWatchedAt) Parameters seasonsWatchedAt IEnumerable<WatchedSeason> A collection of WatchedSeasons which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWatchedAt is null. WithShow(ITraktShow) Adds the given show to the builder. ITraktSyncHistoryPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktSyncHistoryPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The seasons for the show which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int A season number for the show which will be added. seasons int[] An optional array of season numbers for the show which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShow, PostHistorySeasons) Adds the given show to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShow show, PostHistorySeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostHistorySeasons The PostHistorySeasons for the show which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The seasons for the showIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int A season number for the showIds which will be added. seasons int[] An optional array of season numbers for the showIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShowIds, PostHistorySeasons) Adds the given showIds to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostHistorySeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostHistorySeasons The PostHistorySeasons for the showIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(WatchedShowAndSeasons) Adds the given showAndSeasons to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(WatchedShowAndSeasons showAndSeasons) Parameters showAndSeasons WatchedShowAndSeasons The WatchedShowAndSeasons which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(WatchedShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. ITraktSyncHistoryPostBuilder WithShowAndSeasons(WatchedShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons WatchedShowIdsAndSeasons The WatchedShowIdsAndSeasons which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowWatchedAt(ITraktShow, DateTime) Adds the given show to the builder. ITraktSyncHistoryPostBuilder WithShowWatchedAt(ITraktShow show, DateTime watchedAt) Parameters show ITraktShow The ITraktShow which will be added. watchedAt DateTime The UTC datetime when the show was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. WithShowWatchedAt(ITraktShowIds, DateTime) Adds the given showIds to the builder. ITraktSyncHistoryPostBuilder WithShowWatchedAt(ITraktShowIds showIds, DateTime watchedAt) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. watchedAt DateTime The UTC datetime when the showIds was watched. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowWatchedAt(WatchedShow) Adds the given showWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithShowWatchedAt(WatchedShow showWatchedAt) Parameters showWatchedAt WatchedShow The WatchedShow which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWatchedAt is null. WithShowWatchedAt(WatchedShowIds) Adds the given showIdsWatchedAt to the builder. ITraktSyncHistoryPostBuilder WithShowWatchedAt(WatchedShowIds showIdsWatchedAt) Parameters showIdsWatchedAt WatchedShowIds The WatchedShowIds which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWatchedAt is null. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktSyncHistoryPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktSyncHistoryPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<WatchedShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. ITraktSyncHistoryPostBuilder WithShowsAndSeasons(IEnumerable<WatchedShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<WatchedShowAndSeasons> A collection of WatchedShowAndSeasonss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<WatchedShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. ITraktSyncHistoryPostBuilder WithShowsAndSeasons(IEnumerable<WatchedShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<WatchedShowIdsAndSeasons> A collection of WatchedShowIdsAndSeasonss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowsWatchedAt(IEnumerable<WatchedShowIds>) Adds the given showIdsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithShowsWatchedAt(IEnumerable<WatchedShowIds> showIdsWatchedAt) Parameters showIdsWatchedAt IEnumerable<WatchedShowIds> A collection of WatchedShowIdss which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWatchedAt is null. WithShowsWatchedAt(IEnumerable<WatchedShow>) Adds the given showsWatchedAt collection to the builder. ITraktSyncHistoryPostBuilder WithShowsWatchedAt(IEnumerable<WatchedShow> showsWatchedAt) Parameters showsWatchedAt IEnumerable<WatchedShow> A collection of WatchedShows which will be added. Returns ITraktSyncHistoryPostBuilder Returns a reference to itself. See also ITraktSyncHistoryPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWatchedAt is null."
  },
  "api/TraktNet.PostBuilder.ITraktSyncHistoryRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncHistoryRemovePostBuilder.html",
    "title": "Interface ITraktSyncHistoryRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncHistoryRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncHistoryRemovePostBuilder : ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost> Inherited Members ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithMovie(ITraktMovie) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithMovie(ITraktMovieIds) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShow(ITraktShow) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShow(ITraktShowIds) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShow, PostSeasons) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ShowAndSeasons) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShowIds, PostSeasons) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowAndSeasons(ShowIdsAndSeasons) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithSeason(ITraktSeason) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithSeason(ITraktSeasonIds) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithEpisode(ITraktEpisode) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithEpisode(ITraktEpisodeIds) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithEpisodes(IEnumerable<ITraktEpisode>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.WithEpisodes(IEnumerable<ITraktEpisodeIds>) ITraktRemovePostBuilder<ITraktSyncHistoryRemovePostBuilder, ITraktSyncHistoryRemovePost>.Build() Methods WithHistoryId(ulong) Adds the given historyId to the builder. ITraktSyncHistoryRemovePostBuilder WithHistoryId(ulong historyId) Parameters historyId ulong The history id which will be added. Returns ITraktSyncHistoryRemovePostBuilder Returns a reference to itself. See also ITraktSyncHistoryRemovePostBuilder. WithHistoryIds(IEnumerable<ulong>) Adds the given historyIds collection to the builder. ITraktSyncHistoryRemovePostBuilder WithHistoryIds(IEnumerable<ulong> historyIds) Parameters historyIds IEnumerable<ulong> A collection of history ids which will be added. Returns ITraktSyncHistoryRemovePostBuilder Returns a reference to itself. See also ITraktSyncHistoryRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given historyIds is null. WithHistoryIds(ulong, params ulong[]) Adds the given historyId and historyIds collection to the builder. ITraktSyncHistoryRemovePostBuilder WithHistoryIds(ulong historyId, params ulong[] historyIds) Parameters historyId ulong The history id which will be added. historyIds ulong[] A collection of history ids which will be added. Returns ITraktSyncHistoryRemovePostBuilder Returns a reference to itself. See also ITraktSyncHistoryRemovePostBuilder."
  },
  "api/TraktNet.PostBuilder.ITraktSyncRatingsPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncRatingsPostBuilder.html",
    "title": "Interface ITraktSyncRatingsPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncRatingsPostBuilder Methods Build() Creates a new ITraktSyncRatingsPost instance with the added movies, shows, seasons and episodes. ITraktSyncRatingsPost Build() Returns ITraktSyncRatingsPost A new ITraktSyncRatingsPost instance with the added movies, shows, seasons and episodes. WithEpisode(ITraktEpisode, TraktPostRating) Adds the given episode to the builder. ITraktSyncRatingsPostBuilder WithEpisode(ITraktEpisode episode, TraktPostRating rating) Parameters episode ITraktEpisode The ITraktEpisode which will be added. rating TraktPostRating The TraktPostRating for the given episode. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds, TraktPostRating) Adds the given episodeIds to the builder. ITraktSyncRatingsPostBuilder WithEpisode(ITraktEpisodeIds episodeIds, TraktPostRating rating) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. rating TraktPostRating The TraktPostRating for the given episodeIds. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisode(RatingsEpisode) Adds the given episodeWithRating to the builder. ITraktSyncRatingsPostBuilder WithEpisode(RatingsEpisode episodeWithRating) Parameters episodeWithRating RatingsEpisode The RatingsEpisode which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithRating is null. WithEpisode(RatingsEpisodeIds) Adds the given episodeIdsWithRating to the builder. ITraktSyncRatingsPostBuilder WithEpisode(RatingsEpisodeIds episodeIdsWithRating) Parameters episodeIdsWithRating RatingsEpisodeIds The RatingsEpisodeIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithRating is null. WithEpisodeRatedAt(ITraktEpisode, TraktPostRating, DateTime) Adds the given episode to the builder. ITraktSyncRatingsPostBuilder WithEpisodeRatedAt(ITraktEpisode episode, TraktPostRating rating, DateTime ratedAt) Parameters episode ITraktEpisode The ITraktEpisode which will be added. rating TraktPostRating The TraktPostRating for the given episode. ratedAt DateTime The UTC datetime when the episode was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisodeRatedAt(ITraktEpisodeIds, TraktPostRating, DateTime) Adds the given episodeIds to the builder. ITraktSyncRatingsPostBuilder WithEpisodeRatedAt(ITraktEpisodeIds episodeIds, TraktPostRating rating, DateTime ratedAt) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. rating TraktPostRating The TraktPostRating for the given episodeIds. ratedAt DateTime The UTC datetime when the episodeIds was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeRatedAt(RatingsEpisodeIdsRatedAt) Adds the given episodeIdsWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithEpisodeRatedAt(RatingsEpisodeIdsRatedAt episodeIdsWithRatingRatedAt) Parameters episodeIdsWithRatingRatedAt RatingsEpisodeIdsRatedAt The RatingsEpisodeIdsRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithRatingRatedAt is null. WithEpisodeRatedAt(RatingsEpisodeRatedAt) Adds the given episodeWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithEpisodeRatedAt(RatingsEpisodeRatedAt episodeWithRatingRatedAt) Parameters episodeWithRatingRatedAt RatingsEpisodeRatedAt The RatingsEpisodeRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithRatingRatedAt is null. WithEpisodes(IEnumerable<RatingsEpisodeIds>) Adds the given episodeIdsWithRating to the builder. ITraktSyncRatingsPostBuilder WithEpisodes(IEnumerable<RatingsEpisodeIds> episodeIdsWithRating) Parameters episodeIdsWithRating IEnumerable<RatingsEpisodeIds> The RatingsEpisodeIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithRating is null. WithEpisodes(IEnumerable<RatingsEpisode>) Adds the given episodesWithRating to the builder. ITraktSyncRatingsPostBuilder WithEpisodes(IEnumerable<RatingsEpisode> episodesWithRating) Parameters episodesWithRating IEnumerable<RatingsEpisode> The RatingsEpisode which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithRating is null. WithEpisodesRatedAt(IEnumerable<RatingsEpisodeIdsRatedAt>) Adds the given episodeIdsWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithEpisodesRatedAt(IEnumerable<RatingsEpisodeIdsRatedAt> episodeIdsWithRatingRatedAt) Parameters episodeIdsWithRatingRatedAt IEnumerable<RatingsEpisodeIdsRatedAt> The RatingsEpisodeIdsRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithRatingRatedAt is null. WithEpisodesRatedAt(IEnumerable<RatingsEpisodeRatedAt>) Adds the given episodesWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithEpisodesRatedAt(IEnumerable<RatingsEpisodeRatedAt> episodesWithRatingRatedAt) Parameters episodesWithRatingRatedAt IEnumerable<RatingsEpisodeRatedAt> The RatingsEpisodeRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithRatingRatedAt is null. WithMovie(ITraktMovie, TraktPostRating) Adds the given movie to the builder. ITraktSyncRatingsPostBuilder WithMovie(ITraktMovie movie, TraktPostRating rating) Parameters movie ITraktMovie The ITraktMovie which will be added. rating TraktPostRating The TraktPostRating for the given movie. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds, TraktPostRating) Adds the given movieIds to the builder. ITraktSyncRatingsPostBuilder WithMovie(ITraktMovieIds movieIds, TraktPostRating rating) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. rating TraktPostRating The TraktPostRating for the given movieIds. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovie(RatingsMovie) Adds the given movieWithRating to the builder. ITraktSyncRatingsPostBuilder WithMovie(RatingsMovie movieWithRating) Parameters movieWithRating RatingsMovie The RatingsMovie which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithRating is null. WithMovie(RatingsMovieIds) Adds the given movieIdsWithRating to the builder. ITraktSyncRatingsPostBuilder WithMovie(RatingsMovieIds movieIdsWithRating) Parameters movieIdsWithRating RatingsMovieIds The RatingsMovieIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithRating is null. WithMovieRatedAt(ITraktMovie, TraktPostRating, DateTime) Adds the given movie to the builder. ITraktSyncRatingsPostBuilder WithMovieRatedAt(ITraktMovie movie, TraktPostRating rating, DateTime ratedAt) Parameters movie ITraktMovie The ITraktMovie which will be added. rating TraktPostRating The TraktPostRating for the given movie. ratedAt DateTime The UTC datetime when the movie was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovieRatedAt(ITraktMovieIds, TraktPostRating, DateTime) Adds the given movieIds to the builder. ITraktSyncRatingsPostBuilder WithMovieRatedAt(ITraktMovieIds movieIds, TraktPostRating rating, DateTime ratedAt) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. rating TraktPostRating The TraktPostRating for the given movieIds. ratedAt DateTime The UTC datetime when the movieIds was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieRatedAt(RatingsMovieIdsRatedAt) Adds the given movieIdsWithRatingsRatedAt to the builder. ITraktSyncRatingsPostBuilder WithMovieRatedAt(RatingsMovieIdsRatedAt movieIdsWithRatingsRatedAt) Parameters movieIdsWithRatingsRatedAt RatingsMovieIdsRatedAt The RatingsMovieIdsRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithRatingsRatedAt is null. WithMovieRatedAt(RatingsMovieRatedAt) Adds the given movieWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithMovieRatedAt(RatingsMovieRatedAt movieWithRatingRatedAt) Parameters movieWithRatingRatedAt RatingsMovieRatedAt The RatingsMovieRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithRatingRatedAt is null. WithMovies(IEnumerable<RatingsMovieIds>) Adds the given movieIdsWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithMovies(IEnumerable<RatingsMovieIds> movieIdsWithRating) Parameters movieIdsWithRating IEnumerable<RatingsMovieIds> A collection of RatingsMovieIdss which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithRating is null. WithMovies(IEnumerable<RatingsMovie>) Adds the given moviesWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithMovies(IEnumerable<RatingsMovie> moviesWithRating) Parameters moviesWithRating IEnumerable<RatingsMovie> A collection of RatingsMovies which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithRating is null. WithMoviesRatedAt(IEnumerable<RatingsMovieIdsRatedAt>) Adds the given movieIdsWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithMoviesRatedAt(IEnumerable<RatingsMovieIdsRatedAt> movieIdsWithRatingRatedAt) Parameters movieIdsWithRatingRatedAt IEnumerable<RatingsMovieIdsRatedAt> A collection of RatingsMovieIdsRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithRatingRatedAt is null. WithMoviesRatedAt(IEnumerable<RatingsMovieRatedAt>) Adds the given moviesWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithMoviesRatedAt(IEnumerable<RatingsMovieRatedAt> moviesWithRatingRatedAt) Parameters moviesWithRatingRatedAt IEnumerable<RatingsMovieRatedAt> A collection of RatingsMovieRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithRatingRatedAt is null. WithSeason(ITraktSeason, TraktPostRating) Adds the given season to the builder. ITraktSyncRatingsPostBuilder WithSeason(ITraktSeason season, TraktPostRating rating) Parameters season ITraktSeason The ITraktSeason which will be added. rating TraktPostRating The TraktPostRating for the given season. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds, TraktPostRating) Adds the given seasonIds to the builder. ITraktSyncRatingsPostBuilder WithSeason(ITraktSeasonIds seasonIds, TraktPostRating rating) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. rating TraktPostRating The TraktPostRating for the given seasonIds. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeason(RatingsSeason) Adds the given seasonWithRating to the builder. ITraktSyncRatingsPostBuilder WithSeason(RatingsSeason seasonWithRating) Parameters seasonWithRating RatingsSeason The RatingsSeason which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithRating is null. WithSeason(RatingsSeasonIds) Adds the given seasonIdsWithRating to the builder. ITraktSyncRatingsPostBuilder WithSeason(RatingsSeasonIds seasonIdsWithRating) Parameters seasonIdsWithRating RatingsSeasonIds The RatingsSeasonIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithRating is null. WithSeasonRatedAt(ITraktSeason, TraktPostRating, DateTime) Adds the given season to the builder. ITraktSyncRatingsPostBuilder WithSeasonRatedAt(ITraktSeason season, TraktPostRating rating, DateTime ratedAt) Parameters season ITraktSeason The ITraktSeason which will be added. rating TraktPostRating The TraktPostRating for the given season. ratedAt DateTime The UTC datetime when the season was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeasonRatedAt(ITraktSeasonIds, TraktPostRating, DateTime) Adds the given seasonIds to the builder. ITraktSyncRatingsPostBuilder WithSeasonRatedAt(ITraktSeasonIds seasonIds, TraktPostRating rating, DateTime ratedAt) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. rating TraktPostRating The TraktPostRating for the given seasonIds. ratedAt DateTime The UTC datetime when the seasonIds was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonRatedAt(RatingsSeasonIdsRatedAt) Adds the given seasonIdsWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithSeasonRatedAt(RatingsSeasonIdsRatedAt seasonIdsWithRatingRatedAt) Parameters seasonIdsWithRatingRatedAt RatingsSeasonIdsRatedAt The RatingsSeasonIdsRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithRatingRatedAt is null. WithSeasonRatedAt(RatingsSeasonRatedAt) Adds the given seasonWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithSeasonRatedAt(RatingsSeasonRatedAt seasonWithRatingRatedAt) Parameters seasonWithRatingRatedAt RatingsSeasonRatedAt The RatingsSeasonRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithRatingRatedAt is null. WithSeasons(IEnumerable<RatingsSeasonIds>) Adds the given seasonIdsWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithSeasons(IEnumerable<RatingsSeasonIds> seasonIdsWithRating) Parameters seasonIdsWithRating IEnumerable<RatingsSeasonIds> A collection of RatingsSeasonIdss which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithRating is null. WithSeasons(IEnumerable<RatingsSeason>) Adds the given seasonsWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithSeasons(IEnumerable<RatingsSeason> seasonsWithRating) Parameters seasonsWithRating IEnumerable<RatingsSeason> A collection of RatingsSeasons which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithRating is null. WithSeasonsRatedAt(IEnumerable<RatingsSeasonIdsRatedAt>) Adds the given seasonIdsWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithSeasonsRatedAt(IEnumerable<RatingsSeasonIdsRatedAt> seasonIdsWithRatingRatedAt) Parameters seasonIdsWithRatingRatedAt IEnumerable<RatingsSeasonIdsRatedAt> A collection of RatingsSeasonIdsRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithRatingRatedAt is null. WithSeasonsRatedAt(IEnumerable<RatingsSeasonRatedAt>) Adds the given seasonsWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithSeasonsRatedAt(IEnumerable<RatingsSeasonRatedAt> seasonsWithRatingRatedAt) Parameters seasonsWithRatingRatedAt IEnumerable<RatingsSeasonRatedAt> A collection of RatingsSeasonRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithRatingRatedAt is null. WithShow(ITraktShow, TraktPostRating) Adds the given show to the builder. ITraktSyncRatingsPostBuilder WithShow(ITraktShow show, TraktPostRating rating) Parameters show ITraktShow The ITraktShow which will be added. rating TraktPostRating The TraktPostRating for the given show. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds, TraktPostRating) Adds the given showIds to the builder. ITraktSyncRatingsPostBuilder WithShow(ITraktShowIds showIds, TraktPostRating rating) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. rating TraktPostRating The TraktPostRating for the given showIds. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShow(RatingsShow) Adds the given showWitRating to the builder. ITraktSyncRatingsPostBuilder WithShow(RatingsShow showWitRating) Parameters showWitRating RatingsShow The RatingsShow which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWitRating is null. WithShow(RatingsShowIds) Adds the given showIdsWithRating to the builder. ITraktSyncRatingsPostBuilder WithShow(RatingsShowIds showIdsWithRating) Parameters showIdsWithRating RatingsShowIds The RatingsShowIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithRating is null. WithShowAndSeasons(ITraktShow, PostRatingsSeasons) Adds the given show to the builder. ITraktSyncRatingsPostBuilder WithShowAndSeasons(ITraktShow show, PostRatingsSeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostRatingsSeasons The PostRatingsSeasons for the show which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, PostRatingsSeasons) Adds the given showIds to the builder. ITraktSyncRatingsPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostRatingsSeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostRatingsSeasons The PostRatingsSeasons for the showIds which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(RatingsShowAndSeasons) Adds the given showAndSeasons to the builder. ITraktSyncRatingsPostBuilder WithShowAndSeasons(RatingsShowAndSeasons showAndSeasons) Parameters showAndSeasons RatingsShowAndSeasons The RatingsShowAndSeasons which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(RatingsShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. ITraktSyncRatingsPostBuilder WithShowAndSeasons(RatingsShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons RatingsShowIdsAndSeasons The RatingsShowIdsAndSeasons which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowRatedAt(ITraktShow, TraktPostRating, DateTime) Adds the given show to the builder. ITraktSyncRatingsPostBuilder WithShowRatedAt(ITraktShow show, TraktPostRating rating, DateTime ratedAt) Parameters show ITraktShow The ITraktShow which will be added. rating TraktPostRating The TraktPostRating for the given show. ratedAt DateTime The UTC datetime when the show was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowRatedAt(ITraktShowIds, TraktPostRating, DateTime) Adds the given showIds to the builder. ITraktSyncRatingsPostBuilder WithShowRatedAt(ITraktShowIds showIds, TraktPostRating rating, DateTime ratedAt) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. rating TraktPostRating The TraktPostRating for the given showIds. ratedAt DateTime The UTC datetime when the showIds was rated. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowRatedAt(RatingsShowIdsRatedAt) Adds the given showIdsWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithShowRatedAt(RatingsShowIdsRatedAt showIdsWithRatingRatedAt) Parameters showIdsWithRatingRatedAt RatingsShowIdsRatedAt The RatingsShowIdsRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithRatingRatedAt is null. WithShowRatedAt(RatingsShowRatedAt) Adds the given showWithRatingRatedAt to the builder. ITraktSyncRatingsPostBuilder WithShowRatedAt(RatingsShowRatedAt showWithRatingRatedAt) Parameters showWithRatingRatedAt RatingsShowRatedAt The RatingsShowRatedAt which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithRatingRatedAt is null. WithShows(IEnumerable<RatingsShowIds>) Adds the given showIdsWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithShows(IEnumerable<RatingsShowIds> showIdsWithRating) Parameters showIdsWithRating IEnumerable<RatingsShowIds> A collection of RatingsShowIdss which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithRating is null. WithShows(IEnumerable<RatingsShow>) Adds the given showsWithRating collection to the builder. ITraktSyncRatingsPostBuilder WithShows(IEnumerable<RatingsShow> showsWithRating) Parameters showsWithRating IEnumerable<RatingsShow> A collection of RatingsShows which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithRating is null. WithShowsAndSeasons(IEnumerable<RatingsShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. ITraktSyncRatingsPostBuilder WithShowsAndSeasons(IEnumerable<RatingsShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<RatingsShowAndSeasons> A collection of RatingsShowAndSeasonss which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<RatingsShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. ITraktSyncRatingsPostBuilder WithShowsAndSeasons(IEnumerable<RatingsShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<RatingsShowIdsAndSeasons> A collection of RatingsShowIdsAndSeasonss which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowsRatedAt(IEnumerable<RatingsShowIdsRatedAt>) Adds the given showIdsWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithShowsRatedAt(IEnumerable<RatingsShowIdsRatedAt> showIdsWithRatingRatedAt) Parameters showIdsWithRatingRatedAt IEnumerable<RatingsShowIdsRatedAt> A collection of RatingsShowIdsRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithRatingRatedAt is null. WithShowsRatedAt(IEnumerable<RatingsShowRatedAt>) Adds the given showsWithRatingRatedAt collection to the builder. ITraktSyncRatingsPostBuilder WithShowsRatedAt(IEnumerable<RatingsShowRatedAt> showsWithRatingRatedAt) Parameters showsWithRatingRatedAt IEnumerable<RatingsShowRatedAt> A collection of RatingsShowRatedAts which will be added. Returns ITraktSyncRatingsPostBuilder Returns a reference to itself. See also ITraktSyncRatingsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithRatingRatedAt is null."
  },
  "api/TraktNet.PostBuilder.ITraktSyncRatingsRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncRatingsRemovePostBuilder.html",
    "title": "Interface ITraktSyncRatingsRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncRatingsRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncRatingsRemovePostBuilder : ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost> Inherited Members ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithMovie(ITraktMovie) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithMovie(ITraktMovieIds) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShow(ITraktShow) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShow(ITraktShowIds) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShow, PostSeasons) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ShowAndSeasons) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShowIds, PostSeasons) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowAndSeasons(ShowIdsAndSeasons) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithSeason(ITraktSeason) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithSeason(ITraktSeasonIds) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithEpisode(ITraktEpisode) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithEpisode(ITraktEpisodeIds) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithEpisodes(IEnumerable<ITraktEpisode>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.WithEpisodes(IEnumerable<ITraktEpisodeIds>) ITraktRemovePostBuilder<ITraktSyncRatingsRemovePostBuilder, ITraktSyncRatingsRemovePost>.Build()"
  },
  "api/TraktNet.PostBuilder.ITraktSyncWatchlistPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncWatchlistPostBuilder.html",
    "title": "Interface ITraktSyncWatchlistPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncWatchlistPostBuilder Methods Build() Creates a new ITraktSyncWatchlistPost instance with the added movies, shows, seasons and episodes. ITraktSyncWatchlistPost Build() Returns ITraktSyncWatchlistPost A new ITraktSyncWatchlistPost instance with the added movies, shows, seasons and episodes. WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktSyncWatchlistPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktSyncWatchlistPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeWithNotes(ITraktEpisode, string) Adds the given episode to the builder. ITraktSyncWatchlistPostBuilder WithEpisodeWithNotes(ITraktEpisode episode, string notes) Parameters episode ITraktEpisode The ITraktEpisode which will be added. notes string The notes for the given episode. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithEpisodeWithNotes(ITraktEpisodeIds, string) Adds the given episodeIds to the builder. ITraktSyncWatchlistPostBuilder WithEpisodeWithNotes(ITraktEpisodeIds episodeIds, string notes) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. notes string The notes for the given episodeIds. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithEpisodeWithNotes(EpisodeIdsWithNotes) Adds the given episodeIdsWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithEpisodeWithNotes(EpisodeIdsWithNotes episodeIdsWithNotes) Parameters episodeIdsWithNotes EpisodeIdsWithNotes The EpisodeIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithNotes is null. ArgumentNullException Thrown, if the given episodeIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given episodeIdsWithNotes.Notes has more than 255 characters. WithEpisodeWithNotes(EpisodeWithNotes) Adds the given episodeWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithEpisodeWithNotes(EpisodeWithNotes episodeWithNotes) Parameters episodeWithNotes EpisodeWithNotes The EpisodeWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithNotes is null. ArgumentNullException Thrown, if the given episodeWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given episodeWithNotes.Notes has more than 255 characters. WithEpisodes(IEnumerable<ITraktEpisodeIds>) Adds the given episodeIds collection to the builder. ITraktSyncWatchlistPostBuilder WithEpisodes(IEnumerable<ITraktEpisodeIds> episodeIds) Parameters episodeIds IEnumerable<ITraktEpisodeIds> A collection of ITraktEpisodeIdss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisode>) Adds the given episodes collection to the builder. ITraktSyncWatchlistPostBuilder WithEpisodes(IEnumerable<ITraktEpisode> episodes) Parameters episodes IEnumerable<ITraktEpisode> A collection of ITraktEpisodes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodes is null. WithEpisodesWithNotes(IEnumerable<EpisodeIdsWithNotes>) Adds the given episodeIdsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithEpisodesWithNotes(IEnumerable<EpisodeIdsWithNotes> episodeIdsWithNotes) Parameters episodeIdsWithNotes IEnumerable<EpisodeIdsWithNotes> A collection of EpisodeIdsWithNotess which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given episodeIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given episodeIdsWithNotes has notes which have more than 255 characters. WithEpisodesWithNotes(IEnumerable<EpisodeWithNotes>) Adds the given episodesWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithEpisodesWithNotes(IEnumerable<EpisodeWithNotes> episodesWithNotes) Parameters episodesWithNotes IEnumerable<EpisodeWithNotes> A collection of EpisodeWithNotess which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithNotes is null. ArgumentNullException Thrown, if one item of the given episodesWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given episodesWithNotes has notes which have more than 255 characters. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktSyncWatchlistPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktSyncWatchlistPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieWithNotes(ITraktMovie, string) Adds the given movie to the builder. ITraktSyncWatchlistPostBuilder WithMovieWithNotes(ITraktMovie movie, string notes) Parameters movie ITraktMovie The ITraktMovie which will be added. notes string The notes for the given movie. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(ITraktMovieIds, string) Adds the given movieIds to the builder. ITraktSyncWatchlistPostBuilder WithMovieWithNotes(ITraktMovieIds movieIds, string notes) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. notes string The notes for the given movieIds. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(MovieIdsWithNotes) Adds the given movieIdsWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithMovieWithNotes(MovieIdsWithNotes movieIdsWithNotes) Parameters movieIdsWithNotes MovieIdsWithNotes The MovieIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if the given movieIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieIdsWithNotes.Notes has more than 255 characters. WithMovieWithNotes(MovieWithNotes) Adds the given movieWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithMovieWithNotes(MovieWithNotes movieWithNotes) Parameters movieWithNotes MovieWithNotes The MovieWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithNotes is null. ArgumentNullException Thrown, if the given movieWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieWithNotes.Notes has more than 255 characters. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktSyncWatchlistPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktSyncWatchlistPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes>) Adds the given movieIdsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes> movieIdsWithNotes) Parameters movieIdsWithNotes IEnumerable<MovieIdsWithNotes> A collection of MovieIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given movieIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given movieIdsWithNotes has notes which have more than 255 characters. WithMoviesWithNotes(IEnumerable<MovieWithNotes>) Adds the given moviesWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithMoviesWithNotes(IEnumerable<MovieWithNotes> moviesWithNotes) Parameters moviesWithNotes IEnumerable<MovieWithNotes> A collection of MovieWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithNotes is null. ArgumentNullException Thrown, if one item of the given moviesWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given moviesWithNotes has notes which have more than 255 characters. WithSeason(ITraktSeason) Adds the given season to the builder. ITraktSyncWatchlistPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. ITraktSyncWatchlistPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonWithNotes(ITraktSeason, string) Adds the given season to the builder. ITraktSyncWatchlistPostBuilder WithSeasonWithNotes(ITraktSeason season, string notes) Parameters season ITraktSeason The ITraktSeason which will be added. notes string The notes for the given season. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithSeasonWithNotes(ITraktSeasonIds, string) Adds the given seasonIds to the builder. ITraktSyncWatchlistPostBuilder WithSeasonWithNotes(ITraktSeasonIds seasonIds, string notes) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. notes string The notes for the given seasonIds. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithSeasonWithNotes(SeasonIdsWithNotes) Adds the given seasonIdsWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithSeasonWithNotes(SeasonIdsWithNotes seasonIdsWithNotes) Parameters seasonIdsWithNotes SeasonIdsWithNotes The SeasonIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithNotes is null. ArgumentNullException Thrown, if the given seasonIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given seasonIdsWithNotes.Notes has more than 255 characters. WithSeasonWithNotes(SeasonWithNotes) Adds the given seasonWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithSeasonWithNotes(SeasonWithNotes seasonWithNotes) Parameters seasonWithNotes SeasonWithNotes The SeasonWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithNotes is null. ArgumentNullException Thrown, if the given seasonWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given seasonWithNotes.Notes has more than 255 characters. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. ITraktSyncWatchlistPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. ITraktSyncWatchlistPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithSeasonsWithNotes(IEnumerable<SeasonIdsWithNotes>) Adds the given seasonIdsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithSeasonsWithNotes(IEnumerable<SeasonIdsWithNotes> seasonIdsWithNotes) Parameters seasonIdsWithNotes IEnumerable<SeasonIdsWithNotes> A collection of SeasonIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given seasonIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given seasonIdsWithNotes has notes which have more than 255 characters. WithSeasonsWithNotes(IEnumerable<SeasonWithNotes>) Adds the given seasonsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithSeasonsWithNotes(IEnumerable<SeasonWithNotes> seasonsWithNotes) Parameters seasonsWithNotes IEnumerable<SeasonWithNotes> A collection of SeasonWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithNotes is null. ArgumentNullException Thrown, if one item of the given seasonsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given seasonsWithNotes has notes which have more than 255 characters. WithShow(ITraktShow) Adds the given show to the builder. ITraktSyncWatchlistPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktSyncWatchlistPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The seasons for the show which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int A season number for the show which will be added. seasons int[] An optional array of season numbers for the show which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShow, PostSeasons) Adds the given show to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShow show, PostSeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostSeasons The PostSeasons for the show which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The seasons for the showIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int A season number for the showIds which will be added. seasons int[] An optional array of season numbers for the showIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShowIds, PostSeasons) Adds the given showIds to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostSeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostSeasons The PostSeasons for the showIds which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ShowAndSeasons) Adds the given showAndSeasons to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ShowAndSeasons showAndSeasons) Parameters showAndSeasons ShowAndSeasons The ShowAndSeasons which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(ShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. ITraktSyncWatchlistPostBuilder WithShowAndSeasons(ShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons ShowIdsAndSeasons The ShowIdsAndSeasons which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowWithNotes(ITraktShow, string) Adds the given show to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotes(ITraktShow show, string notes) Parameters show ITraktShow The ITraktShow which will be added. notes string The notes for the given show. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ITraktShowIds, string) Adds the given showIds to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotes(ITraktShowIds showIds, string notes) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. notes string The notes for the given showIds. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ShowIdsWithNotes) Adds the given showIdsWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotes(ShowIdsWithNotes showIdsWithNotes) Parameters showIdsWithNotes ShowIdsWithNotes The ShowIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if the given showIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showIdsWithNotes.Notes has more than 255 characters. WithShowWithNotes(ShowWithNotes) Adds the given showWithNotes to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotes(ShowWithNotes showWithNotes) Parameters showWithNotes ShowWithNotes The ShowWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithNotes is null. ArgumentNullException Thrown, if the given showWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showWithNotes.Notes has more than 255 characters. WithShowWithNotesAndSeasons(ShowIdsWithNotesAndSeasons) Adds the given showIdsWithNotesAndSeasons to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotesAndSeasons(ShowIdsWithNotesAndSeasons showIdsWithNotesAndSeasons) Parameters showIdsWithNotesAndSeasons ShowIdsWithNotesAndSeasons The ShowIdsWithNotesAndSeasons which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons is null. ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons.Notes is null. ArgumentOutOfRangeException Thrown, if the given showIdsWithNotesAndSeasons.Notes has more than 255 characters. WithShowWithNotesAndSeasons(ShowWithNotesAndSeasons) Adds the given showWithNotesAndSeasons to the builder. ITraktSyncWatchlistPostBuilder WithShowWithNotesAndSeasons(ShowWithNotesAndSeasons showWithNotesAndSeasons) Parameters showWithNotesAndSeasons ShowWithNotesAndSeasons The ShowWithNotesAndSeasons which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithNotesAndSeasons is null. ArgumentNullException Thrown, if the given showWithNotesAndSeasons.Notes is null. ArgumentOutOfRangeException Thrown, if the given showWithNotesAndSeasons.Notes has more than 255 characters. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktSyncWatchlistPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktSyncWatchlistPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsAndSeasons(IEnumerable<ShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<ShowAndSeasons> A collection of ShowAndSeasonss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<ShowIdsAndSeasons> A collection of ShowIdsAndSeasonss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowsWithNotes(IEnumerable<ShowIdsWithNotes>) Adds the given showIdsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsWithNotes(IEnumerable<ShowIdsWithNotes> showIdsWithNotes) Parameters showIdsWithNotes IEnumerable<ShowIdsWithNotes> A collection of ShowIdsWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given showIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showIdsWithNotes has notes which have more than 255 characters. WithShowsWithNotes(IEnumerable<ShowWithNotes>) Adds the given showsWithNotes collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsWithNotes(IEnumerable<ShowWithNotes> showsWithNotes) Parameters showsWithNotes IEnumerable<ShowWithNotes> A collection of ShowWithNotes which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithNotes is null. ArgumentNullException Thrown, if one item of the given showsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showsWithNotes has notes which have more than 255 characters. WithShowsWithNotesAndSeasons(IEnumerable<ShowIdsWithNotesAndSeasons>) Adds the given showIdsWithNotesAndSeasons collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsWithNotesAndSeasons(IEnumerable<ShowIdsWithNotesAndSeasons> showIdsWithNotesAndSeasons) Parameters showIdsWithNotesAndSeasons IEnumerable<ShowIdsWithNotesAndSeasons> A collection of ShowIdsWithNotesAndSeasonss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons is null. ArgumentNullException Thrown, if one item of the given showIdsWithNotesAndSeasons has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showIdsWithNotesAndSeasons has notes which have more than 255 characters. WithShowsWithNotesAndSeasons(IEnumerable<ShowWithNotesAndSeasons>) Adds the given showsWithNotesAndSeasons collection to the builder. ITraktSyncWatchlistPostBuilder WithShowsWithNotesAndSeasons(IEnumerable<ShowWithNotesAndSeasons> showsWithNotesAndSeasons) Parameters showsWithNotesAndSeasons IEnumerable<ShowWithNotesAndSeasons> A collection of ShowIdsWithNotesAndSeasonss which will be added. Returns ITraktSyncWatchlistPostBuilder Returns a reference to itself. See also ITraktSyncWatchlistPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithNotesAndSeasons is null. ArgumentNullException Thrown, if one item of the given showsWithNotesAndSeasons has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showsWithNotesAndSeasons has notes which have more than 255 characters."
  },
  "api/TraktNet.PostBuilder.ITraktSyncWatchlistRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktSyncWatchlistRemovePostBuilder.html",
    "title": "Interface ITraktSyncWatchlistRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktSyncWatchlistRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktSyncWatchlistRemovePostBuilder : ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost> Inherited Members ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithMovie(ITraktMovie) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithMovie(ITraktMovieIds) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShow(ITraktShow) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShow(ITraktShowIds) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShow, PostSeasons) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ShowAndSeasons) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShowIds, PostSeasons) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowAndSeasons(ShowIdsAndSeasons) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithSeason(ITraktSeason) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithSeason(ITraktSeasonIds) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithEpisode(ITraktEpisode) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithEpisode(ITraktEpisodeIds) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithEpisodes(IEnumerable<ITraktEpisode>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.WithEpisodes(IEnumerable<ITraktEpisodeIds>) ITraktRemovePostBuilder<ITraktSyncWatchlistRemovePostBuilder, ITraktSyncWatchlistRemovePost>.Build()"
  },
  "api/TraktNet.PostBuilder.ITraktUserHiddenItemsPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktUserHiddenItemsPostBuilder.html",
    "title": "Interface ITraktUserHiddenItemsPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktUserHiddenItemsPostBuilder : ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost> Inherited Members ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithMovie(ITraktMovie) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithMovie(ITraktMovieIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithMovies(IEnumerable<ITraktMovie>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShow(ITraktShow) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShow(ITraktShowIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShows(IEnumerable<ITraktShow>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShows(IEnumerable<ITraktShowIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(HiddenShowWithSeasons) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowAndSeasons(HiddenShowIdsWithSeasons) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowsAndSeasons(IEnumerable<HiddenShowWithSeasons>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithShowsAndSeasons(IEnumerable<HiddenShowIdsWithSeasons>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithSeason(ITraktSeason) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithSeason(ITraktSeasonIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithUser(ITraktUser) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithUser(ITraktUserIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithUsers(IEnumerable<ITraktUser>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.WithUsers(IEnumerable<ITraktUserIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsPostBuilder, ITraktUserHiddenItemsPost>.Build()"
  },
  "api/TraktNet.PostBuilder.ITraktUserHiddenItemsRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktUserHiddenItemsRemovePostBuilder.html",
    "title": "Interface ITraktUserHiddenItemsRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktUserHiddenItemsRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktUserHiddenItemsRemovePostBuilder : ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost> Inherited Members ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithMovie(ITraktMovie) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithMovie(ITraktMovieIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShow(ITraktShow) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShow(ITraktShowIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(HiddenShowWithSeasons) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowAndSeasons(HiddenShowIdsWithSeasons) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowsAndSeasons(IEnumerable<HiddenShowWithSeasons>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithShowsAndSeasons(IEnumerable<HiddenShowIdsWithSeasons>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithSeason(ITraktSeason) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithSeason(ITraktSeasonIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithUser(ITraktUser) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithUser(ITraktUserIds) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithUsers(IEnumerable<ITraktUser>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.WithUsers(IEnumerable<ITraktUserIds>) ITraktHiddenItemsPostBuilder<ITraktUserHiddenItemsRemovePostBuilder, ITraktUserHiddenItemsRemovePost>.Build()"
  },
  "api/TraktNet.PostBuilder.ITraktUserPersonalListItemsPostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktUserPersonalListItemsPostBuilder.html",
    "title": "Interface ITraktUserPersonalListItemsPostBuilder | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsPostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktUserPersonalListItemsPostBuilder Methods Build() Creates a new ITraktUserPersonalListItemsPost instance with the added movies, shows, seasons, episodes and people. ITraktUserPersonalListItemsPost Build() Returns ITraktUserPersonalListItemsPost A new ITraktUserPersonalListItemsPost instance with the added movies, shows, seasons, episodes and people. WithEpisode(ITraktEpisode) Adds the given episode to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisode(ITraktEpisode episode) Parameters episode ITraktEpisode The ITraktEpisode which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. WithEpisode(ITraktEpisodeIds) Adds the given episodeIds to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisode(ITraktEpisodeIds episodeIds) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodeWithNotes(ITraktEpisode, string) Adds the given episode to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodeWithNotes(ITraktEpisode episode, string notes) Parameters episode ITraktEpisode The ITraktEpisode which will be added. notes string The notes for the given episode. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episode is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithEpisodeWithNotes(ITraktEpisodeIds, string) Adds the given episodeIds to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodeWithNotes(ITraktEpisodeIds episodeIds, string notes) Parameters episodeIds ITraktEpisodeIds The ITraktEpisodeIds which will be added. notes string The notes for the given episodeIds. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithEpisodeWithNotes(EpisodeIdsWithNotes) Adds the given episodeIdsWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodeWithNotes(EpisodeIdsWithNotes episodeIdsWithNotes) Parameters episodeIdsWithNotes EpisodeIdsWithNotes The EpisodeIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithNotes is null. ArgumentNullException Thrown, if the given episodeIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given episodeIdsWithNotes.Notes has more than 255 characters. WithEpisodeWithNotes(EpisodeWithNotes) Adds the given episodeWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodeWithNotes(EpisodeWithNotes episodeWithNotes) Parameters episodeWithNotes EpisodeWithNotes The EpisodeWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeWithNotes is null. ArgumentNullException Thrown, if the given episodeWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given episodeWithNotes.Notes has more than 255 characters. WithEpisodes(IEnumerable<ITraktEpisodeIds>) Adds the given episodeIds collection to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodes(IEnumerable<ITraktEpisodeIds> episodeIds) Parameters episodeIds IEnumerable<ITraktEpisodeIds> A collection of ITraktEpisodeIdss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIds is null. WithEpisodes(IEnumerable<ITraktEpisode>) Adds the given episodes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodes(IEnumerable<ITraktEpisode> episodes) Parameters episodes IEnumerable<ITraktEpisode> A collection of ITraktEpisodes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodes is null. WithEpisodesWithNotes(IEnumerable<EpisodeIdsWithNotes>) Adds the given episodeIdsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodesWithNotes(IEnumerable<EpisodeIdsWithNotes> episodeIdsWithNotes) Parameters episodeIdsWithNotes IEnumerable<EpisodeIdsWithNotes> A collection of EpisodeIdsWithNotess which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodeIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given episodeIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given episodeIdsWithNotes has notes which have more than 255 characters. WithEpisodesWithNotes(IEnumerable<EpisodeWithNotes>) Adds the given episodesWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithEpisodesWithNotes(IEnumerable<EpisodeWithNotes> episodesWithNotes) Parameters episodesWithNotes IEnumerable<EpisodeWithNotes> A collection of EpisodeWithNotess which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given episodesWithNotes is null. ArgumentNullException Thrown, if one item of the given episodesWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given episodesWithNotes has notes which have more than 255 characters. WithMovie(ITraktMovie) Adds the given movie to the builder. ITraktUserPersonalListItemsPostBuilder WithMovie(ITraktMovie movie) Parameters movie ITraktMovie The ITraktMovie which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. WithMovie(ITraktMovieIds) Adds the given movieIds to the builder. ITraktUserPersonalListItemsPostBuilder WithMovie(ITraktMovieIds movieIds) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovieWithNotes(ITraktMovie, string) Adds the given movie to the builder. ITraktUserPersonalListItemsPostBuilder WithMovieWithNotes(ITraktMovie movie, string notes) Parameters movie ITraktMovie The ITraktMovie which will be added. notes string The notes for the given movie. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movie is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(ITraktMovieIds, string) Adds the given movieIds to the builder. ITraktUserPersonalListItemsPostBuilder WithMovieWithNotes(ITraktMovieIds movieIds, string notes) Parameters movieIds ITraktMovieIds The ITraktMovieIds which will be added. notes string The notes for the given movieIds. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithMovieWithNotes(MovieIdsWithNotes) Adds the given movieIdsWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithMovieWithNotes(MovieIdsWithNotes movieIdsWithNotes) Parameters movieIdsWithNotes MovieIdsWithNotes The MovieIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if the given movieIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieIdsWithNotes.Notes has more than 255 characters. WithMovieWithNotes(MovieWithNotes) Adds the given movieWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithMovieWithNotes(MovieWithNotes movieWithNotes) Parameters movieWithNotes MovieWithNotes The MovieWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieWithNotes is null. ArgumentNullException Thrown, if the given movieWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given movieWithNotes.Notes has more than 255 characters. WithMovies(IEnumerable<ITraktMovieIds>) Adds the given movieIds collection to the builder. ITraktUserPersonalListItemsPostBuilder WithMovies(IEnumerable<ITraktMovieIds> movieIds) Parameters movieIds IEnumerable<ITraktMovieIds> A collection of ITraktMovieIdss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIds is null. WithMovies(IEnumerable<ITraktMovie>) Adds the given movies collection to the builder. ITraktUserPersonalListItemsPostBuilder WithMovies(IEnumerable<ITraktMovie> movies) Parameters movies IEnumerable<ITraktMovie> A collection of ITraktMovies which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movies is null. WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes>) Adds the given movieIdsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithMoviesWithNotes(IEnumerable<MovieIdsWithNotes> movieIdsWithNotes) Parameters movieIdsWithNotes IEnumerable<MovieIdsWithNotes> A collection of MovieIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given movieIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given movieIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given movieIdsWithNotes has notes which have more than 255 characters. WithMoviesWithNotes(IEnumerable<MovieWithNotes>) Adds the given moviesWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithMoviesWithNotes(IEnumerable<MovieWithNotes> moviesWithNotes) Parameters moviesWithNotes IEnumerable<MovieWithNotes> A collection of MovieWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given moviesWithNotes is null. ArgumentNullException Thrown, if one item of the given moviesWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given moviesWithNotes has notes which have more than 255 characters. WithPerson(ITraktPerson) Adds the given person to the builder. ITraktUserPersonalListItemsPostBuilder WithPerson(ITraktPerson person) Parameters person ITraktPerson The ITraktPerson which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given person is null. WithPerson(ITraktPersonIds) Adds the given personIds to the builder. ITraktUserPersonalListItemsPostBuilder WithPerson(ITraktPersonIds personIds) Parameters personIds ITraktPersonIds The ITraktPersonIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personIds is null. WithPersonWithNotes(ITraktPerson, string) Adds the given person to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonWithNotes(ITraktPerson person, string notes) Parameters person ITraktPerson The ITraktPerson which will be added. notes string The notes for the given person. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given person is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithPersonWithNotes(ITraktPersonIds, string) Adds the given personIds to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonWithNotes(ITraktPersonIds personIds, string notes) Parameters personIds ITraktPersonIds The ITraktPersonIds which will be added. notes string The notes for the given personIds. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithPersonWithNotes(PersonIdsWithNotes) Adds the given personIdsWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonWithNotes(PersonIdsWithNotes personIdsWithNotes) Parameters personIdsWithNotes PersonIdsWithNotes The PersonIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personIdsWithNotes is null. ArgumentNullException Thrown, if the given personIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given personIdsWithNotes.Notes has more than 255 characters. WithPersonWithNotes(PersonWithNotes) Adds the given personWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonWithNotes(PersonWithNotes personWithNotes) Parameters personWithNotes PersonWithNotes The PersonWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personWithNotes is null. ArgumentNullException Thrown, if the given personWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given personWithNotes.Notes has more than 255 characters. WithPersons(IEnumerable<ITraktPersonIds>) Adds the given personIds collection to the builder. ITraktUserPersonalListItemsPostBuilder WithPersons(IEnumerable<ITraktPersonIds> personIds) Parameters personIds IEnumerable<ITraktPersonIds> A collection of ITraktPersonIdss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personIds is null. WithPersons(IEnumerable<ITraktPerson>) Adds the given persons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithPersons(IEnumerable<ITraktPerson> persons) Parameters persons IEnumerable<ITraktPerson> A collection of ITraktPersons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given persons is null. WithPersonsWithNotes(IEnumerable<PersonIdsWithNotes>) Adds the given personIdsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonsWithNotes(IEnumerable<PersonIdsWithNotes> personIdsWithNotes) Parameters personIdsWithNotes IEnumerable<PersonIdsWithNotes> A collection of PersonIdsWithNotess which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given personIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given personIdsWithNotes has notes which have more than 255 characters. WithPersonsWithNotes(IEnumerable<PersonWithNotes>) Adds the given personsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithPersonsWithNotes(IEnumerable<PersonWithNotes> personsWithNotes) Parameters personsWithNotes IEnumerable<PersonWithNotes> A collection of PersonWithNotess which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given personsWithNotes is null. ArgumentNullException Thrown, if one item of the given personsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given personsWithNotes has notes which have more than 255 characters. WithSeason(ITraktSeason) Adds the given season to the builder. ITraktUserPersonalListItemsPostBuilder WithSeason(ITraktSeason season) Parameters season ITraktSeason The ITraktSeason which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. WithSeason(ITraktSeasonIds) Adds the given seasonIds to the builder. ITraktUserPersonalListItemsPostBuilder WithSeason(ITraktSeasonIds seasonIds) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasonWithNotes(ITraktSeason, string) Adds the given season to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonWithNotes(ITraktSeason season, string notes) Parameters season ITraktSeason The ITraktSeason which will be added. notes string The notes for the given season. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given season is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithSeasonWithNotes(ITraktSeasonIds, string) Adds the given seasonIds to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonWithNotes(ITraktSeasonIds seasonIds, string notes) Parameters seasonIds ITraktSeasonIds The ITraktSeasonIds which will be added. notes string The notes for the given seasonIds. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithSeasonWithNotes(SeasonIdsWithNotes) Adds the given seasonIdsWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonWithNotes(SeasonIdsWithNotes seasonIdsWithNotes) Parameters seasonIdsWithNotes SeasonIdsWithNotes The SeasonIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithNotes is null. ArgumentNullException Thrown, if the given seasonIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given seasonIdsWithNotes.Notes has more than 255 characters. WithSeasonWithNotes(SeasonWithNotes) Adds the given seasonWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonWithNotes(SeasonWithNotes seasonWithNotes) Parameters seasonWithNotes SeasonWithNotes The SeasonWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonWithNotes is null. ArgumentNullException Thrown, if the given seasonWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given seasonWithNotes.Notes has more than 255 characters. WithSeasons(IEnumerable<ITraktSeasonIds>) Adds the given seasonIds collection to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasons(IEnumerable<ITraktSeasonIds> seasonIds) Parameters seasonIds IEnumerable<ITraktSeasonIds> A collection of ITraktSeasonIdss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIds is null. WithSeasons(IEnumerable<ITraktSeason>) Adds the given seasons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasons(IEnumerable<ITraktSeason> seasons) Parameters seasons IEnumerable<ITraktSeason> A collection of ITraktSeasons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasons is null. WithSeasonsWithNotes(IEnumerable<SeasonIdsWithNotes>) Adds the given seasonIdsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonsWithNotes(IEnumerable<SeasonIdsWithNotes> seasonIdsWithNotes) Parameters seasonIdsWithNotes IEnumerable<SeasonIdsWithNotes> A collection of SeasonIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given seasonIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given seasonIdsWithNotes has notes which have more than 255 characters. WithSeasonsWithNotes(IEnumerable<SeasonWithNotes>) Adds the given seasonsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithSeasonsWithNotes(IEnumerable<SeasonWithNotes> seasonsWithNotes) Parameters seasonsWithNotes IEnumerable<SeasonWithNotes> A collection of SeasonWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given seasonsWithNotes is null. ArgumentNullException Thrown, if one item of the given seasonsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given seasonsWithNotes has notes which have more than 255 characters. WithShow(ITraktShow) Adds the given show to the builder. ITraktUserPersonalListItemsPostBuilder WithShow(ITraktShow show) Parameters show ITraktShow The ITraktShow which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShow(ITraktShowIds) Adds the given showIds to the builder. ITraktUserPersonalListItemsPostBuilder WithShow(ITraktShowIds showIds) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShow, IEnumerable<int>) Adds the given show to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons IEnumerable<int> The seasons for the show which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShow, int, params int[]) Adds the given show to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow The ITraktShow which will be added. season int A season number for the show which will be added. seasons int[] An optional array of season numbers for the show which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. WithShowAndSeasons(ITraktShow, PostSeasons) Adds the given show to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShow show, PostSeasons seasons) Parameters show ITraktShow The ITraktShow which will be added. seasons PostSeasons The PostSeasons for the show which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) Adds the given showIds to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons IEnumerable<int> The seasons for the showIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ITraktShowIds, int, params int[]) Adds the given showIds to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. season int A season number for the showIds which will be added. seasons int[] An optional array of season numbers for the showIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShowAndSeasons(ITraktShowIds, PostSeasons) Adds the given showIds to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ITraktShowIds showIds, PostSeasons seasons) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. seasons PostSeasons The PostSeasons for the showIds which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given seasons is null. WithShowAndSeasons(ShowAndSeasons) Adds the given showAndSeasons to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ShowAndSeasons showAndSeasons) Parameters showAndSeasons ShowAndSeasons The ShowAndSeasons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showAndSeasons is null. WithShowAndSeasons(ShowIdsAndSeasons) Adds the given showIdsAndSeasons to the builder. ITraktUserPersonalListItemsPostBuilder WithShowAndSeasons(ShowIdsAndSeasons showIdsAndSeasons) Parameters showIdsAndSeasons ShowIdsAndSeasons The ShowIdsAndSeasons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowWithNotes(ITraktShow, string) Adds the given show to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotes(ITraktShow show, string notes) Parameters show ITraktShow The ITraktShow which will be added. notes string The notes for the given show. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given show is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ITraktShowIds, string) Adds the given showIds to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotes(ITraktShowIds showIds, string notes) Parameters showIds ITraktShowIds The ITraktShowIds which will be added. notes string The notes for the given showIds. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. ArgumentNullException Thrown, if the given notes is null. ArgumentOutOfRangeException Thrown, if the given notes has more than 255 characters. WithShowWithNotes(ShowIdsWithNotes) Adds the given showIdsWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotes(ShowIdsWithNotes showIdsWithNotes) Parameters showIdsWithNotes ShowIdsWithNotes The ShowIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if the given showIdsWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showIdsWithNotes.Notes has more than 255 characters. WithShowWithNotes(ShowWithNotes) Adds the given showWithNotes to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotes(ShowWithNotes showWithNotes) Parameters showWithNotes ShowWithNotes The ShowWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithNotes is null. ArgumentNullException Thrown, if the given showWithNotes.Notes is null. ArgumentOutOfRangeException Thrown, if the given showWithNotes.Notes has more than 255 characters. WithShowWithNotesAndSeasons(ShowIdsWithNotesAndSeasons) Adds the given showIdsWithNotesAndSeasons to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotesAndSeasons(ShowIdsWithNotesAndSeasons showIdsWithNotesAndSeasons) Parameters showIdsWithNotesAndSeasons ShowIdsWithNotesAndSeasons The ShowIdsWithNotesAndSeasons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons is null. ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons.Notes is null. ArgumentOutOfRangeException Thrown, if the given showIdsWithNotesAndSeasons.Notes has more than 255 characters. WithShowWithNotesAndSeasons(ShowWithNotesAndSeasons) Adds the given showWithNotesAndSeasons to the builder. ITraktUserPersonalListItemsPostBuilder WithShowWithNotesAndSeasons(ShowWithNotesAndSeasons showWithNotesAndSeasons) Parameters showWithNotesAndSeasons ShowWithNotesAndSeasons The ShowWithNotesAndSeasons which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showWithNotesAndSeasons is null. ArgumentNullException Thrown, if the given showWithNotesAndSeasons.Notes is null. ArgumentOutOfRangeException Thrown, if the given showWithNotesAndSeasons.Notes has more than 255 characters. WithShows(IEnumerable<ITraktShowIds>) Adds the given showIds collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShows(IEnumerable<ITraktShowIds> showIds) Parameters showIds IEnumerable<ITraktShowIds> A collection of ITraktShowIdss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIds is null. WithShows(IEnumerable<ITraktShow>) Adds the given shows collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShows(IEnumerable<ITraktShow> shows) Parameters shows IEnumerable<ITraktShow> A collection of ITraktShows which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given shows is null. WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) Adds the given showsAndSeasons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsAndSeasons(IEnumerable<ShowAndSeasons> showsAndSeasons) Parameters showsAndSeasons IEnumerable<ShowAndSeasons> A collection of ShowAndSeasonss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsAndSeasons is null. WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) Adds the given showIdsAndSeasons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons> showIdsAndSeasons) Parameters showIdsAndSeasons IEnumerable<ShowIdsAndSeasons> A collection of ShowIdsAndSeasonss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsAndSeasons is null. WithShowsWithNotes(IEnumerable<ShowIdsWithNotes>) Adds the given showIdsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsWithNotes(IEnumerable<ShowIdsWithNotes> showIdsWithNotes) Parameters showIdsWithNotes IEnumerable<ShowIdsWithNotes> A collection of ShowIdsWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotes is null. ArgumentNullException Thrown, if one item of the given showIdsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showIdsWithNotes has notes which have more than 255 characters. WithShowsWithNotes(IEnumerable<ShowWithNotes>) Adds the given showsWithNotes collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsWithNotes(IEnumerable<ShowWithNotes> showsWithNotes) Parameters showsWithNotes IEnumerable<ShowWithNotes> A collection of ShowWithNotes which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithNotes is null. ArgumentNullException Thrown, if one item of the given showsWithNotes has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showsWithNotes has notes which have more than 255 characters. WithShowsWithNotesAndSeasons(IEnumerable<ShowIdsWithNotesAndSeasons>) Adds the given showIdsWithNotesAndSeasons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsWithNotesAndSeasons(IEnumerable<ShowIdsWithNotesAndSeasons> showIdsWithNotesAndSeasons) Parameters showIdsWithNotesAndSeasons IEnumerable<ShowIdsWithNotesAndSeasons> A collection of ShowIdsWithNotesAndSeasonss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showIdsWithNotesAndSeasons is null. ArgumentNullException Thrown, if one item of the given showIdsWithNotesAndSeasons has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showIdsWithNotesAndSeasons has notes which have more than 255 characters. WithShowsWithNotesAndSeasons(IEnumerable<ShowWithNotesAndSeasons>) Adds the given showsWithNotesAndSeasons collection to the builder. ITraktUserPersonalListItemsPostBuilder WithShowsWithNotesAndSeasons(IEnumerable<ShowWithNotesAndSeasons> showsWithNotesAndSeasons) Parameters showsWithNotesAndSeasons IEnumerable<ShowWithNotesAndSeasons> A collection of ShowIdsWithNotesAndSeasonss which will be added. Returns ITraktUserPersonalListItemsPostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsPostBuilder. Exceptions ArgumentNullException Thrown, if the given showsWithNotesAndSeasons is null. ArgumentNullException Thrown, if one item of the given showsWithNotesAndSeasons has notes which are null. ArgumentOutOfRangeException Thrown, if one item of the given showsWithNotesAndSeasons has notes which have more than 255 characters."
  },
  "api/TraktNet.PostBuilder.ITraktUserPersonalListItemsRemovePostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.ITraktUserPersonalListItemsRemovePostBuilder.html",
    "title": "Interface ITraktUserPersonalListItemsRemovePostBuilder | Trakt.NET",
    "keywords": "Interface ITraktUserPersonalListItemsRemovePostBuilder Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public interface ITraktUserPersonalListItemsRemovePostBuilder : ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost> Inherited Members ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithMovie(ITraktMovie) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithMovie(ITraktMovieIds) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithMovies(IEnumerable<ITraktMovie>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithMovies(IEnumerable<ITraktMovieIds>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShow(ITraktShow) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShow(ITraktShowIds) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShows(IEnumerable<ITraktShow>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShows(IEnumerable<ITraktShowIds>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShow, PostSeasons) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShow, IEnumerable<int>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShow, int, params int[]) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ShowAndSeasons) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShowIds, PostSeasons) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShowIds, IEnumerable<int>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ITraktShowIds, int, params int[]) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowAndSeasons(ShowIdsAndSeasons) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowsAndSeasons(IEnumerable<ShowAndSeasons>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithShowsAndSeasons(IEnumerable<ShowIdsAndSeasons>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithSeason(ITraktSeason) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithSeason(ITraktSeasonIds) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithSeasons(IEnumerable<ITraktSeason>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithSeasons(IEnumerable<ITraktSeasonIds>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithEpisode(ITraktEpisode) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithEpisode(ITraktEpisodeIds) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithEpisodes(IEnumerable<ITraktEpisode>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.WithEpisodes(IEnumerable<ITraktEpisodeIds>) ITraktRemovePostBuilder<ITraktUserPersonalListItemsRemovePostBuilder, ITraktUserPersonalListItemsRemovePost>.Build() Methods WithPerson(ITraktPerson) Adds the given person to the builder. ITraktUserPersonalListItemsRemovePostBuilder WithPerson(ITraktPerson person) Parameters person ITraktPerson The ITraktPerson which will be added. Returns ITraktUserPersonalListItemsRemovePostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given person is null. WithPerson(ITraktPersonIds) Adds the given personIds to the builder. ITraktUserPersonalListItemsRemovePostBuilder WithPerson(ITraktPersonIds personIds) Parameters personIds ITraktPersonIds The ITraktPersonIds which will be added. Returns ITraktUserPersonalListItemsRemovePostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given personIds is null. WithPersons(IEnumerable<ITraktPersonIds>) Adds the given personIds collection to the builder. ITraktUserPersonalListItemsRemovePostBuilder WithPersons(IEnumerable<ITraktPersonIds> personIds) Parameters personIds IEnumerable<ITraktPersonIds> A collection of ITraktPersonIdss which will be added. Returns ITraktUserPersonalListItemsRemovePostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given personIds is null. WithPersons(IEnumerable<ITraktPerson>) Adds the given persons collection to the builder. ITraktUserPersonalListItemsRemovePostBuilder WithPersons(IEnumerable<ITraktPerson> persons) Parameters persons IEnumerable<ITraktPerson> A collection of ITraktPersons which will be added. Returns ITraktUserPersonalListItemsRemovePostBuilder Returns a reference to itself. See also ITraktUserPersonalListItemsRemovePostBuilder. Exceptions ArgumentNullException Thrown, if the given persons is null."
  },
  "api/TraktNet.PostBuilder.MovieIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.MovieIdsWithMetadata.html",
    "title": "Class MovieIdsWithMetadata | Trakt.NET",
    "keywords": "Class MovieIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with ITraktMetadata. public sealed class MovieIdsWithMetadata : EntryWithMetadata<ITraktMovieIds> Inheritance object CollectionEntry<ITraktMovieIds> EntryWithMetadata<ITraktMovieIds> MovieIdsWithMetadata Inherited Members EntryWithMetadata<ITraktMovieIds>.Metadata CollectionEntry<ITraktMovieIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MovieIdsWithMetadata(ITraktMovieIds, ITraktMetadata) Initializes a new instance of the MovieIdsWithMetadata class. public MovieIdsWithMetadata(ITraktMovieIds movieIds, ITraktMetadata metadata) Parameters movieIds ITraktMovieIds A ITraktMovieIds. metadata ITraktMetadata The ITraktMetadata for the movieIds."
  },
  "api/TraktNet.PostBuilder.MovieIdsWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.MovieIdsWithNotes.html",
    "title": "Class MovieIdsWithNotes | Trakt.NET",
    "keywords": "Class MovieIdsWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with notes. public class MovieIdsWithNotes : EntryWithNotes<ITraktMovieIds> Inheritance object EntryWithNotes<ITraktMovieIds> MovieIdsWithNotes Inherited Members EntryWithNotes<ITraktMovieIds>.Object EntryWithNotes<ITraktMovieIds>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MovieIdsWithNotes(ITraktMovieIds, string) Initializes a new instance of the MovieIdsWithNotes class. public MovieIdsWithNotes(ITraktMovieIds movieIds, string notes) Parameters movieIds ITraktMovieIds A ITraktMovieIds. notes string The notes for the movieIds."
  },
  "api/TraktNet.PostBuilder.MovieWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.MovieWithMetadata.html",
    "title": "Class MovieWithMetadata | Trakt.NET",
    "keywords": "Class MovieWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with ITraktMetadata. public sealed class MovieWithMetadata : EntryWithMetadata<ITraktMovie> Inheritance object CollectionEntry<ITraktMovie> EntryWithMetadata<ITraktMovie> MovieWithMetadata Inherited Members EntryWithMetadata<ITraktMovie>.Metadata CollectionEntry<ITraktMovie>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MovieWithMetadata(ITraktMovie, ITraktMetadata) Initializes a new instance of the MovieWithMetadata class. public MovieWithMetadata(ITraktMovie movie, ITraktMetadata metadata) Parameters movie ITraktMovie A ITraktMovie. metadata ITraktMetadata The ITraktMetadata for the movie."
  },
  "api/TraktNet.PostBuilder.MovieWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.MovieWithNotes.html",
    "title": "Class MovieWithNotes | Trakt.NET",
    "keywords": "Class MovieWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with notes. public class MovieWithNotes : EntryWithNotes<ITraktMovie> Inheritance object EntryWithNotes<ITraktMovie> MovieWithNotes Inherited Members EntryWithNotes<ITraktMovie>.Object EntryWithNotes<ITraktMovie>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MovieWithNotes(ITraktMovie, string) Initializes a new instance of the MovieWithNotes class. public MovieWithNotes(ITraktMovie movie, string notes) Parameters movie ITraktMovie A ITraktMovie. notes string The notes for the movie."
  },
  "api/TraktNet.PostBuilder.PersonIdsWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.PersonIdsWithNotes.html",
    "title": "Class PersonIdsWithNotes | Trakt.NET",
    "keywords": "Class PersonIdsWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktPersonIds with notes. public class PersonIdsWithNotes : EntryWithNotes<ITraktPersonIds> Inheritance object EntryWithNotes<ITraktPersonIds> PersonIdsWithNotes Inherited Members EntryWithNotes<ITraktPersonIds>.Object EntryWithNotes<ITraktPersonIds>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonIdsWithNotes(ITraktPersonIds, string) Initializes a new instance of the PersonIdsWithNotes class. public PersonIdsWithNotes(ITraktPersonIds personIds, string notes) Parameters personIds ITraktPersonIds A ITraktPersonIds. notes string The notes for the personIds."
  },
  "api/TraktNet.PostBuilder.PersonWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.PersonWithNotes.html",
    "title": "Class PersonWithNotes | Trakt.NET",
    "keywords": "Class PersonWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktPerson with notes. public class PersonWithNotes : EntryWithNotes<ITraktPerson> Inheritance object EntryWithNotes<ITraktPerson> PersonWithNotes Inherited Members EntryWithNotes<ITraktPerson>.Object EntryWithNotes<ITraktPerson>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonWithNotes(ITraktPerson, string) Initializes a new instance of the PersonWithNotes class. public PersonWithNotes(ITraktPerson person, string notes) Parameters person ITraktPerson A ITraktPerson. notes string The notes for the person."
  },
  "api/TraktNet.PostBuilder.PostCollectionEpisode.html": {
    "href": "api/TraktNet.PostBuilder.PostCollectionEpisode.html",
    "title": "Class PostCollectionEpisode | Trakt.NET",
    "keywords": "Class PostCollectionEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains an episode number, optional metadata and an optional datetime, when it was collected public sealed class PostCollectionEpisode Inheritance object PostCollectionEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostCollectionEpisode(int) Initializes a new instance of the PostCollectionEpisode class. public PostCollectionEpisode(int number) Parameters number int The number of this episode. PostCollectionEpisode(int, DateTime) Initializes a new instance of the PostCollectionEpisode class. public PostCollectionEpisode(int number, DateTime collectedAt) Parameters number int The number of this episode. collectedAt DateTime The UTC datetime, when this episode was collected. PostCollectionEpisode(int, ITraktMetadata) Initializes a new instance of the PostCollectionEpisode class. public PostCollectionEpisode(int number, ITraktMetadata metadata) Parameters number int The number of this episode. metadata ITraktMetadata The metadata of this episode. PostCollectionEpisode(int, ITraktMetadata, DateTime) Initializes a new instance of the PostCollectionEpisode class. public PostCollectionEpisode(int number, ITraktMetadata metadata, DateTime collectedAt) Parameters number int The number of this episode. metadata ITraktMetadata The metadata of this episode. collectedAt DateTime The UTC datetime, when this episode was collected. Properties CollectedAt Gets the optional UTC datetime, when this episode was collected. public DateTime? CollectedAt { get; } Property Value DateTime? Metadata Gets the metadata of this episode. public ITraktMetadata Metadata { get; } Property Value ITraktMetadata Number Gets the number of this episode. public int Number { get; } Property Value int"
  },
  "api/TraktNet.PostBuilder.PostCollectionEpisodes.html": {
    "href": "api/TraktNet.PostBuilder.PostCollectionEpisodes.html",
    "title": "Class PostCollectionEpisodes | Trakt.NET",
    "keywords": "Class PostCollectionEpisodes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A list of episode numbers. Each episode number can have optional metadata and an optional datetime, when it was collected. public sealed class PostCollectionEpisodes : IEnumerable<PostCollectionEpisode>, IEnumerable Inheritance object PostCollectionEpisodes Implements IEnumerable<PostCollectionEpisode> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostCollectionEpisodes() Initializes a new instance of the PostCollectionEpisodes class. public PostCollectionEpisodes() Methods Add(int) Adds the given episode number to the list. public void Add(int episodeNumber) Parameters episodeNumber int The episode number, which will be added to the list. Add(int, DateTime) Adds the given episode number to the list. public void Add(int episodeNumber, DateTime collectedAt) Parameters episodeNumber int The episode number, which will be added to the list. collectedAt DateTime An UTC datetime, when the episode was collected. Add(int, ITraktMetadata) Adds the given episode number to the list. public void Add(int episodeNumber, ITraktMetadata metadata) Parameters episodeNumber int The episode number, which will be added to the list. metadata ITraktMetadata The metadata of the episode. Add(int, ITraktMetadata, DateTime) Adds the given episode number to the list. public void Add(int episodeNumber, ITraktMetadata metadata, DateTime collectedAt) Parameters episodeNumber int The episode number, which will be added to the list. metadata ITraktMetadata The metadata of the episode. collectedAt DateTime An UTC datetime, when the episode was collected. Add(PostCollectionEpisode, params PostCollectionEpisode[]) Adds the given episode numbers to the list. public void Add(PostCollectionEpisode episode, params PostCollectionEpisode[] episodes) Parameters episode PostCollectionEpisode An episode number. See also PostCollectionEpisode. episodes PostCollectionEpisode[] An optional list of episode numbers. See also PostCollectionEpisode. GetEnumerator() public IEnumerator<PostCollectionEpisode> GetEnumerator() Returns IEnumerator<PostCollectionEpisode>"
  },
  "api/TraktNet.PostBuilder.PostCollectionSeason.html": {
    "href": "api/TraktNet.PostBuilder.PostCollectionSeason.html",
    "title": "Class PostCollectionSeason | Trakt.NET",
    "keywords": "Class PostCollectionSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains a season number, optional metadata and an optional datetime, when it was collected. Can also contain an optional list of episodes numbers. public sealed class PostCollectionSeason Inheritance object PostCollectionSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostCollectionSeason(int) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number) Parameters number int The number of this season. PostCollectionSeason(int, DateTime) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, DateTime collectedAt) Parameters number int The number of this season. collectedAt DateTime An UTC datetime, when this season was collected. PostCollectionSeason(int, DateTime, PostCollectionEpisodes) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, DateTime collectedAt, PostCollectionEpisodes episodes) Parameters number int The number of this season. collectedAt DateTime An UTC datetime, when this season was collected. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. PostCollectionSeason(int, ITraktMetadata) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, ITraktMetadata metadata) Parameters number int The number of this season. metadata ITraktMetadata The metadata of this season. PostCollectionSeason(int, ITraktMetadata, DateTime) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, ITraktMetadata metadata, DateTime collectedAt) Parameters number int The number of this season. metadata ITraktMetadata The metadata of this season. collectedAt DateTime An UTC datetime, when this season was collected. PostCollectionSeason(int, ITraktMetadata, DateTime, PostCollectionEpisodes) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, ITraktMetadata metadata, DateTime collectedAt, PostCollectionEpisodes episodes) Parameters number int The number of this season. metadata ITraktMetadata The metadata of this season. collectedAt DateTime An UTC datetime, when this season was collected. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. PostCollectionSeason(int, ITraktMetadata, PostCollectionEpisodes) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, ITraktMetadata metadata, PostCollectionEpisodes episodes) Parameters number int The number of this season. metadata ITraktMetadata The metadata of this season. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. PostCollectionSeason(int, PostCollectionEpisodes) Initializes a new instance of the PostCollectionSeason class. public PostCollectionSeason(int number, PostCollectionEpisodes episodes) Parameters number int The number of this season. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. Properties CollectedAt Gets the optional UTC datetime, when this season was collected. public DateTime? CollectedAt { get; } Property Value DateTime? Episodes Gets a list of episode numbers. See also PostCollectionEpisodes. public PostCollectionEpisodes Episodes { get; } Property Value PostCollectionEpisodes Metadata Gets the metadata of this season. public ITraktMetadata Metadata { get; } Property Value ITraktMetadata Number Gets the number of this season. public int Number { get; } Property Value int"
  },
  "api/TraktNet.PostBuilder.PostCollectionSeasons.html": {
    "href": "api/TraktNet.PostBuilder.PostCollectionSeasons.html",
    "title": "Class PostCollectionSeasons | Trakt.NET",
    "keywords": "Class PostCollectionSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A collection of season and episode numbers. Can also contain metadata and collected datetimes for each season and episode number. public sealed class PostCollectionSeasons : IEnumerable<PostCollectionSeason>, IEnumerable Inheritance object PostCollectionSeasons Implements IEnumerable<PostCollectionSeason> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostCollectionSeasons() Initializes a new instance of the PostCollectionSeasons class. public PostCollectionSeasons() Methods Add(IEnumerable<int>) Adds the given season numbers to the list. public void Add(IEnumerable<int> seasons) Parameters seasons IEnumerable<int> The season numbers, which will be added to the list. Add(int) Adds a season number to the collection. public void Add(int seasonNumber) Parameters seasonNumber int The season number, which will be added. Add(int, DateTime) Adds a season number to the collection. public void Add(int seasonNumber, DateTime collectedAt) Parameters seasonNumber int The season number, which will be added. collectedAt DateTime An UTC datetime, when the season was collected. Add(int, DateTime, PostCollectionEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, DateTime collectedAt, PostCollectionEpisodes episodes) Parameters seasonNumber int The season number, which will be added. collectedAt DateTime An UTC datetime, when the season was collected. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. Add(int, params int[]) Adds the given season numbers to the list. public void Add(int season, params int[] seasons) Parameters season int An season number, which will be added to the list. seasons int[] An optional array of season numbers, which will be added to the list. Add(int, ITraktMetadata) Adds a season number to the collection. public void Add(int seasonNumber, ITraktMetadata metadata) Parameters seasonNumber int The season number, which will be added. metadata ITraktMetadata The metadata of the season. Add(int, ITraktMetadata, DateTime) Adds a season number to the collection. public void Add(int seasonNumber, ITraktMetadata metadata, DateTime collectedAt) Parameters seasonNumber int The season number, which will be added. metadata ITraktMetadata The metadata of the season. collectedAt DateTime An UTC datetime, when the season was collected. Add(int, ITraktMetadata, DateTime, PostCollectionEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, ITraktMetadata metadata, DateTime collectedAt, PostCollectionEpisodes episodes) Parameters seasonNumber int The season number, which will be added. metadata ITraktMetadata The metadata of the season. collectedAt DateTime An UTC datetime, when the season was collected. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. Add(int, ITraktMetadata, PostCollectionEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, ITraktMetadata metadata, PostCollectionEpisodes episodes) Parameters seasonNumber int The season number, which will be added. metadata ITraktMetadata The metadata of the season. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. Add(int, PostCollectionEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, PostCollectionEpisodes episodes) Parameters seasonNumber int The season number, which will be added. episodes PostCollectionEpisodes A list of episode numbers. See also PostCollectionEpisodes. Add(PostCollectionSeason, params PostCollectionSeason[]) Adds the given season numbers to the list. public void Add(PostCollectionSeason season, params PostCollectionSeason[] seasons) Parameters season PostCollectionSeason An season number. See also PostCollectionSeason. seasons PostCollectionSeason[] An optional list of season numbers. See also PostCollectionSeason. GetEnumerator() public IEnumerator<PostCollectionSeason> GetEnumerator() Returns IEnumerator<PostCollectionSeason>"
  },
  "api/TraktNet.PostBuilder.PostEpisode.html": {
    "href": "api/TraktNet.PostBuilder.PostEpisode.html",
    "title": "Class PostEpisode | Trakt.NET",
    "keywords": "Class PostEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains an episode number. public sealed class PostEpisode Inheritance object PostEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostEpisode(int) Initializes a new instance of the PostEpisode class. public PostEpisode(int number) Parameters number int The number of this episode. Properties Number Gets the number of this episode. public int Number { get; } Property Value int"
  },
  "api/TraktNet.PostBuilder.PostEpisodes.html": {
    "href": "api/TraktNet.PostBuilder.PostEpisodes.html",
    "title": "Class PostEpisodes | Trakt.NET",
    "keywords": "Class PostEpisodes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A list of episode numbers. public sealed class PostEpisodes : IEnumerable<PostEpisode>, IEnumerable Inheritance object PostEpisodes Implements IEnumerable<PostEpisode> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostEpisodes() Initializes a new instance of the PostEpisodes class. public PostEpisodes() Methods Add(int) Adds the given episode number to the list. public void Add(int episodeNumber) Parameters episodeNumber int The episode number, which will be added to the list. Add(PostEpisode, params PostEpisode[]) Adds the given episode numbers to the list. public void Add(PostEpisode episode, params PostEpisode[] episodes) Parameters episode PostEpisode An episode number, which will be added to the list. episodes PostEpisode[] An optional array of episode numbers, which will be added to the list. GetEnumerator() public IEnumerator<PostEpisode> GetEnumerator() Returns IEnumerator<PostEpisode>"
  },
  "api/TraktNet.PostBuilder.PostHistoryEpisode.html": {
    "href": "api/TraktNet.PostBuilder.PostHistoryEpisode.html",
    "title": "Class PostHistoryEpisode | Trakt.NET",
    "keywords": "Class PostHistoryEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains an episode number and an optional datetime, when it was watched. public sealed class PostHistoryEpisode Inheritance object PostHistoryEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostHistoryEpisode(int) Initializes a new instance of the PostHistoryEpisode class. public PostHistoryEpisode(int number) Parameters number int The number of this episode. PostHistoryEpisode(int, DateTime) Initializes a new instance of the PostHistoryEpisode class. public PostHistoryEpisode(int number, DateTime watchedAt) Parameters number int The number of this episode. watchedAt DateTime The UTC datetime, when this episode was watched. Properties Number Gets the number of this episode. public int Number { get; } Property Value int WatchedAt Gets the optional UTC datetime, when this episode was watched. public DateTime? WatchedAt { get; } Property Value DateTime?"
  },
  "api/TraktNet.PostBuilder.PostHistoryEpisodes.html": {
    "href": "api/TraktNet.PostBuilder.PostHistoryEpisodes.html",
    "title": "Class PostHistoryEpisodes | Trakt.NET",
    "keywords": "Class PostHistoryEpisodes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A list of episode numbers. Each episode number can have an optional datetime, when it was watched. public sealed class PostHistoryEpisodes : IEnumerable<PostHistoryEpisode>, IEnumerable Inheritance object PostHistoryEpisodes Implements IEnumerable<PostHistoryEpisode> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostHistoryEpisodes() Initializes a new instance of the PostHistoryEpisodes class. public PostHistoryEpisodes() Methods Add(int) Adds the given episode number to the list. public void Add(int episodeNumber) Parameters episodeNumber int The episode number, which will be added to the list. Add(int, DateTime) Adds the given episode number to the list. public void Add(int episodeNumber, DateTime watchedAt) Parameters episodeNumber int The episode number, which will be added to the list. watchedAt DateTime An UTC datetime, when the episode was watched. Add(PostHistoryEpisode, params PostHistoryEpisode[]) Adds the given episode numbers to the list. public void Add(PostHistoryEpisode episode, params PostHistoryEpisode[] episodes) Parameters episode PostHistoryEpisode An episode number. See also PostHistoryEpisode. episodes PostHistoryEpisode[] An optional list of episode numbers. See also PostHistoryEpisode. GetEnumerator() public IEnumerator<PostHistoryEpisode> GetEnumerator() Returns IEnumerator<PostHistoryEpisode>"
  },
  "api/TraktNet.PostBuilder.PostHistorySeason.html": {
    "href": "api/TraktNet.PostBuilder.PostHistorySeason.html",
    "title": "Class PostHistorySeason | Trakt.NET",
    "keywords": "Class PostHistorySeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains a season number and an optional datetime, when it was watched. Can also contain an optional list of episodes numbers. public sealed class PostHistorySeason Inheritance object PostHistorySeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostHistorySeason(int) Initializes a new instance of the PostHistorySeason class. public PostHistorySeason(int number) Parameters number int The number of this season. PostHistorySeason(int, DateTime) Initializes a new instance of the PostHistorySeason class. public PostHistorySeason(int number, DateTime watchedAt) Parameters number int The number of this season. watchedAt DateTime An UTC datetime, when this season was watched. PostHistorySeason(int, DateTime, PostHistoryEpisodes) Initializes a new instance of the PostHistorySeason class. public PostHistorySeason(int number, DateTime watchedAt, PostHistoryEpisodes episodes) Parameters number int The number of this season. watchedAt DateTime An UTC datetime, when this season was watched. episodes PostHistoryEpisodes A list of episode numbers. See also PostHistoryEpisodes. PostHistorySeason(int, PostHistoryEpisodes) Initializes a new instance of the PostHistorySeason class. public PostHistorySeason(int number, PostHistoryEpisodes episodes) Parameters number int The number of this season. episodes PostHistoryEpisodes A list of episode numbers. See also PostHistoryEpisodes. Properties Episodes Gets a list of episode numbers. See also PostHistoryEpisodes. public PostHistoryEpisodes Episodes { get; } Property Value PostHistoryEpisodes Number Gets the number of this season. public int Number { get; } Property Value int WatchedAt Gets the optional UTC datetime, when this season was watched. public DateTime? WatchedAt { get; } Property Value DateTime?"
  },
  "api/TraktNet.PostBuilder.PostHistorySeasons.html": {
    "href": "api/TraktNet.PostBuilder.PostHistorySeasons.html",
    "title": "Class PostHistorySeasons | Trakt.NET",
    "keywords": "Class PostHistorySeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A collection of season and episode numbers. Can also contain watched datetimes for each season and episode number. public sealed class PostHistorySeasons : IEnumerable<PostHistorySeason>, IEnumerable Inheritance object PostHistorySeasons Implements IEnumerable<PostHistorySeason> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostHistorySeasons() Initializes a new instance of the PostHistorySeasons class. public PostHistorySeasons() Methods Add(IEnumerable<int>) Adds the given season numbers to the list. public void Add(IEnumerable<int> seasons) Parameters seasons IEnumerable<int> The season numbers, which will be added to the list. Add(int) Adds a season number to the collection. public void Add(int seasonNumber) Parameters seasonNumber int The season number, which will be added. Add(int, DateTime) Adds a season number to the collection. public void Add(int seasonNumber, DateTime watchedAt) Parameters seasonNumber int The season number, which will be added. watchedAt DateTime An UTC datetime, when the season was watched. Add(int, DateTime, PostHistoryEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, DateTime watchedAt, PostHistoryEpisodes episodes) Parameters seasonNumber int The season number, which will be added. watchedAt DateTime An UTC datetime, when the season was watched. episodes PostHistoryEpisodes A list of episode numbers. See also PostHistoryEpisodes. Add(int, params int[]) Adds the given season numbers to the list. public void Add(int season, params int[] seasons) Parameters season int An season number, which will be added to the list. seasons int[] An optional array of season numbers, which will be added to the list. Add(int, PostHistoryEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, PostHistoryEpisodes episodes) Parameters seasonNumber int The season number, which will be added. episodes PostHistoryEpisodes A list of episode numbers. See also PostHistoryEpisodes. Add(PostHistorySeason, params PostHistorySeason[]) Adds the given season numbers to the list. public void Add(PostHistorySeason season, params PostHistorySeason[] seasons) Parameters season PostHistorySeason An season number. See also PostHistorySeason. seasons PostHistorySeason[] An optional list of season numbers. See also PostHistorySeason. GetEnumerator() public IEnumerator<PostHistorySeason> GetEnumerator() Returns IEnumerator<PostHistorySeason>"
  },
  "api/TraktNet.PostBuilder.PostRatingsEpisode.html": {
    "href": "api/TraktNet.PostBuilder.PostRatingsEpisode.html",
    "title": "Class PostRatingsEpisode | Trakt.NET",
    "keywords": "Class PostRatingsEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains an episode number and rating and an optional datetime, when it was rated. public sealed class PostRatingsEpisode Inheritance object PostRatingsEpisode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostRatingsEpisode(int, TraktPostRating) Initializes a new instance of the PostRatingsEpisode class. public PostRatingsEpisode(int number, TraktPostRating rating) Parameters number int The number of this episode. rating TraktPostRating The rating for this episode. PostRatingsEpisode(int, TraktPostRating, DateTime) Initializes a new instance of the PostRatingsEpisode class. public PostRatingsEpisode(int number, TraktPostRating rating, DateTime ratedAt) Parameters number int The number of this episode. rating TraktPostRating The rating for this episode. ratedAt DateTime The UTC datetime, when this episode was rated. Properties Number Gets the number of this episode. public int Number { get; } Property Value int RatedAt Gets the optional UTC datetime, when this episode was rated. public DateTime? RatedAt { get; } Property Value DateTime? Rating Gets the rating of this episode. public TraktPostRating Rating { get; } Property Value TraktPostRating"
  },
  "api/TraktNet.PostBuilder.PostRatingsEpisodes.html": {
    "href": "api/TraktNet.PostBuilder.PostRatingsEpisodes.html",
    "title": "Class PostRatingsEpisodes | Trakt.NET",
    "keywords": "Class PostRatingsEpisodes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A list of episode numbers. Each episode number has a rating and an optional datetime, when it was rated. public sealed class PostRatingsEpisodes : IEnumerable<PostRatingsEpisode>, IEnumerable Inheritance object PostRatingsEpisodes Implements IEnumerable<PostRatingsEpisode> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostRatingsEpisodes() Initializes a new instance of the PostRatingsEpisodes class. public PostRatingsEpisodes() Methods Add(int, TraktPostRating) Adds the given episode number to the list. public void Add(int episodeNumber, TraktPostRating rating) Parameters episodeNumber int The episode number, which will be added to the list. rating TraktPostRating A rating for the episode. Add(int, TraktPostRating, DateTime) Adds the given episode number to the list. public void Add(int episodeNumber, TraktPostRating rating, DateTime ratedAt) Parameters episodeNumber int The episode number, which will be added to the list. rating TraktPostRating A rating for the episode. ratedAt DateTime An UTC datetime, when the episode was rated. Add(PostRatingsEpisode, params PostRatingsEpisode[]) Adds the given episode numbers to the list. public void Add(PostRatingsEpisode episode, params PostRatingsEpisode[] episodes) Parameters episode PostRatingsEpisode An episode number. See also PostRatingsEpisode. episodes PostRatingsEpisode[] An optional list of episode numbers. See also PostRatingsEpisode. GetEnumerator() public IEnumerator<PostRatingsEpisode> GetEnumerator() Returns IEnumerator<PostRatingsEpisode>"
  },
  "api/TraktNet.PostBuilder.PostRatingsSeason.html": {
    "href": "api/TraktNet.PostBuilder.PostRatingsSeason.html",
    "title": "Class PostRatingsSeason | Trakt.NET",
    "keywords": "Class PostRatingsSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains a season number and rating and an optional datetime, when it was rated. Can also contain an optional list of episodes numbers. public sealed class PostRatingsSeason Inheritance object PostRatingsSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostRatingsSeason(int, PostRatingsEpisodes) Initializes a new instance of the PostRatingsSeason class. public PostRatingsSeason(int number, PostRatingsEpisodes episodes) Parameters number int The number of this season. episodes PostRatingsEpisodes A list of episode numbers. See also PostRatingsEpisodes. PostRatingsSeason(int, TraktPostRating) Initializes a new instance of the PostRatingsSeason class. public PostRatingsSeason(int number, TraktPostRating rating) Parameters number int The number of this season. rating TraktPostRating A rating for the season. PostRatingsSeason(int, TraktPostRating, DateTime) Initializes a new instance of the PostRatingsSeason class. public PostRatingsSeason(int number, TraktPostRating rating, DateTime ratedAt) Parameters number int The number of this season. rating TraktPostRating A rating for the season. ratedAt DateTime An UTC datetime, when this season was rated. Properties Episodes Gets a list of episode numbers. See also PostRatingsEpisodes. public PostRatingsEpisodes Episodes { get; } Property Value PostRatingsEpisodes Number Gets the number of this season. public int Number { get; } Property Value int RatedAt Gets the optional UTC datetime, when this season was rated. public DateTime? RatedAt { get; } Property Value DateTime? Rating Gets the rating of this season. public TraktPostRating? Rating { get; } Property Value TraktPostRating?"
  },
  "api/TraktNet.PostBuilder.PostRatingsSeasons.html": {
    "href": "api/TraktNet.PostBuilder.PostRatingsSeasons.html",
    "title": "Class PostRatingsSeasons | Trakt.NET",
    "keywords": "Class PostRatingsSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A collection of season and episode numbers. Contains ratings and datetimes of the ratings for each season and episode number. public sealed class PostRatingsSeasons : IEnumerable<PostRatingsSeason>, IEnumerable Inheritance object PostRatingsSeasons Implements IEnumerable<PostRatingsSeason> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostRatingsSeasons() Initializes a new instance of the PostRatingsSeasons class. public PostRatingsSeasons() Methods Add(int, PostRatingsEpisodes) Adds a season number to the collection. public void Add(int seasonNumber, PostRatingsEpisodes episodes) Parameters seasonNumber int The season number, which will be added. episodes PostRatingsEpisodes A list of episode numbers. See also PostRatingsEpisodes. Add(int, TraktPostRating) Adds a season number to the collection. public void Add(int seasonNumber, TraktPostRating rating) Parameters seasonNumber int The season number, which will be added. rating TraktPostRating A rating for the season number. Add(int, TraktPostRating, DateTime) Adds a season number to the collection. public void Add(int seasonNumber, TraktPostRating rating, DateTime ratedAt) Parameters seasonNumber int The season number, which will be added. rating TraktPostRating A rating for the season number. ratedAt DateTime An UTC datetime, when the season was rated. Add(PostRatingsSeason, params PostRatingsSeason[]) Adds the given season numbers to the list. public void Add(PostRatingsSeason season, params PostRatingsSeason[] seasons) Parameters season PostRatingsSeason An season number. See also PostRatingsSeason. seasons PostRatingsSeason[] An optional list of season numbers. See also PostRatingsSeason. GetEnumerator() public IEnumerator<PostRatingsSeason> GetEnumerator() Returns IEnumerator<PostRatingsSeason>"
  },
  "api/TraktNet.PostBuilder.PostSeason.html": {
    "href": "api/TraktNet.PostBuilder.PostSeason.html",
    "title": "Class PostSeason | Trakt.NET",
    "keywords": "Class PostSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Contains a season number and an optional list of episodes numbers. public sealed class PostSeason Inheritance object PostSeason Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostSeason(int) Initializes a new instance of the PostSeason class. public PostSeason(int number) Parameters number int The number of this season. PostSeason(int, PostEpisodes) Initializes a new instance of the PostSeason class. public PostSeason(int number, PostEpisodes episodes) Parameters number int The number of this season. episodes PostEpisodes A list of episode numbers. See also PostEpisodes. Properties Episodes Gets a list of episode numbers. See also PostEpisodes. public PostEpisodes Episodes { get; } Property Value PostEpisodes Number Gets the number of this season. public int Number { get; } Property Value int"
  },
  "api/TraktNet.PostBuilder.PostSeasons.html": {
    "href": "api/TraktNet.PostBuilder.PostSeasons.html",
    "title": "Class PostSeasons | Trakt.NET",
    "keywords": "Class PostSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll A collection of season and episode numbers. public sealed class PostSeasons : IEnumerable<PostSeason>, IEnumerable Inheritance object PostSeasons Implements IEnumerable<PostSeason> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PostSeasons() Initializes a new instance of the PostSeasons class. public PostSeasons() Methods Add(IEnumerable<int>) Adds the given season numbers to the list. public void Add(IEnumerable<int> seasons) Parameters seasons IEnumerable<int> The season numbers, which will be added to the list. Add(int) Adds a season number to the collection. public void Add(int seasonNumber) Parameters seasonNumber int The season number, which will be added. Add(int, params int[]) Adds the given season numbers to the list. public void Add(int season, params int[] seasons) Parameters season int An season number, which will be added to the list. seasons int[] An optional array of season numbers, which will be added to the list. Add(int, PostEpisodes) Adds a season number and a list of episode numbers to the collection. public void Add(int seasonNumber, PostEpisodes episodes) Parameters seasonNumber int The season number, which will be added. episodes PostEpisodes A list of episode numbers. See also PostEpisodes. Add(PostSeason, params PostSeason[]) Adds the given season numbers to the list. public void Add(PostSeason season, params PostSeason[] seasons) Parameters season PostSeason An season number, which will be added to the list. seasons PostSeason[] An optional array of season numbers, which will be added to the list. GetEnumerator() public IEnumerator<PostSeason> GetEnumerator() Returns IEnumerator<PostSeason>"
  },
  "api/TraktNet.PostBuilder.RatingsAndSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.RatingsAndSeasons-1.html",
    "title": "Class RatingsAndSeasons<T> | Trakt.NET",
    "keywords": "Class RatingsAndSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class RatingsAndSeasons<T> Type Parameters T Inheritance object RatingsAndSeasons<T> Derived RatingsShowAndSeasons RatingsShowIdsAndSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsAndSeasons(T, PostRatingsSeasons) protected RatingsAndSeasons(T obj, PostRatingsSeasons seasons) Parameters obj T seasons PostRatingsSeasons Properties Object public T Object { get; } Property Value T Seasons public PostRatingsSeasons Seasons { get; } Property Value PostRatingsSeasons"
  },
  "api/TraktNet.PostBuilder.RatingsEntry-1.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEntry-1.html",
    "title": "Class RatingsEntry<T> | Trakt.NET",
    "keywords": "Class RatingsEntry<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class RatingsEntry<T> Type Parameters T Inheritance object RatingsEntry<T> Derived RatingsEntryRatedAt<T> RatingsEpisode RatingsEpisodeIds RatingsMovie RatingsMovieIds RatingsSeason RatingsSeasonIds RatingsShow RatingsShowIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEntry(T, TraktPostRating) protected RatingsEntry(T obj, TraktPostRating rating) Parameters obj T rating TraktPostRating Properties Object public T Object { get; } Property Value T Rating public TraktPostRating Rating { get; } Property Value TraktPostRating"
  },
  "api/TraktNet.PostBuilder.RatingsEntryRatedAt-1.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEntryRatedAt-1.html",
    "title": "Class RatingsEntryRatedAt<T> | Trakt.NET",
    "keywords": "Class RatingsEntryRatedAt<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class RatingsEntryRatedAt<T> : RatingsEntry<T> Type Parameters T Inheritance object RatingsEntry<T> RatingsEntryRatedAt<T> Derived RatingsEpisodeIdsRatedAt RatingsEpisodeRatedAt RatingsMovieIdsRatedAt RatingsMovieRatedAt RatingsSeasonIdsRatedAt RatingsSeasonRatedAt RatingsShowIdsRatedAt RatingsShowRatedAt Inherited Members RatingsEntry<T>.Object RatingsEntry<T>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEntryRatedAt(T, TraktPostRating, DateTime) protected RatingsEntryRatedAt(T obj, TraktPostRating rating, DateTime ratedAt) Parameters obj T rating TraktPostRating ratedAt DateTime Properties RatedAt public DateTime RatedAt { get; } Property Value DateTime"
  },
  "api/TraktNet.PostBuilder.RatingsEpisode.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEpisode.html",
    "title": "Class RatingsEpisode | Trakt.NET",
    "keywords": "Class RatingsEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with rating. public class RatingsEpisode : RatingsEntry<ITraktEpisode> Inheritance object RatingsEntry<ITraktEpisode> RatingsEpisode Inherited Members RatingsEntry<ITraktEpisode>.Object RatingsEntry<ITraktEpisode>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEpisode(ITraktEpisode, TraktPostRating) Initializes a new instance of the RatingsEpisode class. public RatingsEpisode(ITraktEpisode episode, TraktPostRating rating) Parameters episode ITraktEpisode A ITraktEpisode. rating TraktPostRating The rating for the episode."
  },
  "api/TraktNet.PostBuilder.RatingsEpisodeIds.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEpisodeIds.html",
    "title": "Class RatingsEpisodeIds | Trakt.NET",
    "keywords": "Class RatingsEpisodeIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with rating. public class RatingsEpisodeIds : RatingsEntry<ITraktEpisodeIds> Inheritance object RatingsEntry<ITraktEpisodeIds> RatingsEpisodeIds Inherited Members RatingsEntry<ITraktEpisodeIds>.Object RatingsEntry<ITraktEpisodeIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEpisodeIds(ITraktEpisodeIds, TraktPostRating) Initializes a new instance of the RatingsEpisodeIds class. public RatingsEpisodeIds(ITraktEpisodeIds episodeIds, TraktPostRating rating) Parameters episodeIds ITraktEpisodeIds A ITraktEpisodeIds. rating TraktPostRating The rating for the episodeIds."
  },
  "api/TraktNet.PostBuilder.RatingsEpisodeIdsRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEpisodeIdsRatedAt.html",
    "title": "Class RatingsEpisodeIdsRatedAt | Trakt.NET",
    "keywords": "Class RatingsEpisodeIdsRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with a UTC datetime, when it was rated. public sealed class RatingsEpisodeIdsRatedAt : RatingsEntryRatedAt<ITraktEpisodeIds> Inheritance object RatingsEntry<ITraktEpisodeIds> RatingsEntryRatedAt<ITraktEpisodeIds> RatingsEpisodeIdsRatedAt Inherited Members RatingsEntryRatedAt<ITraktEpisodeIds>.RatedAt RatingsEntry<ITraktEpisodeIds>.Object RatingsEntry<ITraktEpisodeIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEpisodeIdsRatedAt(ITraktEpisodeIds, TraktPostRating, DateTime) Initializes a new instance of the RatingsEpisodeIdsRatedAt class. public RatingsEpisodeIdsRatedAt(ITraktEpisodeIds episodeIds, TraktPostRating rating, DateTime ratedAt) Parameters episodeIds ITraktEpisodeIds A rated ITraktEpisodeIds. rating TraktPostRating The rating for the episodeIds. ratedAt DateTime The UTC datetime when the episodeIds was rated."
  },
  "api/TraktNet.PostBuilder.RatingsEpisodeRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsEpisodeRatedAt.html",
    "title": "Class RatingsEpisodeRatedAt | Trakt.NET",
    "keywords": "Class RatingsEpisodeRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with a UTC datetime, when it was rated. public sealed class RatingsEpisodeRatedAt : RatingsEntryRatedAt<ITraktEpisode> Inheritance object RatingsEntry<ITraktEpisode> RatingsEntryRatedAt<ITraktEpisode> RatingsEpisodeRatedAt Inherited Members RatingsEntryRatedAt<ITraktEpisode>.RatedAt RatingsEntry<ITraktEpisode>.Object RatingsEntry<ITraktEpisode>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsEpisodeRatedAt(ITraktEpisode, TraktPostRating, DateTime) Initializes a new instance of the RatingsEpisodeRatedAt class. public RatingsEpisodeRatedAt(ITraktEpisode episode, TraktPostRating rating, DateTime ratedAt) Parameters episode ITraktEpisode A rated ITraktEpisode. rating TraktPostRating The rating for the episode. ratedAt DateTime The UTC datetime when the episode was rated."
  },
  "api/TraktNet.PostBuilder.RatingsMovie.html": {
    "href": "api/TraktNet.PostBuilder.RatingsMovie.html",
    "title": "Class RatingsMovie | Trakt.NET",
    "keywords": "Class RatingsMovie Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with rating. public class RatingsMovie : RatingsEntry<ITraktMovie> Inheritance object RatingsEntry<ITraktMovie> RatingsMovie Inherited Members RatingsEntry<ITraktMovie>.Object RatingsEntry<ITraktMovie>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsMovie(ITraktMovie, TraktPostRating) Initializes a new instance of the RatingsMovie class. public RatingsMovie(ITraktMovie movie, TraktPostRating rating) Parameters movie ITraktMovie A ITraktMovie. rating TraktPostRating The rating for the movie."
  },
  "api/TraktNet.PostBuilder.RatingsMovieIds.html": {
    "href": "api/TraktNet.PostBuilder.RatingsMovieIds.html",
    "title": "Class RatingsMovieIds | Trakt.NET",
    "keywords": "Class RatingsMovieIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with rating. public class RatingsMovieIds : RatingsEntry<ITraktMovieIds> Inheritance object RatingsEntry<ITraktMovieIds> RatingsMovieIds Inherited Members RatingsEntry<ITraktMovieIds>.Object RatingsEntry<ITraktMovieIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsMovieIds(ITraktMovieIds, TraktPostRating) Initializes a new instance of the RatingsMovieIds class. public RatingsMovieIds(ITraktMovieIds movieIds, TraktPostRating rating) Parameters movieIds ITraktMovieIds A ITraktMovieIds. rating TraktPostRating The rating for the movieIds."
  },
  "api/TraktNet.PostBuilder.RatingsMovieIdsRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsMovieIdsRatedAt.html",
    "title": "Class RatingsMovieIdsRatedAt | Trakt.NET",
    "keywords": "Class RatingsMovieIdsRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with a UTC datetime, when it was rated. public sealed class RatingsMovieIdsRatedAt : RatingsEntryRatedAt<ITraktMovieIds> Inheritance object RatingsEntry<ITraktMovieIds> RatingsEntryRatedAt<ITraktMovieIds> RatingsMovieIdsRatedAt Inherited Members RatingsEntryRatedAt<ITraktMovieIds>.RatedAt RatingsEntry<ITraktMovieIds>.Object RatingsEntry<ITraktMovieIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsMovieIdsRatedAt(ITraktMovieIds, TraktPostRating, DateTime) Initializes a new instance of the RatingsMovieIdsRatedAt class. public RatingsMovieIdsRatedAt(ITraktMovieIds movieIds, TraktPostRating rating, DateTime ratedAt) Parameters movieIds ITraktMovieIds A rated ITraktMovieIds. rating TraktPostRating The rating for the movieIds. ratedAt DateTime The UTC datetime when the movieIds was rated."
  },
  "api/TraktNet.PostBuilder.RatingsMovieRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsMovieRatedAt.html",
    "title": "Class RatingsMovieRatedAt | Trakt.NET",
    "keywords": "Class RatingsMovieRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with a UTC datetime, when it was rated. public sealed class RatingsMovieRatedAt : RatingsEntryRatedAt<ITraktMovie> Inheritance object RatingsEntry<ITraktMovie> RatingsEntryRatedAt<ITraktMovie> RatingsMovieRatedAt Inherited Members RatingsEntryRatedAt<ITraktMovie>.RatedAt RatingsEntry<ITraktMovie>.Object RatingsEntry<ITraktMovie>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsMovieRatedAt(ITraktMovie, TraktPostRating, DateTime) Initializes a new instance of the RatingsMovieRatedAt class. public RatingsMovieRatedAt(ITraktMovie movie, TraktPostRating rating, DateTime ratedAt) Parameters movie ITraktMovie A rated ITraktMovie. rating TraktPostRating The rating for the movie. ratedAt DateTime The UTC datetime when the movie was rated."
  },
  "api/TraktNet.PostBuilder.RatingsSeason.html": {
    "href": "api/TraktNet.PostBuilder.RatingsSeason.html",
    "title": "Class RatingsSeason | Trakt.NET",
    "keywords": "Class RatingsSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with rating. public class RatingsSeason : RatingsEntry<ITraktSeason> Inheritance object RatingsEntry<ITraktSeason> RatingsSeason Inherited Members RatingsEntry<ITraktSeason>.Object RatingsEntry<ITraktSeason>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsSeason(ITraktSeason, TraktPostRating) Initializes a new instance of the RatingsSeason class. public RatingsSeason(ITraktSeason season, TraktPostRating rating) Parameters season ITraktSeason A ITraktSeason. rating TraktPostRating The rating for the season."
  },
  "api/TraktNet.PostBuilder.RatingsSeasonIds.html": {
    "href": "api/TraktNet.PostBuilder.RatingsSeasonIds.html",
    "title": "Class RatingsSeasonIds | Trakt.NET",
    "keywords": "Class RatingsSeasonIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with rating. public class RatingsSeasonIds : RatingsEntry<ITraktSeasonIds> Inheritance object RatingsEntry<ITraktSeasonIds> RatingsSeasonIds Inherited Members RatingsEntry<ITraktSeasonIds>.Object RatingsEntry<ITraktSeasonIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsSeasonIds(ITraktSeasonIds, TraktPostRating) Initializes a new instance of the RatingsSeasonIds class. public RatingsSeasonIds(ITraktSeasonIds seasonIds, TraktPostRating rating) Parameters seasonIds ITraktSeasonIds A ITraktSeasonIds. rating TraktPostRating The rating for the seasonIds."
  },
  "api/TraktNet.PostBuilder.RatingsSeasonIdsRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsSeasonIdsRatedAt.html",
    "title": "Class RatingsSeasonIdsRatedAt | Trakt.NET",
    "keywords": "Class RatingsSeasonIdsRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with a UTC datetime, when it was rated. public sealed class RatingsSeasonIdsRatedAt : RatingsEntryRatedAt<ITraktSeasonIds> Inheritance object RatingsEntry<ITraktSeasonIds> RatingsEntryRatedAt<ITraktSeasonIds> RatingsSeasonIdsRatedAt Inherited Members RatingsEntryRatedAt<ITraktSeasonIds>.RatedAt RatingsEntry<ITraktSeasonIds>.Object RatingsEntry<ITraktSeasonIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsSeasonIdsRatedAt(ITraktSeasonIds, TraktPostRating, DateTime) Initializes a new instance of the RatingsSeasonIdsRatedAt class. public RatingsSeasonIdsRatedAt(ITraktSeasonIds seasonIds, TraktPostRating rating, DateTime ratedAt) Parameters seasonIds ITraktSeasonIds A rated ITraktSeasonIds. rating TraktPostRating The rating for the seasonIds. ratedAt DateTime The UTC datetime when the seasonIds was rated."
  },
  "api/TraktNet.PostBuilder.RatingsSeasonRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsSeasonRatedAt.html",
    "title": "Class RatingsSeasonRatedAt | Trakt.NET",
    "keywords": "Class RatingsSeasonRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with a UTC datetime, when it was rated. public sealed class RatingsSeasonRatedAt : RatingsEntryRatedAt<ITraktSeason> Inheritance object RatingsEntry<ITraktSeason> RatingsEntryRatedAt<ITraktSeason> RatingsSeasonRatedAt Inherited Members RatingsEntryRatedAt<ITraktSeason>.RatedAt RatingsEntry<ITraktSeason>.Object RatingsEntry<ITraktSeason>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsSeasonRatedAt(ITraktSeason, TraktPostRating, DateTime) Initializes a new instance of the RatingsSeasonRatedAt class. public RatingsSeasonRatedAt(ITraktSeason season, TraktPostRating rating, DateTime ratedAt) Parameters season ITraktSeason A rated ITraktSeason. rating TraktPostRating The rating for the season. ratedAt DateTime The UTC datetime when the season was rated."
  },
  "api/TraktNet.PostBuilder.RatingsShow.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShow.html",
    "title": "Class RatingsShow | Trakt.NET",
    "keywords": "Class RatingsShow Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with rating. public class RatingsShow : RatingsEntry<ITraktShow> Inheritance object RatingsEntry<ITraktShow> RatingsShow Inherited Members RatingsEntry<ITraktShow>.Object RatingsEntry<ITraktShow>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShow(ITraktShow, TraktPostRating) Initializes a new instance of the RatingsShow class. public RatingsShow(ITraktShow show, TraktPostRating rating) Parameters show ITraktShow A ITraktShow. rating TraktPostRating The rating for the show."
  },
  "api/TraktNet.PostBuilder.RatingsShowAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShowAndSeasons.html",
    "title": "Class RatingsShowAndSeasons | Trakt.NET",
    "keywords": "Class RatingsShowAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a collection of seasons and episodes. See also PostRatingsSeasons. public sealed class RatingsShowAndSeasons : RatingsAndSeasons<ITraktShow> Inheritance object RatingsAndSeasons<ITraktShow> RatingsShowAndSeasons Inherited Members RatingsAndSeasons<ITraktShow>.Object RatingsAndSeasons<ITraktShow>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShowAndSeasons(ITraktShow, PostRatingsSeasons) Initializes a new instance of the RatingsShowAndSeasons class. public RatingsShowAndSeasons(ITraktShow show, PostRatingsSeasons seasons) Parameters show ITraktShow A rated ITraktShow. seasons PostRatingsSeasons A collection of seasons and episodes for the show. See also PostRatingsSeasons."
  },
  "api/TraktNet.PostBuilder.RatingsShowIds.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShowIds.html",
    "title": "Class RatingsShowIds | Trakt.NET",
    "keywords": "Class RatingsShowIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with rating. public class RatingsShowIds : RatingsEntry<ITraktShowIds> Inheritance object RatingsEntry<ITraktShowIds> RatingsShowIds Inherited Members RatingsEntry<ITraktShowIds>.Object RatingsEntry<ITraktShowIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShowIds(ITraktShowIds, TraktPostRating) Initializes a new instance of the RatingsShowIds class. public RatingsShowIds(ITraktShowIds showIds, TraktPostRating rating) Parameters showIds ITraktShowIds A ITraktShowIds. rating TraktPostRating The rating for the showIds."
  },
  "api/TraktNet.PostBuilder.RatingsShowIdsAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShowIdsAndSeasons.html",
    "title": "Class RatingsShowIdsAndSeasons | Trakt.NET",
    "keywords": "Class RatingsShowIdsAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a collection of seasons and episodes. See also PostRatingsSeasons. public sealed class RatingsShowIdsAndSeasons : RatingsAndSeasons<ITraktShowIds> Inheritance object RatingsAndSeasons<ITraktShowIds> RatingsShowIdsAndSeasons Inherited Members RatingsAndSeasons<ITraktShowIds>.Object RatingsAndSeasons<ITraktShowIds>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShowIdsAndSeasons(ITraktShowIds, PostRatingsSeasons) Initializes a new instance of the RatingsShowIdsAndSeasons class. public RatingsShowIdsAndSeasons(ITraktShowIds showIds, PostRatingsSeasons seasons) Parameters showIds ITraktShowIds A rated ITraktShowIds. seasons PostRatingsSeasons A collection of seasons and episodes for the showIds. See also PostRatingsSeasons."
  },
  "api/TraktNet.PostBuilder.RatingsShowIdsRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShowIdsRatedAt.html",
    "title": "Class RatingsShowIdsRatedAt | Trakt.NET",
    "keywords": "Class RatingsShowIdsRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a UTC datetime, when it was rated. public sealed class RatingsShowIdsRatedAt : RatingsEntryRatedAt<ITraktShowIds> Inheritance object RatingsEntry<ITraktShowIds> RatingsEntryRatedAt<ITraktShowIds> RatingsShowIdsRatedAt Inherited Members RatingsEntryRatedAt<ITraktShowIds>.RatedAt RatingsEntry<ITraktShowIds>.Object RatingsEntry<ITraktShowIds>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShowIdsRatedAt(ITraktShowIds, TraktPostRating, DateTime) Initializes a new instance of the RatingsShowIdsRatedAt class. public RatingsShowIdsRatedAt(ITraktShowIds showIds, TraktPostRating rating, DateTime ratedAt) Parameters showIds ITraktShowIds A rated ITraktShowIds. rating TraktPostRating The rating for the showIds. ratedAt DateTime The UTC datetime when the showIds was rated."
  },
  "api/TraktNet.PostBuilder.RatingsShowRatedAt.html": {
    "href": "api/TraktNet.PostBuilder.RatingsShowRatedAt.html",
    "title": "Class RatingsShowRatedAt | Trakt.NET",
    "keywords": "Class RatingsShowRatedAt Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a UTC datetime, when it was rated. public sealed class RatingsShowRatedAt : RatingsEntryRatedAt<ITraktShow> Inheritance object RatingsEntry<ITraktShow> RatingsEntryRatedAt<ITraktShow> RatingsShowRatedAt Inherited Members RatingsEntryRatedAt<ITraktShow>.RatedAt RatingsEntry<ITraktShow>.Object RatingsEntry<ITraktShow>.Rating object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RatingsShowRatedAt(ITraktShow, TraktPostRating, DateTime) Initializes a new instance of the RatingsShowRatedAt class. public RatingsShowRatedAt(ITraktShow show, TraktPostRating rating, DateTime ratedAt) Parameters show ITraktShow A rated ITraktShow. rating TraktPostRating The rating for the show. ratedAt DateTime The UTC datetime when the show was rated."
  },
  "api/TraktNet.PostBuilder.SeasonIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.SeasonIdsWithMetadata.html",
    "title": "Class SeasonIdsWithMetadata | Trakt.NET",
    "keywords": "Class SeasonIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with ITraktMetadata. public sealed class SeasonIdsWithMetadata : EntryWithMetadata<ITraktSeasonIds> Inheritance object CollectionEntry<ITraktSeasonIds> EntryWithMetadata<ITraktSeasonIds> SeasonIdsWithMetadata Inherited Members EntryWithMetadata<ITraktSeasonIds>.Metadata CollectionEntry<ITraktSeasonIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SeasonIdsWithMetadata(ITraktSeasonIds, ITraktMetadata) Initializes a new instance of the SeasonIdsWithMetadata class. public SeasonIdsWithMetadata(ITraktSeasonIds seasonIds, ITraktMetadata metadata) Parameters seasonIds ITraktSeasonIds A ITraktSeasonIds. metadata ITraktMetadata The ITraktMetadata for the seasonIds."
  },
  "api/TraktNet.PostBuilder.SeasonIdsWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.SeasonIdsWithNotes.html",
    "title": "Class SeasonIdsWithNotes | Trakt.NET",
    "keywords": "Class SeasonIdsWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with notes. public class SeasonIdsWithNotes : EntryWithNotes<ITraktSeasonIds> Inheritance object EntryWithNotes<ITraktSeasonIds> SeasonIdsWithNotes Inherited Members EntryWithNotes<ITraktSeasonIds>.Object EntryWithNotes<ITraktSeasonIds>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SeasonIdsWithNotes(ITraktSeasonIds, string) Initializes a new instance of the SeasonIdsWithNotes class. public SeasonIdsWithNotes(ITraktSeasonIds seasonIds, string notes) Parameters seasonIds ITraktSeasonIds A ITraktSeasonIds. notes string The notes for the seasonIds."
  },
  "api/TraktNet.PostBuilder.SeasonWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.SeasonWithMetadata.html",
    "title": "Class SeasonWithMetadata | Trakt.NET",
    "keywords": "Class SeasonWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with ITraktMetadata. public sealed class SeasonWithMetadata : EntryWithMetadata<ITraktSeason> Inheritance object CollectionEntry<ITraktSeason> EntryWithMetadata<ITraktSeason> SeasonWithMetadata Inherited Members EntryWithMetadata<ITraktSeason>.Metadata CollectionEntry<ITraktSeason>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SeasonWithMetadata(ITraktSeason, ITraktMetadata) Initializes a new instance of the SeasonWithMetadata class. public SeasonWithMetadata(ITraktSeason season, ITraktMetadata metadata) Parameters season ITraktSeason A ITraktSeason. metadata ITraktMetadata The ITraktMetadata for the season."
  },
  "api/TraktNet.PostBuilder.SeasonWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.SeasonWithNotes.html",
    "title": "Class SeasonWithNotes | Trakt.NET",
    "keywords": "Class SeasonWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with notes. public class SeasonWithNotes : EntryWithNotes<ITraktSeason> Inheritance object EntryWithNotes<ITraktSeason> SeasonWithNotes Inherited Members EntryWithNotes<ITraktSeason>.Object EntryWithNotes<ITraktSeason>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SeasonWithNotes(ITraktSeason, string) Initializes a new instance of the SeasonWithNotes class. public SeasonWithNotes(ITraktSeason season, string notes) Parameters season ITraktSeason A ITraktSeason. notes string The notes for the season."
  },
  "api/TraktNet.PostBuilder.ShowAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.ShowAndSeasons.html",
    "title": "Class ShowAndSeasons | Trakt.NET",
    "keywords": "Class ShowAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a collection of seasons and episodes. See also PostSeasons. public sealed class ShowAndSeasons : WithSeasons<ITraktShow> Inheritance object WithSeasons<ITraktShow> ShowAndSeasons Inherited Members WithSeasons<ITraktShow>.Object WithSeasons<ITraktShow>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowAndSeasons(ITraktShow, IEnumerable<int>) Initializes a new instance of the ShowAndSeasons class. public ShowAndSeasons(ITraktShow show, IEnumerable<int> seasons) Parameters show ITraktShow A ITraktShow. seasons IEnumerable<int> A collection of season numbers for the show. ShowAndSeasons(ITraktShow, int, params int[]) Initializes a new instance of the ShowAndSeasons class. public ShowAndSeasons(ITraktShow show, int season, params int[] seasons) Parameters show ITraktShow A ITraktShow. season int An season number for the show. seasons int[] An optional array of season numbers for the show. ShowAndSeasons(ITraktShow, PostSeasons) Initializes a new instance of the ShowAndSeasons class. public ShowAndSeasons(ITraktShow show, PostSeasons seasons) Parameters show ITraktShow A ITraktShow. seasons PostSeasons A collection of seasons and episodes for the show. See also PostSeasons."
  },
  "api/TraktNet.PostBuilder.ShowIdsAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.ShowIdsAndSeasons.html",
    "title": "Class ShowIdsAndSeasons | Trakt.NET",
    "keywords": "Class ShowIdsAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a collection of seasons and episodes. See also PostSeasons. public sealed class ShowIdsAndSeasons : WithSeasons<ITraktShowIds> Inheritance object WithSeasons<ITraktShowIds> ShowIdsAndSeasons Inherited Members WithSeasons<ITraktShowIds>.Object WithSeasons<ITraktShowIds>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowIdsAndSeasons(ITraktShowIds, IEnumerable<int>) Initializes a new instance of the ShowIdsAndSeasons class. public ShowIdsAndSeasons(ITraktShowIds showIds, IEnumerable<int> seasons) Parameters showIds ITraktShowIds A ITraktShow. seasons IEnumerable<int> A collection of season numbers for the showIds. ShowIdsAndSeasons(ITraktShowIds, int, params int[]) Initializes a new instance of the ShowIdsAndSeasons class. public ShowIdsAndSeasons(ITraktShowIds showIds, int season, params int[] seasons) Parameters showIds ITraktShowIds A ITraktShow. season int An season number for the showIds. seasons int[] An optional array of season numbers for the showIds. ShowIdsAndSeasons(ITraktShowIds, PostSeasons) Initializes a new instance of the ShowIdsAndSeasons class. public ShowIdsAndSeasons(ITraktShowIds showIds, PostSeasons seasons) Parameters showIds ITraktShowIds A ITraktShowIds. seasons PostSeasons A collection of seasons and episodes for the showIds. See also PostSeasons."
  },
  "api/TraktNet.PostBuilder.ShowIdsWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.ShowIdsWithMetadata.html",
    "title": "Class ShowIdsWithMetadata | Trakt.NET",
    "keywords": "Class ShowIdsWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with ITraktMetadata. public sealed class ShowIdsWithMetadata : EntryWithMetadata<ITraktShowIds> Inheritance object CollectionEntry<ITraktShowIds> EntryWithMetadata<ITraktShowIds> ShowIdsWithMetadata Inherited Members EntryWithMetadata<ITraktShowIds>.Metadata CollectionEntry<ITraktShowIds>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowIdsWithMetadata(ITraktShowIds, ITraktMetadata) Initializes a new instance of the ShowIdsWithMetadata class. public ShowIdsWithMetadata(ITraktShowIds showIds, ITraktMetadata metadata) Parameters showIds ITraktShowIds A ITraktShowIds. metadata ITraktMetadata The ITraktMetadata for the showIds."
  },
  "api/TraktNet.PostBuilder.ShowIdsWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.ShowIdsWithNotes.html",
    "title": "Class ShowIdsWithNotes | Trakt.NET",
    "keywords": "Class ShowIdsWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with notes. public class ShowIdsWithNotes : EntryWithNotes<ITraktShowIds> Inheritance object EntryWithNotes<ITraktShowIds> ShowIdsWithNotes Inherited Members EntryWithNotes<ITraktShowIds>.Object EntryWithNotes<ITraktShowIds>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShowIdsWithNotes(ITraktShowIds, string) Initializes a new instance of the ShowIdsWithNotes class. public ShowIdsWithNotes(ITraktShowIds showIds, string notes) Parameters showIds ITraktShowIds A ITraktShowIds. notes string The notes for the showIds."
  },
  "api/TraktNet.PostBuilder.ShowIdsWithNotesAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.ShowIdsWithNotesAndSeasons.html",
    "title": "Class ShowIdsWithNotesAndSeasons | Trakt.NET",
    "keywords": "Class ShowIdsWithNotesAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ShowIdsWithNotes with a collection of seasons and episodes. See also PostSeasons. public sealed class ShowIdsWithNotesAndSeasons : EntryWithNotesAndSeasons<ShowIdsWithNotes> Inheritance object EntryWithNotesAndSeasons<ShowIdsWithNotes> ShowIdsWithNotesAndSeasons Inherited Members EntryWithNotesAndSeasons<ShowIdsWithNotes>.Object EntryWithNotesAndSeasons<ShowIdsWithNotes>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowIdsWithNotesAndSeasons(ShowIdsWithNotes, PostSeasons) Initializes a new instance of the ShowIdsWithNotesAndSeasons class. public ShowIdsWithNotesAndSeasons(ShowIdsWithNotes showIdsWithNotes, PostSeasons seasons) Parameters showIdsWithNotes ShowIdsWithNotes A ShowIdsWithNotes. seasons PostSeasons A collection of seasons and episodes for the showIdsWithNotes. See also PostSeasons."
  },
  "api/TraktNet.PostBuilder.ShowWithMetadata.html": {
    "href": "api/TraktNet.PostBuilder.ShowWithMetadata.html",
    "title": "Class ShowWithMetadata | Trakt.NET",
    "keywords": "Class ShowWithMetadata Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with ITraktMetadata. public sealed class ShowWithMetadata : EntryWithMetadata<ITraktShow> Inheritance object CollectionEntry<ITraktShow> EntryWithMetadata<ITraktShow> ShowWithMetadata Inherited Members EntryWithMetadata<ITraktShow>.Metadata CollectionEntry<ITraktShow>.Object object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowWithMetadata(ITraktShow, ITraktMetadata) Initializes a new instance of the ShowWithMetadata class. public ShowWithMetadata(ITraktShow show, ITraktMetadata metadata) Parameters show ITraktShow A ITraktShow. metadata ITraktMetadata The ITraktMetadata for the show."
  },
  "api/TraktNet.PostBuilder.ShowWithNotes.html": {
    "href": "api/TraktNet.PostBuilder.ShowWithNotes.html",
    "title": "Class ShowWithNotes | Trakt.NET",
    "keywords": "Class ShowWithNotes Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with notes. public class ShowWithNotes : EntryWithNotes<ITraktShow> Inheritance object EntryWithNotes<ITraktShow> ShowWithNotes Inherited Members EntryWithNotes<ITraktShow>.Object EntryWithNotes<ITraktShow>.Notes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShowWithNotes(ITraktShow, string) Initializes a new instance of the ShowWithNotes class. public ShowWithNotes(ITraktShow show, string notes) Parameters show ITraktShow A ITraktShow. notes string The notes for the show."
  },
  "api/TraktNet.PostBuilder.ShowWithNotesAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.ShowWithNotesAndSeasons.html",
    "title": "Class ShowWithNotesAndSeasons | Trakt.NET",
    "keywords": "Class ShowWithNotesAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ShowWithNotes with a collection of seasons and episodes. See also PostSeasons. public sealed class ShowWithNotesAndSeasons : EntryWithNotesAndSeasons<ShowWithNotes> Inheritance object EntryWithNotesAndSeasons<ShowWithNotes> ShowWithNotesAndSeasons Inherited Members EntryWithNotesAndSeasons<ShowWithNotes>.Object EntryWithNotesAndSeasons<ShowWithNotes>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ShowWithNotesAndSeasons(ShowWithNotes, PostSeasons) Initializes a new instance of the ShowWithNotesAndSeasons class. public ShowWithNotesAndSeasons(ShowWithNotes showWithNotes, PostSeasons seasons) Parameters showWithNotes ShowWithNotes A ShowWithNotes. seasons PostSeasons A collection of seasons and episodes for the showWithNotes. See also PostSeasons."
  },
  "api/TraktNet.PostBuilder.TraktPost.html": {
    "href": "api/TraktNet.PostBuilder.TraktPost.html",
    "title": "Class TraktPost | Trakt.NET",
    "keywords": "Class TraktPost Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public static class TraktPost Inheritance object TraktPost Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NewEpisodeCheckinPost() Creates a new ITraktEpisodeCheckinPostBuilder. public static ITraktEpisodeCheckinPostBuilder NewEpisodeCheckinPost() Returns ITraktEpisodeCheckinPostBuilder An ITraktEpisodeCheckinPostBuilder instance. NewEpisodeCommentPost() Creates a new ITraktEpisodeCommentPostBuilder. public static ITraktEpisodeCommentPostBuilder NewEpisodeCommentPost() Returns ITraktEpisodeCommentPostBuilder An ITraktEpisodeCommentPostBuilder instance. NewEpisodeScrobblePost() Creates a new ITraktEpisodeScrobblePostBuilder. public static ITraktEpisodeScrobblePostBuilder NewEpisodeScrobblePost() Returns ITraktEpisodeScrobblePostBuilder An ITraktEpisodeScrobblePostBuilder instance. NewListCommentPost() Creates a new ITraktListCommentPostBuilder. public static ITraktListCommentPostBuilder NewListCommentPost() Returns ITraktListCommentPostBuilder An ITraktListCommentPostBuilder instance. NewMovieCheckinPost() Creates a new ITraktMovieCheckinPostBuilder. public static ITraktMovieCheckinPostBuilder NewMovieCheckinPost() Returns ITraktMovieCheckinPostBuilder An ITraktMovieCheckinPostBuilder instance. NewMovieCommentPost() Creates a new ITraktMovieCommentPostBuilder. public static ITraktMovieCommentPostBuilder NewMovieCommentPost() Returns ITraktMovieCommentPostBuilder An ITraktMovieCommentPostBuilder instance. NewMovieScrobblePost() Creates a new ITraktMovieScrobblePostBuilder. public static ITraktMovieScrobblePostBuilder NewMovieScrobblePost() Returns ITraktMovieScrobblePostBuilder An ITraktMovieScrobblePostBuilder instance. NewSeasonCommentPost() Creates a new ITraktSeasonCommentPostBuilder. public static ITraktSeasonCommentPostBuilder NewSeasonCommentPost() Returns ITraktSeasonCommentPostBuilder An ITraktSeasonCommentPostBuilder instance. NewShowCommentPost() Creates a new ITraktShowCommentPostBuilder. public static ITraktShowCommentPostBuilder NewShowCommentPost() Returns ITraktShowCommentPostBuilder An ITraktShowCommentPostBuilder instance. NewSyncCollectionPost() Creates a new ITraktSyncCollectionPostBuilder. public static ITraktSyncCollectionPostBuilder NewSyncCollectionPost() Returns ITraktSyncCollectionPostBuilder An ITraktSyncCollectionPostBuilder instance. NewSyncCollectionRemovePost() Creates a new ITraktSyncCollectionRemovePostBuilder. public static ITraktSyncCollectionRemovePostBuilder NewSyncCollectionRemovePost() Returns ITraktSyncCollectionRemovePostBuilder An ITraktSyncCollectionRemovePostBuilder instance. NewSyncFavoritesPost() Creates a new ITraktSyncFavoritesPostBuilder. public static ITraktSyncFavoritesPostBuilder NewSyncFavoritesPost() Returns ITraktSyncFavoritesPostBuilder An ITraktSyncFavoritesPostBuilder instance. NewSyncFavoritesRemovePost() Creates a new ITraktSyncFavoritesRemovePostBuilder. public static ITraktSyncFavoritesRemovePostBuilder NewSyncFavoritesRemovePost() Returns ITraktSyncFavoritesRemovePostBuilder An ITraktSyncFavoritesRemovePostBuilder instance. NewSyncHistoryPost() Creates a new ITraktSyncHistoryPostBuilder. public static ITraktSyncHistoryPostBuilder NewSyncHistoryPost() Returns ITraktSyncHistoryPostBuilder An ITraktSyncHistoryPostBuilder instance. NewSyncHistoryRemovePost() Creates a new ITraktSyncHistoryRemovePostBuilder. public static ITraktSyncHistoryRemovePostBuilder NewSyncHistoryRemovePost() Returns ITraktSyncHistoryRemovePostBuilder An ITraktSyncHistoryRemovePostBuilder instance. NewSyncRatingsPost() Creates a new ITraktSyncRatingsPostBuilder. public static ITraktSyncRatingsPostBuilder NewSyncRatingsPost() Returns ITraktSyncRatingsPostBuilder An ITraktSyncRatingsPostBuilder instance. NewSyncRatingsRemovePost() Creates a new ITraktSyncRatingsRemovePostBuilder. public static ITraktSyncRatingsRemovePostBuilder NewSyncRatingsRemovePost() Returns ITraktSyncRatingsRemovePostBuilder An ITraktSyncRatingsRemovePostBuilder instance. NewSyncWatchlistPost() Creates a new ITraktSyncWatchlistPostBuilder. public static ITraktSyncWatchlistPostBuilder NewSyncWatchlistPost() Returns ITraktSyncWatchlistPostBuilder An ITraktSyncWatchlistPostBuilder instance. NewSyncWatchlistRemovePost() Creates a new ITraktSyncWatchlistRemovePostBuilder. public static ITraktSyncWatchlistRemovePostBuilder NewSyncWatchlistRemovePost() Returns ITraktSyncWatchlistRemovePostBuilder An ITraktSyncWatchlistRemovePostBuilder instance. NewUserHiddenItemsPost() Creates a new ITraktUserHiddenItemsPostBuilder. public static ITraktUserHiddenItemsPostBuilder NewUserHiddenItemsPost() Returns ITraktUserHiddenItemsPostBuilder An ITraktUserHiddenItemsPostBuilder instance. NewUserHiddenItemsRemovePost() Creates a new ITraktUserHiddenItemsRemovePostBuilder. public static ITraktUserHiddenItemsRemovePostBuilder NewUserHiddenItemsRemovePost() Returns ITraktUserHiddenItemsRemovePostBuilder An ITraktUserHiddenItemsRemovePostBuilder instance. NewUserPersonalListItemsPost() Creates a new ITraktUserPersonalListItemsPostBuilder. public static ITraktUserPersonalListItemsPostBuilder NewUserPersonalListItemsPost() Returns ITraktUserPersonalListItemsPostBuilder An ITraktUserPersonalListItemsPostBuilder instance. NewUserPersonalListItemsRemovePost() Creates a new ITraktUserPersonalListItemsRemovePostBuilder. public static ITraktUserPersonalListItemsRemovePostBuilder NewUserPersonalListItemsRemovePost() Returns ITraktUserPersonalListItemsRemovePostBuilder An ITraktUserPersonalListItemsRemovePostBuilder instance."
  },
  "api/TraktNet.PostBuilder.TraktPostRating.html": {
    "href": "api/TraktNet.PostBuilder.TraktPostRating.html",
    "title": "Enum TraktPostRating | Trakt.NET",
    "keywords": "Enum TraktPostRating Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a rating from 1 to 10. public enum TraktPostRating Fields Rating_1 = 1 Rating_10 = 10 Rating_2 = 2 Rating_3 = 3 Rating_4 = 4 Rating_5 = 5 Rating_6 = 6 Rating_7 = 7 Rating_8 = 8 Rating_9 = 9"
  },
  "api/TraktNet.PostBuilder.WatchedEntry-1.html": {
    "href": "api/TraktNet.PostBuilder.WatchedEntry-1.html",
    "title": "Class WatchedEntry<T> | Trakt.NET",
    "keywords": "Class WatchedEntry<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class WatchedEntry<T> Type Parameters T Inheritance object WatchedEntry<T> Derived WatchedEpisode WatchedEpisodeIds WatchedMovie WatchedMovieIds WatchedSeason WatchedSeasonIds WatchedShow WatchedShowIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedEntry(T, DateTime) protected WatchedEntry(T obj, DateTime watchedAt) Parameters obj T watchedAt DateTime Properties Object public T Object { get; } Property Value T WatchedAt public DateTime WatchedAt { get; } Property Value DateTime"
  },
  "api/TraktNet.PostBuilder.WatchedEpisode.html": {
    "href": "api/TraktNet.PostBuilder.WatchedEpisode.html",
    "title": "Class WatchedEpisode | Trakt.NET",
    "keywords": "Class WatchedEpisode Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisode with a UTC datetime, when it was watched. public sealed class WatchedEpisode : WatchedEntry<ITraktEpisode> Inheritance object WatchedEntry<ITraktEpisode> WatchedEpisode Inherited Members WatchedEntry<ITraktEpisode>.Object WatchedEntry<ITraktEpisode>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedEpisode(ITraktEpisode, DateTime) Initializes a new instance of the WatchedEpisode class. public WatchedEpisode(ITraktEpisode episode, DateTime watchedAt) Parameters episode ITraktEpisode A watched ITraktEpisode. watchedAt DateTime The UTC datetime when the episode was watched."
  },
  "api/TraktNet.PostBuilder.WatchedEpisodeIds.html": {
    "href": "api/TraktNet.PostBuilder.WatchedEpisodeIds.html",
    "title": "Class WatchedEpisodeIds | Trakt.NET",
    "keywords": "Class WatchedEpisodeIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktEpisodeIds with a UTC datetime, when it was watched. public sealed class WatchedEpisodeIds : WatchedEntry<ITraktEpisodeIds> Inheritance object WatchedEntry<ITraktEpisodeIds> WatchedEpisodeIds Inherited Members WatchedEntry<ITraktEpisodeIds>.Object WatchedEntry<ITraktEpisodeIds>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedEpisodeIds(ITraktEpisodeIds, DateTime) Initializes a new instance of the WatchedEpisodeIds class. public WatchedEpisodeIds(ITraktEpisodeIds episodeIds, DateTime watchedAt) Parameters episodeIds ITraktEpisodeIds A watched ITraktEpisodeIds. watchedAt DateTime The UTC datetime when the episodeIds was watched."
  },
  "api/TraktNet.PostBuilder.WatchedMovie.html": {
    "href": "api/TraktNet.PostBuilder.WatchedMovie.html",
    "title": "Class WatchedMovie | Trakt.NET",
    "keywords": "Class WatchedMovie Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovie with a UTC datetime, when it was watched. public sealed class WatchedMovie : WatchedEntry<ITraktMovie> Inheritance object WatchedEntry<ITraktMovie> WatchedMovie Inherited Members WatchedEntry<ITraktMovie>.Object WatchedEntry<ITraktMovie>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedMovie(ITraktMovie, DateTime) Initializes a new instance of the WatchedMovie class. public WatchedMovie(ITraktMovie movie, DateTime watchedAt) Parameters movie ITraktMovie A watched ITraktMovie. watchedAt DateTime The UTC datetime when the movie was watched."
  },
  "api/TraktNet.PostBuilder.WatchedMovieIds.html": {
    "href": "api/TraktNet.PostBuilder.WatchedMovieIds.html",
    "title": "Class WatchedMovieIds | Trakt.NET",
    "keywords": "Class WatchedMovieIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktMovieIds with a UTC datetime, when it was watched. public sealed class WatchedMovieIds : WatchedEntry<ITraktMovieIds> Inheritance object WatchedEntry<ITraktMovieIds> WatchedMovieIds Inherited Members WatchedEntry<ITraktMovieIds>.Object WatchedEntry<ITraktMovieIds>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedMovieIds(ITraktMovieIds, DateTime) Initializes a new instance of the WatchedMovieIds class. public WatchedMovieIds(ITraktMovieIds movieIds, DateTime watchedAt) Parameters movieIds ITraktMovieIds A watched ITraktMovieIds. watchedAt DateTime The UTC datetime when the movieIds was watched."
  },
  "api/TraktNet.PostBuilder.WatchedSeason.html": {
    "href": "api/TraktNet.PostBuilder.WatchedSeason.html",
    "title": "Class WatchedSeason | Trakt.NET",
    "keywords": "Class WatchedSeason Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeason with a UTC datetime, when it was watched. public sealed class WatchedSeason : WatchedEntry<ITraktSeason> Inheritance object WatchedEntry<ITraktSeason> WatchedSeason Inherited Members WatchedEntry<ITraktSeason>.Object WatchedEntry<ITraktSeason>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedSeason(ITraktSeason, DateTime) Initializes a new instance of the WatchedSeason class. public WatchedSeason(ITraktSeason season, DateTime watchedAt) Parameters season ITraktSeason A watched ITraktSeason. watchedAt DateTime The UTC datetime when the season was watched."
  },
  "api/TraktNet.PostBuilder.WatchedSeasonIds.html": {
    "href": "api/TraktNet.PostBuilder.WatchedSeasonIds.html",
    "title": "Class WatchedSeasonIds | Trakt.NET",
    "keywords": "Class WatchedSeasonIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktSeasonIds with a UTC datetime, when it was watched. public sealed class WatchedSeasonIds : WatchedEntry<ITraktSeasonIds> Inheritance object WatchedEntry<ITraktSeasonIds> WatchedSeasonIds Inherited Members WatchedEntry<ITraktSeasonIds>.Object WatchedEntry<ITraktSeasonIds>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedSeasonIds(ITraktSeasonIds, DateTime) Initializes a new instance of the WatchedSeasonIds class. public WatchedSeasonIds(ITraktSeasonIds seasonIds, DateTime watchedAt) Parameters seasonIds ITraktSeasonIds A watched ITraktSeasonIds. watchedAt DateTime The UTC datetime when the seasonIds was watched."
  },
  "api/TraktNet.PostBuilder.WatchedShow.html": {
    "href": "api/TraktNet.PostBuilder.WatchedShow.html",
    "title": "Class WatchedShow | Trakt.NET",
    "keywords": "Class WatchedShow Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a UTC datetime, when it was watched. public sealed class WatchedShow : WatchedEntry<ITraktShow> Inheritance object WatchedEntry<ITraktShow> WatchedShow Inherited Members WatchedEntry<ITraktShow>.Object WatchedEntry<ITraktShow>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedShow(ITraktShow, DateTime) Initializes a new instance of the WatchedShow class. public WatchedShow(ITraktShow show, DateTime watchedAt) Parameters show ITraktShow A watched ITraktShow. watchedAt DateTime The UTC datetime when the show was watched."
  },
  "api/TraktNet.PostBuilder.WatchedShowAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.WatchedShowAndSeasons.html",
    "title": "Class WatchedShowAndSeasons | Trakt.NET",
    "keywords": "Class WatchedShowAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShow with a collection of seasons and episodes. See also PostHistorySeasons. public sealed class WatchedShowAndSeasons : HistoryAndSeasons<ITraktShow> Inheritance object HistoryAndSeasons<ITraktShow> WatchedShowAndSeasons Inherited Members HistoryAndSeasons<ITraktShow>.Object HistoryAndSeasons<ITraktShow>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedShowAndSeasons(ITraktShow, PostHistorySeasons) Initializes a new instance of the WatchedShowAndSeasons class. public WatchedShowAndSeasons(ITraktShow show, PostHistorySeasons seasons) Parameters show ITraktShow A watched ITraktShow. seasons PostHistorySeasons A collection of seasons and episodes for the show. See also PostHistorySeasons."
  },
  "api/TraktNet.PostBuilder.WatchedShowIds.html": {
    "href": "api/TraktNet.PostBuilder.WatchedShowIds.html",
    "title": "Class WatchedShowIds | Trakt.NET",
    "keywords": "Class WatchedShowIds Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a UTC datetime, when it was watched. public sealed class WatchedShowIds : WatchedEntry<ITraktShowIds> Inheritance object WatchedEntry<ITraktShowIds> WatchedShowIds Inherited Members WatchedEntry<ITraktShowIds>.Object WatchedEntry<ITraktShowIds>.WatchedAt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedShowIds(ITraktShowIds, DateTime) Initializes a new instance of the WatchedShowIds class. public WatchedShowIds(ITraktShowIds showIds, DateTime watchedAt) Parameters showIds ITraktShowIds A watched ITraktShowIds. watchedAt DateTime The UTC datetime when the showIds was watched."
  },
  "api/TraktNet.PostBuilder.WatchedShowIdsAndSeasons.html": {
    "href": "api/TraktNet.PostBuilder.WatchedShowIdsAndSeasons.html",
    "title": "Class WatchedShowIdsAndSeasons | Trakt.NET",
    "keywords": "Class WatchedShowIdsAndSeasons Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll Represents a ITraktShowIds with a collection of seasons and episodes. See also PostHistorySeasons. public sealed class WatchedShowIdsAndSeasons : HistoryAndSeasons<ITraktShowIds> Inheritance object HistoryAndSeasons<ITraktShowIds> WatchedShowIdsAndSeasons Inherited Members HistoryAndSeasons<ITraktShowIds>.Object HistoryAndSeasons<ITraktShowIds>.Seasons object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WatchedShowIdsAndSeasons(ITraktShowIds, PostHistorySeasons) Initializes a new instance of the WatchedShowIdsAndSeasons class. public WatchedShowIdsAndSeasons(ITraktShowIds showIds, PostHistorySeasons seasons) Parameters showIds ITraktShowIds A watched ITraktShowIds. seasons PostHistorySeasons A collection of seasons and episodes for the showIds. See also PostHistorySeasons."
  },
  "api/TraktNet.PostBuilder.WithSeasons-1.html": {
    "href": "api/TraktNet.PostBuilder.WithSeasons-1.html",
    "title": "Class WithSeasons<T> | Trakt.NET",
    "keywords": "Class WithSeasons<T> Namespace TraktNet.PostBuilder Assembly Trakt.NET.dll public abstract class WithSeasons<T> Type Parameters T Inheritance object WithSeasons<T> Derived ShowAndSeasons ShowIdsAndSeasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WithSeasons(T, IEnumerable<int>) protected WithSeasons(T obj, IEnumerable<int> seasons) Parameters obj T seasons IEnumerable<int> WithSeasons(T, int, params int[]) protected WithSeasons(T obj, int season, params int[] seasons) Parameters obj T season int seasons int[] WithSeasons(T, PostSeasons) protected WithSeasons(T obj, PostSeasons seasons) Parameters obj T seasons PostSeasons Properties Object public T Object { get; } Property Value T Seasons public PostSeasons Seasons { get; } Property Value PostSeasons"
  },
  "api/TraktNet.PostBuilder.html": {
    "href": "api/TraktNet.PostBuilder.html",
    "title": "Namespace TraktNet.PostBuilder | Trakt.NET",
    "keywords": "Namespace TraktNet.PostBuilder Classes CollectedEntryWithMetadata<T> CollectedEntry<T> CollectedEpisode Represents a ITraktEpisode with a UTC datetime, when it was collected. CollectedEpisodeIds Represents a ITraktEpisodeIds with a UTC datetime, when it was collected. CollectedEpisodeIdsWithMetadata Represents a ITraktEpisodeIds with ITraktMetadata and a UTC datetime, when it was collected. CollectedEpisodeWithMetadata Represents a ITraktEpisode with ITraktMetadata and a UTC datetime, when it was collected. CollectedMovie Represents a ITraktMovie with a UTC datetime, when it was collected. CollectedMovieIds Represents a ITraktMovieIds with a UTC datetime, when it was collected. CollectedMovieIdsWithMetadata Represents a ITraktMovieIds with ITraktMetadata and a UTC datetime, when it was collected. CollectedMovieWithMetadata Represents a ITraktMovie with ITraktMetadata and a UTC datetime, when it was collected. CollectedSeason Represents a ITraktSeason with a UTC datetime, when it was collected. CollectedSeasonIds Represents a ITraktSeasonIds with a UTC datetime, when it was collected. CollectedSeasonIdsWithMetadata Represents a ITraktSeasonIds with ITraktMetadata and a UTC datetime, when it was collected. CollectedSeasonWithMetadata Represents a ITraktSeason with ITraktMetadata and a UTC datetime, when it was collected. CollectedShow Represents a ITraktShow with a UTC datetime, when it was collected. CollectedShowIds Represents a ITraktShowIds with a UTC datetime, when it was collected. CollectedShowIdsWithMetadata Represents a ITraktShowIds with ITraktMetadata and a UTC datetime, when it was collected. CollectedShowWithMetadata Represents a ITraktShow with ITraktMetadata and a UTC datetime, when it was collected. CollectionAndSeasons<T> CollectionEntry<T> CollectionShowAndSeasons Represents a ITraktShow with a collection of seasons and episodes. See also PostCollectionSeasons. CollectionShowIdsAndSeasons Represents a ITraktShowIds with a collection of seasons and episodes. See also PostCollectionSeasons. EntryWithMetadata<T> EntryWithNotesAndSeasons<T> EntryWithNotes<T> EpisodeIdsWithMetadata Represents a ITraktEpisodeIds with ITraktMetadata. EpisodeIdsWithNotes Represents a ITraktEpisodeIds with notes. EpisodeWithMetadata Represents a ITraktEpisode with ITraktMetadata. EpisodeWithNotes Represents a ITraktEpisode with notes. HiddenItemsEntryWithSeasons<T> HiddenShowIdsWithSeasons Represents a ITraktShowIds with a seasons collection. HiddenShowWithSeasons Represents a ITraktShow with a seasons collection. HistoryAndSeasons<T> MovieIdsWithMetadata Represents a ITraktMovieIds with ITraktMetadata. MovieIdsWithNotes Represents a ITraktMovieIds with notes. MovieWithMetadata Represents a ITraktMovie with ITraktMetadata. MovieWithNotes Represents a ITraktMovie with notes. PersonIdsWithNotes Represents a ITraktPersonIds with notes. PersonWithNotes Represents a ITraktPerson with notes. PostCollectionEpisode Contains an episode number, optional metadata and an optional datetime, when it was collected PostCollectionEpisodes A list of episode numbers. Each episode number can have optional metadata and an optional datetime, when it was collected. PostCollectionSeason Contains a season number, optional metadata and an optional datetime, when it was collected. Can also contain an optional list of episodes numbers. PostCollectionSeasons A collection of season and episode numbers. Can also contain metadata and collected datetimes for each season and episode number. PostEpisode Contains an episode number. PostEpisodes A list of episode numbers. PostHistoryEpisode Contains an episode number and an optional datetime, when it was watched. PostHistoryEpisodes A list of episode numbers. Each episode number can have an optional datetime, when it was watched. PostHistorySeason Contains a season number and an optional datetime, when it was watched. Can also contain an optional list of episodes numbers. PostHistorySeasons A collection of season and episode numbers. Can also contain watched datetimes for each season and episode number. PostRatingsEpisode Contains an episode number and rating and an optional datetime, when it was rated. PostRatingsEpisodes A list of episode numbers. Each episode number has a rating and an optional datetime, when it was rated. PostRatingsSeason Contains a season number and rating and an optional datetime, when it was rated. Can also contain an optional list of episodes numbers. PostRatingsSeasons A collection of season and episode numbers. Contains ratings and datetimes of the ratings for each season and episode number. PostSeason Contains a season number and an optional list of episodes numbers. PostSeasons A collection of season and episode numbers. RatingsAndSeasons<T> RatingsEntryRatedAt<T> RatingsEntry<T> RatingsEpisode Represents a ITraktEpisode with rating. RatingsEpisodeIds Represents a ITraktEpisodeIds with rating. RatingsEpisodeIdsRatedAt Represents a ITraktEpisodeIds with a UTC datetime, when it was rated. RatingsEpisodeRatedAt Represents a ITraktEpisode with a UTC datetime, when it was rated. RatingsMovie Represents a ITraktMovie with rating. RatingsMovieIds Represents a ITraktMovieIds with rating. RatingsMovieIdsRatedAt Represents a ITraktMovieIds with a UTC datetime, when it was rated. RatingsMovieRatedAt Represents a ITraktMovie with a UTC datetime, when it was rated. RatingsSeason Represents a ITraktSeason with rating. RatingsSeasonIds Represents a ITraktSeasonIds with rating. RatingsSeasonIdsRatedAt Represents a ITraktSeasonIds with a UTC datetime, when it was rated. RatingsSeasonRatedAt Represents a ITraktSeason with a UTC datetime, when it was rated. RatingsShow Represents a ITraktShow with rating. RatingsShowAndSeasons Represents a ITraktShow with a collection of seasons and episodes. See also PostRatingsSeasons. RatingsShowIds Represents a ITraktShowIds with rating. RatingsShowIdsAndSeasons Represents a ITraktShowIds with a collection of seasons and episodes. See also PostRatingsSeasons. RatingsShowIdsRatedAt Represents a ITraktShowIds with a UTC datetime, when it was rated. RatingsShowRatedAt Represents a ITraktShow with a UTC datetime, when it was rated. SeasonIdsWithMetadata Represents a ITraktSeasonIds with ITraktMetadata. SeasonIdsWithNotes Represents a ITraktSeasonIds with notes. SeasonWithMetadata Represents a ITraktSeason with ITraktMetadata. SeasonWithNotes Represents a ITraktSeason with notes. ShowAndSeasons Represents a ITraktShow with a collection of seasons and episodes. See also PostSeasons. ShowIdsAndSeasons Represents a ITraktShowIds with a collection of seasons and episodes. See also PostSeasons. ShowIdsWithMetadata Represents a ITraktShowIds with ITraktMetadata. ShowIdsWithNotes Represents a ITraktShowIds with notes. ShowIdsWithNotesAndSeasons Represents a ShowIdsWithNotes with a collection of seasons and episodes. See also PostSeasons. ShowWithMetadata Represents a ITraktShow with ITraktMetadata. ShowWithNotes Represents a ITraktShow with notes. ShowWithNotesAndSeasons Represents a ShowWithNotes with a collection of seasons and episodes. See also PostSeasons. TraktPost WatchedEntry<T> WatchedEpisode Represents a ITraktEpisode with a UTC datetime, when it was watched. WatchedEpisodeIds Represents a ITraktEpisodeIds with a UTC datetime, when it was watched. WatchedMovie Represents a ITraktMovie with a UTC datetime, when it was watched. WatchedMovieIds Represents a ITraktMovieIds with a UTC datetime, when it was watched. WatchedSeason Represents a ITraktSeason with a UTC datetime, when it was watched. WatchedSeasonIds Represents a ITraktSeasonIds with a UTC datetime, when it was watched. WatchedShow Represents a ITraktShow with a UTC datetime, when it was watched. WatchedShowAndSeasons Represents a ITraktShow with a collection of seasons and episodes. See also PostHistorySeasons. WatchedShowIds Represents a ITraktShowIds with a UTC datetime, when it was watched. WatchedShowIdsAndSeasons Represents a ITraktShowIds with a collection of seasons and episodes. See also PostHistorySeasons. WithSeasons<T> Interfaces ITraktCheckinPostBuilder<TPostBuilder, TPostObject> ITraktCommentPostBuilder<TPostBuilder, TPostObject> ITraktEpisodeCheckinPostBuilder ITraktEpisodeCommentPostBuilder ITraktEpisodeScrobblePostBuilder ITraktHiddenItemsPostBuilder<TPostBuilder, TPostObject> ITraktListCommentPostBuilder ITraktMovieCheckinPostBuilder ITraktMovieCommentPostBuilder ITraktMovieScrobblePostBuilder ITraktRemovePostBuilder<TPostBuilder, TPostObject> ITraktScrobblePostBuilder<TPostBuilder, TPostObject> ITraktSeasonCommentPostBuilder ITraktShowCommentPostBuilder ITraktSyncCollectionPostBuilder Post builder for ITraktSyncCollectionPosts. Provides methods for adding movies, shows, seasons and episodes. ITraktSyncCollectionRemovePostBuilder ITraktSyncFavoritesPostBuilder ITraktSyncFavoritesRemovePostBuilder ITraktSyncHistoryPostBuilder ITraktSyncHistoryRemovePostBuilder ITraktSyncRatingsPostBuilder ITraktSyncRatingsRemovePostBuilder ITraktSyncWatchlistPostBuilder ITraktSyncWatchlistRemovePostBuilder ITraktUserHiddenItemsPostBuilder ITraktUserHiddenItemsRemovePostBuilder ITraktUserPersonalListItemsPostBuilder ITraktUserPersonalListItemsRemovePostBuilder Enums TraktPostRating Represents a rating from 1 to 10."
  },
  "api/TraktNet.Responses.Interfaces.ITraktListResponse-1.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktListResponse-1.html",
    "title": "Interface ITraktListResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Interface ITraktListResponse<TResponseContentType> Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll A Trakt list response with items of content type TResponseContentType. public interface ITraktListResponse<TResponseContentType> : ITraktResponse<IList<TResponseContentType>>, ITraktNoContentResponse, ITraktResponseHeaders, IList<TResponseContentType>, ICollection<TResponseContentType>, IEnumerable<TResponseContentType>, IEnumerable Type Parameters TResponseContentType The content type of the list items. Inherited Members ITraktResponse<IList<TResponseContentType>>.HasValue ITraktResponse<IList<TResponseContentType>>.Value ITraktNoContentResponse.IsSuccess ITraktNoContentResponse.Exception ITraktResponseHeaders.SortBy ITraktResponseHeaders.SortHow ITraktResponseHeaders.AppliedSortBy ITraktResponseHeaders.AppliedSortHow ITraktResponseHeaders.StartDate ITraktResponseHeaders.EndDate ITraktResponseHeaders.TrendingUserCount ITraktResponseHeaders.Page ITraktResponseHeaders.Limit ITraktResponseHeaders.IsPrivateUser ITraktResponseHeaders.ItemId ITraktResponseHeaders.ItemType ITraktResponseHeaders.RateLimit ITraktResponseHeaders.RetryAfter ITraktResponseHeaders.UpgradeURL ITraktResponseHeaders.IsVIPUser ITraktResponseHeaders.AccountLimit IList<TResponseContentType>.IndexOf(TResponseContentType) IList<TResponseContentType>.Insert(int, TResponseContentType) IList<TResponseContentType>.RemoveAt(int) IList<TResponseContentType>.this[int] ICollection<TResponseContentType>.Add(TResponseContentType) ICollection<TResponseContentType>.Clear() ICollection<TResponseContentType>.Contains(TResponseContentType) ICollection<TResponseContentType>.CopyTo(TResponseContentType[], int) ICollection<TResponseContentType>.Remove(TResponseContentType) ICollection<TResponseContentType>.Count ICollection<TResponseContentType>.IsReadOnly IEnumerable<TResponseContentType>.GetEnumerator()"
  },
  "api/TraktNet.Responses.Interfaces.ITraktNoContentResponse.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktNoContentResponse.html",
    "title": "Interface ITraktNoContentResponse | Trakt.NET",
    "keywords": "Interface ITraktNoContentResponse Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll A Trakt response with no content. public interface ITraktNoContentResponse Properties Exception If IsSuccess is false and if ThrowResponseExceptions is set to false, this contains the thrown exception. Exception Exception { get; set; } Property Value Exception IsSuccess Gets, whether the request for this response was successful. bool IsSuccess { get; set; } Property Value bool"
  },
  "api/TraktNet.Responses.Interfaces.ITraktPagedResponse-1.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktPagedResponse-1.html",
    "title": "Interface ITraktPagedResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Interface ITraktPagedResponse<TResponseContentType> Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll A Trakt paged list response with items of content type TResponseContentType. public interface ITraktPagedResponse<TResponseContentType> : ITraktListResponse<TResponseContentType>, ITraktResponse<IList<TResponseContentType>>, ITraktNoContentResponse, IList<TResponseContentType>, ICollection<TResponseContentType>, IEnumerable<TResponseContentType>, IEnumerable, ITraktPagedResponseHeaders, ITraktResponseHeaders Type Parameters TResponseContentType The content type of the list items. Inherited Members ITraktResponse<IList<TResponseContentType>>.HasValue ITraktResponse<IList<TResponseContentType>>.Value ITraktNoContentResponse.IsSuccess ITraktNoContentResponse.Exception IList<TResponseContentType>.IndexOf(TResponseContentType) IList<TResponseContentType>.Insert(int, TResponseContentType) IList<TResponseContentType>.RemoveAt(int) IList<TResponseContentType>.this[int] ICollection<TResponseContentType>.Add(TResponseContentType) ICollection<TResponseContentType>.Clear() ICollection<TResponseContentType>.Contains(TResponseContentType) ICollection<TResponseContentType>.CopyTo(TResponseContentType[], int) ICollection<TResponseContentType>.Remove(TResponseContentType) ICollection<TResponseContentType>.Count ICollection<TResponseContentType>.IsReadOnly IEnumerable<TResponseContentType>.GetEnumerator() ITraktPagedResponseHeaders.PageCount ITraktPagedResponseHeaders.ItemCount ITraktResponseHeaders.SortBy ITraktResponseHeaders.SortHow ITraktResponseHeaders.AppliedSortBy ITraktResponseHeaders.AppliedSortHow ITraktResponseHeaders.StartDate ITraktResponseHeaders.EndDate ITraktResponseHeaders.TrendingUserCount ITraktResponseHeaders.Page ITraktResponseHeaders.Limit ITraktResponseHeaders.IsPrivateUser ITraktResponseHeaders.ItemId ITraktResponseHeaders.ItemType ITraktResponseHeaders.RateLimit ITraktResponseHeaders.RetryAfter ITraktResponseHeaders.UpgradeURL ITraktResponseHeaders.IsVIPUser ITraktResponseHeaders.AccountLimit"
  },
  "api/TraktNet.Responses.Interfaces.ITraktPagedResponseHeaders.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktPagedResponseHeaders.html",
    "title": "Interface ITraktPagedResponseHeaders | Trakt.NET",
    "keywords": "Interface ITraktPagedResponseHeaders Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll public interface ITraktPagedResponseHeaders : ITraktResponseHeaders Inherited Members ITraktResponseHeaders.SortBy ITraktResponseHeaders.SortHow ITraktResponseHeaders.AppliedSortBy ITraktResponseHeaders.AppliedSortHow ITraktResponseHeaders.StartDate ITraktResponseHeaders.EndDate ITraktResponseHeaders.TrendingUserCount ITraktResponseHeaders.Page ITraktResponseHeaders.Limit ITraktResponseHeaders.IsPrivateUser ITraktResponseHeaders.ItemId ITraktResponseHeaders.ItemType ITraktResponseHeaders.RateLimit ITraktResponseHeaders.RetryAfter ITraktResponseHeaders.UpgradeURL ITraktResponseHeaders.IsVIPUser ITraktResponseHeaders.AccountLimit Properties ItemCount Gets the item count per page for this response. int? ItemCount { get; set; } Property Value int? PageCount Gets the page count for this response. int? PageCount { get; set; } Property Value int?"
  },
  "api/TraktNet.Responses.Interfaces.ITraktResponse-1.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktResponse-1.html",
    "title": "Interface ITraktResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Interface ITraktResponse<TResponseContentType> Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll A Trakt response with content of type TResponseContentType. public interface ITraktResponse<out TResponseContentType> : ITraktNoContentResponse, ITraktResponseHeaders Type Parameters TResponseContentType The content type. Inherited Members ITraktNoContentResponse.IsSuccess ITraktNoContentResponse.Exception ITraktResponseHeaders.SortBy ITraktResponseHeaders.SortHow ITraktResponseHeaders.AppliedSortBy ITraktResponseHeaders.AppliedSortHow ITraktResponseHeaders.StartDate ITraktResponseHeaders.EndDate ITraktResponseHeaders.TrendingUserCount ITraktResponseHeaders.Page ITraktResponseHeaders.Limit ITraktResponseHeaders.IsPrivateUser ITraktResponseHeaders.ItemId ITraktResponseHeaders.ItemType ITraktResponseHeaders.RateLimit ITraktResponseHeaders.RetryAfter ITraktResponseHeaders.UpgradeURL ITraktResponseHeaders.IsVIPUser ITraktResponseHeaders.AccountLimit Properties HasValue Gets, whether this response has a content value set. bool HasValue { get; } Property Value bool Value Gets the set content value of this response. TResponseContentType Value { get; } Property Value TResponseContentType"
  },
  "api/TraktNet.Responses.Interfaces.ITraktResponseHeaders.html": {
    "href": "api/TraktNet.Responses.Interfaces.ITraktResponseHeaders.html",
    "title": "Interface ITraktResponseHeaders | Trakt.NET",
    "keywords": "Interface ITraktResponseHeaders Namespace TraktNet.Responses.Interfaces Assembly Trakt.NET.dll public interface ITraktResponseHeaders Properties AccountLimit The user's account limit. int? AccountLimit { get; set; } Property Value int? AppliedSortBy Gets the value of the set \"applied-sort-by\" response header. Might not be set. TraktSortBy AppliedSortBy { get; set; } Property Value TraktSortBy AppliedSortHow Gets the value of the set \"applied-sort-how\" response header. Might not be set. TraktSortHow AppliedSortHow { get; set; } Property Value TraktSortHow EndDate Gets the value of the set \"end-date\" response header. Might not be set. DateTime? EndDate { get; set; } Property Value DateTime? IsPrivateUser Gets the value of the set \"is-private-user\" response header. Might not be set. bool? IsPrivateUser { get; set; } Property Value bool? IsVIPUser Determines whether the user is a VIP user. bool? IsVIPUser { get; set; } Property Value bool? ItemId Gets the value of the set \"item-id\" response header. Might not be set. int? ItemId { get; set; } Property Value int? ItemType Gets the value of the set \"item-type\" response header. Might not be set. string ItemType { get; set; } Property Value string Limit Gets the value of the set \"limit\" response header. Might not be set. uint? Limit { get; set; } Property Value uint? Page Gets the value of the set \"page\" response header. Might not be set. uint? Page { get; set; } Property Value uint? RateLimit Gets the value of the set \"RateLimit\" response header. Might not be set. string RateLimit { get; set; } Property Value string RetryAfter Gets the value of the set \"Retry-After\" response header. Might not be set. int? RetryAfter { get; set; } Property Value int? SortBy Gets the value of the set \"sort-by\" response header. Might not be set. TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets the value of the set \"sort-how\" response header. Might not be set. TraktSortHow SortHow { get; set; } Property Value TraktSortHow StartDate Gets the value of the set \"start-date\" response header. Might not be set. DateTime? StartDate { get; set; } Property Value DateTime? TrendingUserCount Gets the value of the set \"trending-user-count\" response header. Might not be set. int? TrendingUserCount { get; set; } Property Value int? UpgradeURL The web URL where the user can sign up for Trakt VIP. string UpgradeURL { get; set; } Property Value string"
  },
  "api/TraktNet.Responses.Interfaces.html": {
    "href": "api/TraktNet.Responses.Interfaces.html",
    "title": "Namespace TraktNet.Responses.Interfaces | Trakt.NET",
    "keywords": "Namespace TraktNet.Responses.Interfaces Interfaces ITraktListResponse<TResponseContentType> A Trakt list response with items of content type TResponseContentType. ITraktNoContentResponse A Trakt response with no content. ITraktPagedResponseHeaders ITraktPagedResponse<TResponseContentType> A Trakt paged list response with items of content type TResponseContentType. ITraktResponseHeaders ITraktResponse<TResponseContentType> A Trakt response with content of type TResponseContentType."
  },
  "api/TraktNet.Responses.TraktListResponse-1.html": {
    "href": "api/TraktNet.Responses.TraktListResponse-1.html",
    "title": "Class TraktListResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Class TraktListResponse<TResponseContentType> Namespace TraktNet.Responses Assembly Trakt.NET.dll A Trakt list response with items of content type TResponseContentType. public class TraktListResponse<TResponseContentType> : TraktResponse<IList<TResponseContentType>>, IEquatable<TraktNoContentResponse>, IEqualityComparer<TraktNoContentResponse>, IEquatable<TraktResponse<IList<TResponseContentType>>>, IEqualityComparer<TraktResponse<IList<TResponseContentType>>>, ITraktListResponse<TResponseContentType>, ITraktResponse<IList<TResponseContentType>>, ITraktNoContentResponse, ITraktResponseHeaders, IList<TResponseContentType>, ICollection<TResponseContentType>, IEnumerable<TResponseContentType>, IEnumerable, IEquatable<TraktListResponse<TResponseContentType>>, IEqualityComparer<TraktListResponse<TResponseContentType>> Type Parameters TResponseContentType The content type of the list items. Inheritance object TraktNoContentResponse TraktResponse<IList<TResponseContentType>> TraktListResponse<TResponseContentType> Implements IEquatable<TraktNoContentResponse> IEqualityComparer<TraktNoContentResponse> IEquatable<TraktResponse<IList<TResponseContentType>>> IEqualityComparer<TraktResponse<IList<TResponseContentType>>> ITraktListResponse<TResponseContentType> ITraktResponse<IList<TResponseContentType>> ITraktNoContentResponse ITraktResponseHeaders IList<TResponseContentType> ICollection<TResponseContentType> IEnumerable<TResponseContentType> IEnumerable IEquatable<TraktListResponse<TResponseContentType>> IEqualityComparer<TraktListResponse<TResponseContentType>> Derived TraktPagedResponse<TResponseContentType> Inherited Members TraktResponse<IList<TResponseContentType>>.HasValue TraktResponse<IList<TResponseContentType>>.Value TraktResponse<IList<TResponseContentType>>.SortBy TraktResponse<IList<TResponseContentType>>.SortHow TraktResponse<IList<TResponseContentType>>.AppliedSortBy TraktResponse<IList<TResponseContentType>>.AppliedSortHow TraktResponse<IList<TResponseContentType>>.StartDate TraktResponse<IList<TResponseContentType>>.EndDate TraktResponse<IList<TResponseContentType>>.TrendingUserCount TraktResponse<IList<TResponseContentType>>.Page TraktResponse<IList<TResponseContentType>>.Limit TraktResponse<IList<TResponseContentType>>.IsPrivateUser TraktResponse<IList<TResponseContentType>>.ItemId TraktResponse<IList<TResponseContentType>>.ItemType TraktResponse<IList<TResponseContentType>>.RateLimit TraktResponse<IList<TResponseContentType>>.RetryAfter TraktResponse<IList<TResponseContentType>>.UpgradeURL TraktResponse<IList<TResponseContentType>>.IsVIPUser TraktResponse<IList<TResponseContentType>>.AccountLimit TraktResponse<IList<TResponseContentType>>.Equals(TraktResponse<IList<TResponseContentType>>) TraktResponse<IList<TResponseContentType>>.Equals(TraktResponse<IList<TResponseContentType>>, TraktResponse<IList<TResponseContentType>>) TraktResponse<IList<TResponseContentType>>.GetHashCode(TraktResponse<IList<TResponseContentType>>) TraktNoContentResponse.IsSuccess TraktNoContentResponse.Exception TraktNoContentResponse.Equals(TraktNoContentResponse) TraktNoContentResponse.Equals(TraktNoContentResponse, TraktNoContentResponse) TraktNoContentResponse.GetHashCode(TraktNoContentResponse) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int IsReadOnly public bool IsReadOnly { get; } Property Value bool this[int] public TResponseContentType this[int index] { get; set; } Parameters index int Property Value TResponseContentType Methods Add(TResponseContentType) public void Add(TResponseContentType item) Parameters item TResponseContentType Clear() public void Clear() Contains(TResponseContentType) public bool Contains(TResponseContentType item) Parameters item TResponseContentType Returns bool CopyTo(TResponseContentType[], int) public void CopyTo(TResponseContentType[] array, int arrayIndex) Parameters array TResponseContentType[] arrayIndex int Equals(TraktListResponse<TResponseContentType>) Compares this instance with another TraktListResponse<TResponseContentType> instance. public bool Equals(TraktListResponse<TResponseContentType> other) Parameters other TraktListResponse<TResponseContentType> Another TraktListResponse<TResponseContentType> instance, which will be compared with this instance. Returns bool True, of both instances are equal, otherwise false. Equals(TraktListResponse<TResponseContentType>, TraktListResponse<TResponseContentType>) public bool Equals(TraktListResponse<TResponseContentType> left, TraktListResponse<TResponseContentType> right) Parameters left TraktListResponse<TResponseContentType> right TraktListResponse<TResponseContentType> Returns bool GetEnumerator() Gets the enumerator for the list in this response instance. public IEnumerator<TResponseContentType> GetEnumerator() Returns IEnumerator<TResponseContentType> An enumerator for the list in this response instance. GetHashCode(TraktListResponse<TResponseContentType>) public int GetHashCode(TraktListResponse<TResponseContentType> obj) Parameters obj TraktListResponse<TResponseContentType> Returns int IndexOf(TResponseContentType) public int IndexOf(TResponseContentType item) Parameters item TResponseContentType Returns int Insert(int, TResponseContentType) public void Insert(int index, TResponseContentType item) Parameters index int item TResponseContentType Remove(TResponseContentType) public bool Remove(TResponseContentType item) Parameters item TResponseContentType Returns bool RemoveAt(int) public void RemoveAt(int index) Parameters index int Operators implicit operator TraktListResponse<TResponseContentType>(List<TResponseContentType>) Enables implicit conversion to TraktListResponse<TResponseContentType> for this type. public static implicit operator TraktListResponse<TResponseContentType>(List<TResponseContentType> value) Parameters value List<TResponseContentType> The List<T> instance, which will be converted to TraktListResponse<TResponseContentType>. Returns TraktListResponse<TResponseContentType> implicit operator bool(TraktListResponse<TResponseContentType>) Enables implicit conversion to bool for this type. public static implicit operator bool(TraktListResponse<TResponseContentType> response) Parameters response TraktListResponse<TResponseContentType> The TraktListResponse<TResponseContentType> instance, which will be converted to bool. Returns bool"
  },
  "api/TraktNet.Responses.TraktNoContentResponse.html": {
    "href": "api/TraktNet.Responses.TraktNoContentResponse.html",
    "title": "Class TraktNoContentResponse | Trakt.NET",
    "keywords": "Class TraktNoContentResponse Namespace TraktNet.Responses Assembly Trakt.NET.dll A Trakt response with no content. public class TraktNoContentResponse : ITraktNoContentResponse, IEquatable<TraktNoContentResponse>, IEqualityComparer<TraktNoContentResponse> Inheritance object TraktNoContentResponse Implements ITraktNoContentResponse IEquatable<TraktNoContentResponse> IEqualityComparer<TraktNoContentResponse> Derived TraktResponse<TResponseContentType> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Exception If IsSuccess is false and if ThrowResponseExceptions is set to false, this contains the thrown exception. public Exception Exception { get; set; } Property Value Exception IsSuccess Gets, whether the request for this response was successful. public bool IsSuccess { get; set; } Property Value bool Methods Equals(TraktNoContentResponse) Compares this instance with another TraktNoContentResponse instance. public bool Equals(TraktNoContentResponse other) Parameters other TraktNoContentResponse Another TraktNoContentResponse instance, which will be compared with this instance. Returns bool True, of both instances are equal, otherwise false. Equals(TraktNoContentResponse, TraktNoContentResponse) public bool Equals(TraktNoContentResponse left, TraktNoContentResponse right) Parameters left TraktNoContentResponse right TraktNoContentResponse Returns bool GetHashCode(TraktNoContentResponse) public int GetHashCode(TraktNoContentResponse obj) Parameters obj TraktNoContentResponse Returns int Operators implicit operator bool(TraktNoContentResponse) Enables implicit conversion to bool for this type. public static implicit operator bool(TraktNoContentResponse response) Parameters response TraktNoContentResponse The TraktNoContentResponse instance, which will be converted to bool. Returns bool"
  },
  "api/TraktNet.Responses.TraktPagedResponse-1.html": {
    "href": "api/TraktNet.Responses.TraktPagedResponse-1.html",
    "title": "Class TraktPagedResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Class TraktPagedResponse<TResponseContentType> Namespace TraktNet.Responses Assembly Trakt.NET.dll A Trakt paged list response with items of content type TResponseContentType. public class TraktPagedResponse<TResponseContentType> : TraktListResponse<TResponseContentType>, IEquatable<TraktNoContentResponse>, IEqualityComparer<TraktNoContentResponse>, IEquatable<TraktResponse<IList<TResponseContentType>>>, IEqualityComparer<TraktResponse<IList<TResponseContentType>>>, IEquatable<TraktListResponse<TResponseContentType>>, IEqualityComparer<TraktListResponse<TResponseContentType>>, ITraktPagedResponse<TResponseContentType>, ITraktListResponse<TResponseContentType>, ITraktResponse<IList<TResponseContentType>>, ITraktNoContentResponse, IList<TResponseContentType>, ICollection<TResponseContentType>, IEnumerable<TResponseContentType>, IEnumerable, ITraktPagedResponseHeaders, ITraktResponseHeaders, IEquatable<TraktPagedResponse<TResponseContentType>>, IEqualityComparer<TraktPagedResponse<TResponseContentType>> Type Parameters TResponseContentType The content type of the list items. Inheritance object TraktNoContentResponse TraktResponse<IList<TResponseContentType>> TraktListResponse<TResponseContentType> TraktPagedResponse<TResponseContentType> Implements IEquatable<TraktNoContentResponse> IEqualityComparer<TraktNoContentResponse> IEquatable<TraktResponse<IList<TResponseContentType>>> IEqualityComparer<TraktResponse<IList<TResponseContentType>>> IEquatable<TraktListResponse<TResponseContentType>> IEqualityComparer<TraktListResponse<TResponseContentType>> ITraktPagedResponse<TResponseContentType> ITraktListResponse<TResponseContentType> ITraktResponse<IList<TResponseContentType>> ITraktNoContentResponse IList<TResponseContentType> ICollection<TResponseContentType> IEnumerable<TResponseContentType> IEnumerable ITraktPagedResponseHeaders ITraktResponseHeaders IEquatable<TraktPagedResponse<TResponseContentType>> IEqualityComparer<TraktPagedResponse<TResponseContentType>> Inherited Members TraktListResponse<TResponseContentType>.Equals(TraktListResponse<TResponseContentType>) TraktListResponse<TResponseContentType>.Equals(TraktListResponse<TResponseContentType>, TraktListResponse<TResponseContentType>) TraktListResponse<TResponseContentType>.GetEnumerator() TraktListResponse<TResponseContentType>.GetHashCode(TraktListResponse<TResponseContentType>) TraktListResponse<TResponseContentType>.this[int] TraktListResponse<TResponseContentType>.Count TraktListResponse<TResponseContentType>.IsReadOnly TraktListResponse<TResponseContentType>.Add(TResponseContentType) TraktListResponse<TResponseContentType>.Clear() TraktListResponse<TResponseContentType>.Contains(TResponseContentType) TraktListResponse<TResponseContentType>.CopyTo(TResponseContentType[], int) TraktListResponse<TResponseContentType>.IndexOf(TResponseContentType) TraktListResponse<TResponseContentType>.Insert(int, TResponseContentType) TraktListResponse<TResponseContentType>.Remove(TResponseContentType) TraktListResponse<TResponseContentType>.RemoveAt(int) TraktResponse<IList<TResponseContentType>>.HasValue TraktResponse<IList<TResponseContentType>>.Value TraktResponse<IList<TResponseContentType>>.SortBy TraktResponse<IList<TResponseContentType>>.SortHow TraktResponse<IList<TResponseContentType>>.AppliedSortBy TraktResponse<IList<TResponseContentType>>.AppliedSortHow TraktResponse<IList<TResponseContentType>>.StartDate TraktResponse<IList<TResponseContentType>>.EndDate TraktResponse<IList<TResponseContentType>>.TrendingUserCount TraktResponse<IList<TResponseContentType>>.Page TraktResponse<IList<TResponseContentType>>.Limit TraktResponse<IList<TResponseContentType>>.IsPrivateUser TraktResponse<IList<TResponseContentType>>.ItemId TraktResponse<IList<TResponseContentType>>.ItemType TraktResponse<IList<TResponseContentType>>.RateLimit TraktResponse<IList<TResponseContentType>>.RetryAfter TraktResponse<IList<TResponseContentType>>.UpgradeURL TraktResponse<IList<TResponseContentType>>.IsVIPUser TraktResponse<IList<TResponseContentType>>.AccountLimit TraktResponse<IList<TResponseContentType>>.Equals(TraktResponse<IList<TResponseContentType>>) TraktResponse<IList<TResponseContentType>>.Equals(TraktResponse<IList<TResponseContentType>>, TraktResponse<IList<TResponseContentType>>) TraktResponse<IList<TResponseContentType>>.GetHashCode(TraktResponse<IList<TResponseContentType>>) TraktNoContentResponse.IsSuccess TraktNoContentResponse.Exception TraktNoContentResponse.Equals(TraktNoContentResponse) TraktNoContentResponse.Equals(TraktNoContentResponse, TraktNoContentResponse) TraktNoContentResponse.GetHashCode(TraktNoContentResponse) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasNextPage Returns whether the response can retrieve the next page. public bool HasNextPage { get; } Property Value bool HasPreviousPage Returns whether the response can retrieve the previous page. public bool HasPreviousPage { get; } Property Value bool ItemCount Gets the item count per page for this response. public int? ItemCount { get; set; } Property Value int? PageCount Gets the page count for this response. public int? PageCount { get; set; } Property Value int? Methods Equals(TraktPagedResponse<TResponseContentType>) Compares this instance with another TraktPagedResponse<TResponseContentType> instance. public bool Equals(TraktPagedResponse<TResponseContentType> other) Parameters other TraktPagedResponse<TResponseContentType> Another TraktPagedResponse<TResponseContentType> instance, which will be compared with this instance. Returns bool True, of both instances are equal, otherwise false. Equals(TraktPagedResponse<TResponseContentType>, TraktPagedResponse<TResponseContentType>) public bool Equals(TraktPagedResponse<TResponseContentType> left, TraktPagedResponse<TResponseContentType> right) Parameters left TraktPagedResponse<TResponseContentType> right TraktPagedResponse<TResponseContentType> Returns bool GetHashCode(TraktPagedResponse<TResponseContentType>) public int GetHashCode(TraktPagedResponse<TResponseContentType> obj) Parameters obj TraktPagedResponse<TResponseContentType> Returns int GetNextPageAsync(CancellationToken) Gets the next retrievable page for this response, if HasNextPage is true. If this response is already the last page response or if there are no more pages to retrieve, this response instance will be returned. public Task<TraktPagedResponse<TResponseContentType>> GetNextPageAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<TResponseContentType>> An TraktPagedResponse<TResponseContentType> instance containing the items of the next page and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and TResponseContentType. Exceptions TraktException Thrown, if the request fails. GetPreviousPageAsync(CancellationToken) Gets the previous retrievable page for this response, if HasPreviousPage is true. If this response is already the first page response or if there are no more pages to retrieve, this response instance will be returned. public Task<TraktPagedResponse<TResponseContentType>> GetPreviousPageAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Propagates notification that the request should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TraktPagedResponse<TResponseContentType>> An TraktPagedResponse<TResponseContentType> instance containing the items of the previous page and which also contains the queried page number, the page's item count, maximum page count and maximum item count. See also TraktPagedResponse<TResponseContentType> and TResponseContentType. Exceptions TraktException Thrown, if the request fails. Operators implicit operator TraktPagedResponse<TResponseContentType>(List<TResponseContentType>) Enables implicit conversion to TraktPagedResponse<TResponseContentType> for this type. public static implicit operator TraktPagedResponse<TResponseContentType>(List<TResponseContentType> value) Parameters value List<TResponseContentType> The List<T> instance, which will be converted to TraktPagedResponse<TResponseContentType>. Returns TraktPagedResponse<TResponseContentType> implicit operator bool(TraktPagedResponse<TResponseContentType>) Enables implicit conversion to bool for this type. public static implicit operator bool(TraktPagedResponse<TResponseContentType> response) Parameters response TraktPagedResponse<TResponseContentType> The TraktPagedResponse<TResponseContentType> instance, which will be converted to bool. Returns bool"
  },
  "api/TraktNet.Responses.TraktResponse-1.html": {
    "href": "api/TraktNet.Responses.TraktResponse-1.html",
    "title": "Class TraktResponse<TResponseContentType> | Trakt.NET",
    "keywords": "Class TraktResponse<TResponseContentType> Namespace TraktNet.Responses Assembly Trakt.NET.dll A Trakt response with content of type TResponseContentType. public class TraktResponse<TResponseContentType> : TraktNoContentResponse, IEquatable<TraktNoContentResponse>, IEqualityComparer<TraktNoContentResponse>, ITraktResponse<TResponseContentType>, ITraktNoContentResponse, ITraktResponseHeaders, IEquatable<TraktResponse<TResponseContentType>>, IEqualityComparer<TraktResponse<TResponseContentType>> Type Parameters TResponseContentType The content type. Inheritance object TraktNoContentResponse TraktResponse<TResponseContentType> Implements IEquatable<TraktNoContentResponse> IEqualityComparer<TraktNoContentResponse> ITraktResponse<TResponseContentType> ITraktNoContentResponse ITraktResponseHeaders IEquatable<TraktResponse<TResponseContentType>> IEqualityComparer<TraktResponse<TResponseContentType>> Derived TraktListResponse<TResponseContentType> Inherited Members TraktNoContentResponse.IsSuccess TraktNoContentResponse.Exception TraktNoContentResponse.Equals(TraktNoContentResponse) TraktNoContentResponse.Equals(TraktNoContentResponse, TraktNoContentResponse) TraktNoContentResponse.GetHashCode(TraktNoContentResponse) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountLimit The user's account limit. public int? AccountLimit { get; set; } Property Value int? AppliedSortBy Gets the value of the set \"applied-sort-by\" response header. Might not be set. public TraktSortBy AppliedSortBy { get; set; } Property Value TraktSortBy AppliedSortHow Gets the value of the set \"applied-sort-how\" response header. Might not be set. public TraktSortHow AppliedSortHow { get; set; } Property Value TraktSortHow EndDate Gets the value of the set \"end-date\" response header. Might not be set. public DateTime? EndDate { get; set; } Property Value DateTime? HasValue Gets, whether this response has a content value set. public bool HasValue { get; set; } Property Value bool IsPrivateUser Gets the value of the set \"is-private-user\" response header. Might not be set. public bool? IsPrivateUser { get; set; } Property Value bool? IsVIPUser Determines whether the user is a VIP user. public bool? IsVIPUser { get; set; } Property Value bool? ItemId Gets the value of the set \"item-id\" response header. Might not be set. public int? ItemId { get; set; } Property Value int? ItemType Gets the value of the set \"item-type\" response header. Might not be set. public string ItemType { get; set; } Property Value string Limit Gets the value of the set \"limit\" response header. Might not be set. public uint? Limit { get; set; } Property Value uint? Page Gets the value of the set \"page\" response header. Might not be set. public uint? Page { get; set; } Property Value uint? RateLimit Gets the value of the set \"RateLimit\" response header. Might not be set. public string RateLimit { get; set; } Property Value string RetryAfter Gets the value of the set \"Retry-After\" response header. Might not be set. public int? RetryAfter { get; set; } Property Value int? SortBy Gets the value of the set \"sort-by\" response header. Might not be set. public TraktSortBy SortBy { get; set; } Property Value TraktSortBy SortHow Gets the value of the set \"sort-how\" response header. Might not be set. public TraktSortHow SortHow { get; set; } Property Value TraktSortHow StartDate Gets the value of the set \"start-date\" response header. Might not be set. public DateTime? StartDate { get; set; } Property Value DateTime? TrendingUserCount Gets the value of the set \"trending-user-count\" response header. Might not be set. public int? TrendingUserCount { get; set; } Property Value int? UpgradeURL The web URL where the user can sign up for Trakt VIP. public string UpgradeURL { get; set; } Property Value string Value Gets the set content value of this response. public TResponseContentType Value { get; set; } Property Value TResponseContentType Methods Equals(TraktResponse<TResponseContentType>) Compares this instance with another TraktResponse<TResponseContentType> instance. public bool Equals(TraktResponse<TResponseContentType> other) Parameters other TraktResponse<TResponseContentType> Another TraktResponse<TResponseContentType> instance, which will be compared with this instance. Returns bool True, of both instances are equal, otherwise false. Equals(TraktResponse<TResponseContentType>, TraktResponse<TResponseContentType>) public bool Equals(TraktResponse<TResponseContentType> left, TraktResponse<TResponseContentType> right) Parameters left TraktResponse<TResponseContentType> right TraktResponse<TResponseContentType> Returns bool GetHashCode(TraktResponse<TResponseContentType>) public int GetHashCode(TraktResponse<TResponseContentType> obj) Parameters obj TraktResponse<TResponseContentType> Returns int Operators implicit operator bool(TraktResponse<TResponseContentType>) Enables implicit conversion to bool for this type. public static implicit operator bool(TraktResponse<TResponseContentType> response) Parameters response TraktResponse<TResponseContentType> The TraktResponse<TResponseContentType> instance, which will be converted to bool. Returns bool implicit operator TResponseContentType(TraktResponse<TResponseContentType>) Enables implicit conversion to TResponseContentType for this type. public static implicit operator TResponseContentType(TraktResponse<TResponseContentType> response) Parameters response TraktResponse<TResponseContentType> The TraktResponse<TResponseContentType> instance, which will be converted to TResponseContentType. Returns TResponseContentType implicit operator TraktResponse<TResponseContentType>(TResponseContentType) Enables implicit conversion to TraktResponse<TResponseContentType> for this type. public static implicit operator TraktResponse<TResponseContentType>(TResponseContentType value) Parameters value TResponseContentType The TResponseContentType instance, which will be converted to TraktResponse<TResponseContentType>. Returns TraktResponse<TResponseContentType>"
  },
  "api/TraktNet.Responses.html": {
    "href": "api/TraktNet.Responses.html",
    "title": "Namespace TraktNet.Responses | Trakt.NET",
    "keywords": "Namespace TraktNet.Responses Classes TraktListResponse<TResponseContentType> A Trakt list response with items of content type TResponseContentType. TraktNoContentResponse A Trakt response with no content. TraktPagedResponse<TResponseContentType> A Trakt paged list response with items of content type TResponseContentType. TraktResponse<TResponseContentType> A Trakt response with content of type TResponseContentType."
  },
  "api/TraktNet.Services.TraktLanguageService.html": {
    "href": "api/TraktNet.Services.TraktLanguageService.html",
    "title": "Class TraktLanguageService | Trakt.NET",
    "keywords": "Class TraktLanguageService Namespace TraktNet.Services Assembly Trakt.NET.dll Provides helper methods for converting two letter language codes into language names and converting two letter country codes into country names. public static class TraktLanguageService Inheritance object TraktLanguageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAvailableTranslationLanguages(IEnumerable<string>) Tries to look up languages names for the given language codes. [Obsolete(\"This method is deprecated and will be removed in a future version.\")] public static IEnumerable<string> GetAvailableTranslationLanguages(IEnumerable<string> availableTranslationLanguageCodes) Parameters availableTranslationLanguageCodes IEnumerable<string> A list of two letter language codes, for which the language names should be looked up. Returns IEnumerable<string> A list containing the found languages names. If the given language codes list is null or empty, an empty list will be returned. GetCountry(string) Tries to look up the country name for the given country code. [Obsolete(\"This method is deprecated and will be removed in a future version.\")] public static string GetCountry(string countryCode) Parameters countryCode string The two letter country code, for which the country name should be looked up. Returns string The country name for the given country code or an empty string, if not found. GetLanguage(string) Tries to look up the language name for the given language code. [Obsolete(\"This method is deprecated and will be removed in a future version.\")] public static string GetLanguage(string languageCode) Parameters languageCode string The two letter language code, for which the language name should be looked up. Returns string The language name for the given language code or an empty string, if not found."
  },
  "api/TraktNet.Services.TraktSerializationService.html": {
    "href": "api/TraktNet.Services.TraktSerializationService.html",
    "title": "Class TraktSerializationService | Trakt.NET",
    "keywords": "Class TraktSerializationService Namespace TraktNet.Services Assembly Trakt.NET.dll Provides helper methods for serializing and deserializing Trakt objects. public static class TraktSerializationService Inheritance object TraktSerializationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeserializeAsync(string, CancellationToken) Deserializes a JSON string to a ITraktAuthorization instance. public static Task<ITraktAuthorization> DeserializeAsync(string authorizationJson, CancellationToken cancellationToken = default) Parameters authorizationJson string The JSON string, which will be deserialized to a ITraktAuthorization instance. cancellationToken CancellationToken Propagates notification that the deserialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<ITraktAuthorization> A deserialized ITraktAuthorization instance from a JSON string. Exceptions ArgumentNullException Thrown, if the given authorizationJson is null. ArgumentException Thrown, if the given authorizationJson is empty. DeserializeAsync<TObjectType>(string, CancellationToken) Deserializes a JSON string to a TObjectType instance. public static Task<TObjectType> DeserializeAsync<TObjectType>(string json, CancellationToken cancellationToken = default) Parameters json string The JSON string, which will be deserialized to a object instance. cancellationToken CancellationToken Propagates notification that the deserialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<TObjectType> A deserialized object instance from a JSON string. Type Parameters TObjectType The type of the object, which will be deserialized from a JSON string. Exceptions ArgumentNullException Thrown, if the given json is null. ArgumentException Thrown, if the given json is empty. DeserializeCollectionAsync<TObjectType>(string, CancellationToken) Deserializes a JSON string to a collection of TObjectType instances. public static Task<IList<TObjectType>> DeserializeCollectionAsync<TObjectType>(string json, CancellationToken cancellationToken = default) Parameters json string The JSON string, which will be deserialized to a object collection. cancellationToken CancellationToken Propagates notification that the deserialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<IList<TObjectType>> A deserialized object collection from a JSON string. Type Parameters TObjectType The type of the objects, which will be deserialized from a JSON string. Exceptions ArgumentNullException Thrown, if the given json is null. ArgumentException Thrown, if the given json is empty. SerializeAsync(ITraktAuthorization, bool, CancellationToken) Serializes a ITraktAuthorization instance to a JSON string. public static Task<string> SerializeAsync(ITraktAuthorization authorization, bool indentation, CancellationToken cancellationToken = default) Parameters authorization ITraktAuthorization The ITraktAuthorization instance, which will be serialized. indentation bool Determines whether the written JSON data should be indented. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given ITraktAuthorization instance. Exceptions ArgumentNullException Thrown, if the given authorization is null. SerializeAsync(ITraktAuthorization, CancellationToken) Serializes a ITraktAuthorization instance to a JSON string. public static Task<string> SerializeAsync(ITraktAuthorization authorization, CancellationToken cancellationToken = default) Parameters authorization ITraktAuthorization The ITraktAuthorization instance, which will be serialized. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given ITraktAuthorization instance. Exceptions ArgumentNullException Thrown, if the given authorization is null. SerializeAsync<TObjectType>(TObjectType, bool, CancellationToken) Serializes a TObjectType instance to a JSON string. public static Task<string> SerializeAsync<TObjectType>(TObjectType obj, bool indentation, CancellationToken cancellationToken = default) Parameters obj TObjectType The object instance, which will be serialized. indentation bool Determines whether the written JSON data should be indented. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given object instance. Type Parameters TObjectType The type of the object, which will be serialized to a JSON string. Exceptions ArgumentNullException Thrown, if the given obj is null. SerializeAsync<TObjectType>(TObjectType, CancellationToken) Serializes a TObjectType instance to a JSON string. public static Task<string> SerializeAsync<TObjectType>(TObjectType obj, CancellationToken cancellationToken = default) Parameters obj TObjectType The object instance, which will be serialized. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given object instance. Type Parameters TObjectType The type of the object, which will be serialized to a JSON string. Exceptions ArgumentNullException Thrown, if the given obj is null. SerializeCollectionAsync<TObjectType>(IEnumerable<TObjectType>, bool, CancellationToken) Serializes a collection of TObjectType instances to a JSON string. public static Task<string> SerializeCollectionAsync<TObjectType>(IEnumerable<TObjectType> objects, bool indentation, CancellationToken cancellationToken = default) Parameters objects IEnumerable<TObjectType> The objects, which will be serialized. indentation bool Determines whether the written JSON data should be indented. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given objects collection. Type Parameters TObjectType The type of the objects, which will be serialized to a JSON string. Exceptions ArgumentNullException Thrown, if the given objects is null. SerializeCollectionAsync<TObjectType>(IEnumerable<TObjectType>, CancellationToken) Serializes a collection of TObjectType instances to a JSON string. public static Task<string> SerializeCollectionAsync<TObjectType>(IEnumerable<TObjectType> objects, CancellationToken cancellationToken = default) Parameters objects IEnumerable<TObjectType> The objects, which will be serialized. cancellationToken CancellationToken Propagates notification that the serialization should be canceled. If provided, the exception OperationCanceledException should be catched. Returns Task<string> Returns a JSON string of the given objects collection. Type Parameters TObjectType The type of the objects, which will be serialized to a JSON string. Exceptions ArgumentNullException Thrown, if the given objects is null."
  },
  "api/TraktNet.Services.html": {
    "href": "api/TraktNet.Services.html",
    "title": "Namespace TraktNet.Services | Trakt.NET",
    "keywords": "Namespace TraktNet.Services Classes TraktLanguageService Provides helper methods for converting two letter language codes into language names and converting two letter country codes into country names. TraktSerializationService Provides helper methods for serializing and deserializing Trakt objects."
  },
  "api/TraktNet.TraktClient.html": {
    "href": "api/TraktNet.TraktClient.html",
    "title": "Class TraktClient | Trakt.NET",
    "keywords": "Class TraktClient Namespace TraktNet Assembly Trakt.NET.dll Provides access to all functionality of this library. Provides the only access to all of the library's modules. public class TraktClient Inheritance object TraktClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TraktClient(string, string, IHttpClientProvider) Initializes a new instance of the TraktClient class. public TraktClient(string clientId, string clientSecret, IHttpClientProvider httpClientProvider = null) Parameters clientId string The Trakt Client Id. See ClientId. clientSecret string The Trakt Client Secret. See ClientSecret. httpClientProvider IHttpClientProvider TraktClient(string, IHttpClientProvider) Initializes a new instance of the TraktClient class. public TraktClient(string clientId, IHttpClientProvider httpClientProvider = null) Parameters clientId string The Trakt Client Id. See ClientId. httpClientProvider IHttpClientProvider A custom HttpClient provider, which can be used to provide a HttpClient with a custom HttpMessageHandler. If not set, a default implementation (HttpClientProvider) will be used. Properties Authentication Provides access to the authentication module. See TraktAuthenticationModule. public TraktAuthenticationModule Authentication { get; } Property Value TraktAuthenticationModule Authorization Gets or sets the Trakt Authorization information. See also ITraktAuthorization. public ITraktAuthorization Authorization { get; set; } Property Value ITraktAuthorization Calendar Provides access to the calendar module. See TraktCalendarModule. public TraktCalendarModule Calendar { get; } Property Value TraktCalendarModule Certifications Provides access to the certifications module. See TraktCertificationsModule. public TraktCertificationsModule Certifications { get; } Property Value TraktCertificationsModule Checkins Provides access to the checkins module. See TraktCheckinsModule. public TraktCheckinsModule Checkins { get; } Property Value TraktCheckinsModule ClientId Gets or sets the Trakt Client Id. See also ClientSecret. public string ClientId { get; set; } Property Value string ClientSecret Gets or sets the Trakt Client Secret. See also ClientId. public string ClientSecret { get; set; } Property Value string Comments Provides access to the commends module. See TraktCommentsModule. public TraktCommentsModule Comments { get; } Property Value TraktCommentsModule Configuration Provides access to the configuration settings for the TraktClient. See TraktConfiguration. public TraktConfiguration Configuration { get; } Property Value TraktConfiguration Countries Provides access to the countries module. See TraktCountriesModule. public TraktCountriesModule Countries { get; } Property Value TraktCountriesModule Episodes Provides access to the episodes module. See TraktEpisodesModule. public TraktEpisodesModule Episodes { get; } Property Value TraktEpisodesModule Genres Provides access to the genres module. See TraktGenresModule. public TraktGenresModule Genres { get; } Property Value TraktGenresModule IsValidForAuthenticationProcess Returns, whether the client is valid to use for OAuth authentication. To enable this behavior, you must set a valid Trakt Client Id and a valid Trakt Client Secret. See ClientId. See ClientSecret. public bool IsValidForAuthenticationProcess { get; } Property Value bool IsValidForUseWithAuthorization Returns, whether the client is valid to use for API requests, that require OAuth authorization. To enable this behavior, you must set a valid Trakt Client Id and a valid Trakt Access Token. See ClientId. See IsAuthorized. public bool IsValidForUseWithAuthorization { get; } Property Value bool IsValidForUseWithoutAuthorization Returns, whether the client is valid to use for API requests, that do not require OAuth authorization. To enable this behavior, you must set a valid Trakt Client Id. See ClientId. public bool IsValidForUseWithoutAuthorization { get; } Property Value bool Languages Provides access to the languages module. See TraktLanguagesModule. public TraktLanguagesModule Languages { get; } Property Value TraktLanguagesModule Lists Provides access to the lists module. See TraktListsModule. public TraktListsModule Lists { get; } Property Value TraktListsModule Movies Provides access to the movies module. See TraktMoviesModule. public TraktMoviesModule Movies { get; } Property Value TraktMoviesModule Networks Provides access to the networks module. See TraktNetworksModule. public TraktNetworksModule Networks { get; } Property Value TraktNetworksModule Notes Provides access to the notes module. See TraktNotesModule. public TraktNotesModule Notes { get; } Property Value TraktNotesModule People Provides access to the people module. See TraktPeopleModule. public TraktPeopleModule People { get; } Property Value TraktPeopleModule Recommendations Provides access to the recommendations module. See TraktRecommendationsModule. public TraktRecommendationsModule Recommendations { get; } Property Value TraktRecommendationsModule Scrobble Provides access to the scrobble module. See TraktScrobbleModule. public TraktScrobbleModule Scrobble { get; } Property Value TraktScrobbleModule Search Provides access to the search module. See TraktSearchModule. public TraktSearchModule Search { get; } Property Value TraktSearchModule Seasons Provides access to the seasons module. See TraktSeasonsModule. public TraktSeasonsModule Seasons { get; } Property Value TraktSeasonsModule Shows Provides access to the shows module. See TraktShowsModule. public TraktShowsModule Shows { get; } Property Value TraktShowsModule Sync Provides access to the sync module. See TraktSyncModule. public TraktSyncModule Sync { get; } Property Value TraktSyncModule Users Provides access to the users module. See TraktUsersModule. public TraktUsersModule Users { get; } Property Value TraktUsersModule"
  },
  "api/TraktNet.Utils.Pair-2.html": {
    "href": "api/TraktNet.Utils.Pair-2.html",
    "title": "Struct Pair<T, U> | Trakt.NET",
    "keywords": "Struct Pair<T, U> Namespace TraktNet.Utils Assembly Trakt.NET.dll A small container containing two values of different types. public struct Pair<T, U> Type Parameters T The type of the first element in this pair. U The type of the second element in this pair. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Pair(T, U) Initializes a new instance of the Pair<T, U> struct. public Pair(T first, U second) Parameters first T The pair's first value. second U The pair's second value. Properties First Gets or sets the first value of the pair. public T First { readonly get; set; } Property Value T Second Gets or sets the second value of the pair. public U Second { readonly get; set; } Property Value U"
  },
  "api/TraktNet.Utils.Range-1.html": {
    "href": "api/TraktNet.Utils.Range-1.html",
    "title": "Struct Range<T> | Trakt.NET",
    "keywords": "Struct Range<T> Namespace TraktNet.Utils Assembly Trakt.NET.dll Represents a range between two values. public struct Range<T> Type Parameters T The actual underlying data type. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Range(T, T) Initializes a new instance of the Range<T> struct. public Range(T begin, T end) Parameters begin T The range's begin value. end T The range's end value. Properties Begin Returns the begin of the range. public readonly T Begin { get; } Property Value T End Returns the end of the range. public readonly T End { get; } Property Value T"
  },
  "api/TraktNet.Utils.html": {
    "href": "api/TraktNet.Utils.html",
    "title": "Namespace TraktNet.Utils | Trakt.NET",
    "keywords": "Namespace TraktNet.Utils Structs Pair<T, U> A small container containing two values of different types. Range<T> Represents a range between two values."
  },
  "api/TraktNet.html": {
    "href": "api/TraktNet.html",
    "title": "Namespace TraktNet | Trakt.NET",
    "keywords": "Namespace TraktNet Classes TraktClient Provides access to all functionality of this library. Provides the only access to all of the library's modules."
  },
  "docs/essentials/async.html": {
    "href": "docs/essentials/async.html",
    "title": "Async / Await | Trakt.NET",
    "keywords": "Async / Await Almost every library method runs asynchronously. Every method, that runs asynchronously, has the suffix Async. The common syntax for calling library methods is the following: var result = await client.[ModuleName].[MethodName]Async([arguments]); // or var task = client.[ModuleName].[MethodName]Async([arguments]); var result = await task; // or, without result await client.[ModuleName].[MethodName]Async([arguments]); // or from stream var results = client[ModuleName].[MethodName]StreamAsync([arguments]); await foreach (var result in results) { } // or from a stream to a list using TraktNet.Extensions; var results = await client[ModuleName].[MethodName]StreamAsync([arguments]).ToListAsync(); More information on async programming in C#."
  },
  "docs/essentials/auth.html": {
    "href": "docs/essentials/auth.html",
    "title": "Authentication and Authorization | Trakt.NET",
    "keywords": "Authentication and Authorization Authentication is necessary if you need to call Trakt API requests, that require authorization. Every method in the library, that requires authorization, indicates this in its method documentation. The Trakt API provides two methods for authenticating users and both are supported by the library. For more information read the OAuth Authentication and Device Authentication sections. Authorization Authorization information for the Trakt API contains not only the access token but also a refresh token, that makes it possible to retrieve new authorization information without authenticating the user again and without the need of the user to interact. The ITraktAuthorization interface represents such authorization information. It also contains the UTC DateTime, when it was created and can tell you if it is expired and if the containing authorization information can be refreshed. You can get a new TraktAuthorization instance by authenticating the user either with OAuth- or Device-Authentication. If you already have an access token (and optionally a refresh token), you can create a new ITraktAuthorization instance in one of the following ways: using TraktNet.Objects.Authentication; ITraktAuthorization authorization = TraktAuthorization.CreateWith(\"existing access token\"); // or ITraktAuthorization authorization = TraktAuthorization.CreateWith(\"existing access token\", \"existing refresh token\"); // or, // if you also have the DateTime, when the authorization was created // and the value, after which the authorization expires DateTime createdAt = DateTime.Now.AddDays(-30); // 30 days ago uint expiresInSeconds = 3600 * 24 * 90; // 90 days (default value), has to be in seconds ITraktAuthorization authorization = TraktAuthorization.CreateWith(createdAt, expiresInSeconds, \"existing access token\"); ITraktAuthorization authorization = TraktAuthorization.CreateWith(createdAt, expiresInSeconds, \"existing access token\", \"existing refresh token\"); // or ITraktAuthorization authorization = TraktAuthorization.CreateWith(expiresInSeconds, \"existing access token\"); ITraktAuthorization authorization = TraktAuthorization.CreateWith(expiresInSeconds, \"existing access token\", \"existing refresh token\"); // or ITraktAuthorization authorization = TraktAuthorization.CreateWith(createdAt, \"existing access token\"); ITraktAuthorization authorization = TraktAuthorization.CreateWith(createdAt, \"existing access token\", \"existing refresh token\") And then just pass it to your TraktClient instance: client.Authorization = authorization; OAuth Authentication The workflow for authenticating users with the traditional OAuth method is the following: Create an authorization URL: string authorizationUrl = client.Authentication.CreateAuthorizationUrl(); Reference Your users need to visit the authorizationUrl's webpage. Your users need to provide you a PIN code that they get from Trakt.tv. Get authorization with the PIN code provided by your users: using TraktNet.Objects.Authentication; string code = \"12345678\"; // PIN code from your users ITraktAuthorization authorization = await client.Authentication.GetAuthorizationAsync(code); // or client.Authentication.OAuthAuthorizationCode = code; ITraktAuthorization authorization = await client.Authentication.GetAuthorizationAsync(); Note You don't need to pass the returned ITraktAuthorization to your TraktClient instance. This happens automatically inside the library. Note A TraktAuthenticationOAuthException will be thrown if the code provided by your users is invalid. Here is an example of how to authenticate a user with OAuth Authentication. Device Authentication The workflow for authenticating users with the Device method is the following: Create a new ITraktDevice: ITraktDevice device = await client.Authentication.GenerateDeviceAsync(); (Reference) The returned ITraktDevice is valid for about ten minutes and contains a device code and a verification URL. Your users need to visit the device.VerificationUrl's web page and to enter the device.UserCode on that web page. Simultaneously you need to poll for the new authorization. This process will stop as soon as your users have authenticated your application. But the process will not take any longer than 10 minutes. If your users have not authenticated your application after the given time period, you need to start over the whole process as of step (1). using TraktNet.Objects.Authentication; ITraktAuthorization authorization = await client.Authentication.PollForAuthorizationAsync(); Note You don't need to pass the returned ITraktAuthorization to your TraktClient instance. This happens automatically inside the library. Note A TraktAuthenticationDeviceException will be thrown, if PollForAuthorizationAsync() fails. Here is an example of how to authenticate a user with Device Authentication. Refresh Authorization The Trakt authorization information will be valid for 90 days for each one of your users. You need to refresh the authorization before the current one expires. Your ITraktAuthorization needs to have a valid refresh token set. You can check this with its property IsRefreshPossible. The ITraktAuthorization interface has the property IsExpired, that tells you if it is expired. To check, if an authorization was revoked by the user, you can call the following method: using TraktNet.Objects.Authentication; // Precondition: client.Authorization is already set bool expiredOrRevoked = await client.Authentication.CheckIfAuthorizationIsExpiredOrWasRevokedAsync(); // or ITraktAuthorization yourAuthorization = TraktAuthorization.CreateWith(\"access token\"); bool expiredOrRevoked = await client.Authentication.CheckIfAuthorizationIsExpiredOrWasRevokedAsync(yourAuthorization); Alternatively, you can directly check an access token: string myAccessToken = \"access token\"; bool revoked = await client.Authentication.CheckIfAccessTokenWasRevokedOrIsNotValidAsync(myAccessToken); To actually refresh the current authorization, simply call the following method: using TraktNet.Objects.Authentication; // Precondition: client.Authorization is already set ITraktAuthorization newAuthorization = await client.Authentication.RefreshAuthorizationAsync(); Note You don't need to pass the returned ITraktAuthorization to your TraktClient instance. This happens automatically inside the library. Revoke Authorization Revoking the current authorization is also very simple: await client.Authentication.RevokeAuthorizationAsync(); Note After a successful call to RevokeAuthorizationAsync(), client.Authorization will return a default and invalid ITraktAuthorization instance."
  },
  "docs/essentials/exceptionhandling.html": {
    "href": "docs/essentials/exceptionhandling.html",
    "title": "Exception Handling | Trakt.NET",
    "keywords": "Exception Handling Trakt.NET uses exceptions extensively. Every exception in the library inherits by TraktException. That means you don't need to catch every single exception thrown by the library, only TraktException: Usage The library usage would look like this: using TraktNet.Exceptions; try { var result = await client.[ModuleName].[MethodName]Async([arguments]); } catch (TraktException ex) { Console.WriteLine($\"Exception message: {ex.Message}\"); Console.WriteLine($\"Status code: {ex.StatusCode}\"); Console.WriteLine($\"Request URL: {ex.RequestUrl}\"); // could be null Console.WriteLine($\"Request message: {ex.RequestBody}\"); // could be null Console.WriteLine($\"Request response: {ex.Response}\"); // could be null Console.WriteLine($\"Server Reason Phrase: {ex.ServerReasonPhrase}\"); // could be null } If you want to catch a specific exception, the usage would look like this: try { var response = await client.Module.RequestAsync(Parameters...); } catch (TraktMovieNotFoundException ex) // Specific exception, which is thrown when a movie is not found { // Do something with the exception } catch (TraktException ex) // Base exception type { // Do something with the exception } Disabling Exceptions If you do not want to use exceptions, you can disable this behaviour with the following setting: client.Configuration.ThrowResponseExceptions = false; You then need to check whether a response is valid like this: var response = await client.Module.RequestAsync(Parameters...); if (response) // Or response.IsSuccess { // Do something with the response. } else { // Get a possible thrown exception var exception = response.Exception; } Argument Exceptions Other exceptions, you need to be aware of, are ArgumentNullException, ArgumentException and occasionally ArgumentOutOfRangeException. As the names suggest, they are only thrown, if you pass invalid arguments to the library methods. Note Trakt.NET checks all input parameters before any actual Trakt API request is made. Note Argument... exceptions are not affected by the setting client.Configuration.ThrowResponseExceptions. This means, that you will get one of the Argument... exceptions before a TraktException. Not Found Exceptions For every possible Trakt media object (show, movie, person, etc.), there is also an exception, if the object was not found, e.g. a call to using TraktNet.Objects.Get.Shows; using TraktNet.Responses; TraktResponse<ITraktShow> show = client.Shows.GetShowAsync(\"unknown-slug\"); could throw a TraktShowNotFoundException. Each TraktCommentNotFoundException TraktEpisodeNotFoundException TraktListNotFoundException TraktMovieNotFoundException TraktPersonNotFoundException TraktSeasonNotFoundException TraktShowNotFoundException has a property ObjectId, that tells you the id, which was not found. For more information on responses see the Responses Section. Rate Limit Exception Rate limits can be catched with the exception TraktRateLimitException. This exception provides detailed information about the rate limit. Failed VIP Validation Exception The Trakt.tv API provides requests which can only be used by VIP users. If a non VIP user tries to use such a request, a TraktFailedVIPValidationException is thrown. This exception provides a UpgradeURL where the user can sign up for Trakt.tv VIP. User Account Limit Exception A TraktUserAccountLimitException is thrown when a user has exceeded their account limits, such as list counts, item counts, etc. Locked User Account Exception If an OAuth authorized user has a locked user account, a TraktLockedUserAccountException is thrown. This means that the user should contact the Trakt support. Request Validation Exception Any argument, such as movie or show ids, given to a module method is validated before actually executing the request. If for example an id is not valid (contains spaces, etc.) a TraktRequestValidationException is thrown. Post Validation Exception For post requests where data is sent to the Trakt.tv API a TraktPostValidationException might be thrown, if the post object contains invalid data. E.g. a required property is null."
  },
  "docs/essentials/nullhandling.html": {
    "href": "docs/essentials/nullhandling.html",
    "title": "Null Handling | Trakt.NET",
    "keywords": "Null Handling The Trakt API might not return all data, especially not when you are using the extended info. Therefore, you should check object properties, if they are null or not. using TraktNet.Objects.Get.Shows; using TraktNet.Parameters; using TraktNet.Responses; TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(\"game-of-thrones\"); string showOverview = showResponse.Value.Overview; // will be null // with extended info TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(\"game-of-thrones\", new TraktExtendedInfo { Full = true }); string showOverView = showResponse.Value.Overview; // could be null"
  },
  "docs/essentials/paging.html": {
    "href": "docs/essentials/paging.html",
    "title": "Paging | Trakt.NET",
    "keywords": "Paging TraktPagedResponse<TContentType>s have a builtin feature for navigating through pages. A paged response has two properties which return whether there are additional pages available. HasPreviousPage: Returns whether you can navigate to a previous page. HasNextPage: Returns whether you can navigate to a next page. For navigating through pages, a paged response provides the following methods: GetPreviousPageAsync(): Navigate to a previous page, if there is one. Otherwise, it just returns the current page. GetNextPageAsync(): Navigate to a next page, if there is one. Otherwise, it just returns the current page. These methods use the same item count per page as the original paged response. Example Get all trending shows using TraktNet; using TraktNet.Exceptions; using TraktNet.Objects.Get.Shows; using TraktNet.Parameters; using TraktNet.Responses; var client = new TraktClient(\"client-id\"); try { const int itemCountPerPage = 40; var limitItemsPerPage = new TraktPagedParameters { Limit = itemCountPerPage }; // Get the first page with 40 items TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync(pagedParameters: limitItemsPerPage); // Do something with the first page of trending shows response... // Basically, load all pages of trending shows. // Each page with 40 items. while (trendingShowsResponse.HasNextPage) { // Get the next page trendingShowsResponse = await trendingShowsResponse.GetNextPageAsync(); // Do something with the current page of trending shows response... } } catch (TraktException ex) { // ... } Get the first 10 pages of trending shows backwards using TraktNet; using TraktNet.Exceptions; using TraktNet.Objects.Get.Shows; using TraktNet.Parameters; using TraktNet.Responses; var client = new TraktClient(\"client-id\"); try { const int itemCountPerPage = 40; var limitItemsPerPage = new TraktPagedParameters { Page = 10, // Start with 10th page Limit = itemCountPerPage }; // Get the 10th page with 40 items TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync(pagedParameters: limitItemsPerPage); // Do something with the 10th page of trending shows response... // Load all previous pages of trending shows. // Each page with 40 items. while (trendingShowsResponse.HasPreviousPage) { // Get the previous page trendingShowsResponse = await trendingShowsResponse.GetPreviousPageAsync(); // Do something with the current page of trending shows response... } } catch (TraktException ex) { // ... }"
  },
  "docs/essentials/responses.html": {
    "href": "docs/essentials/responses.html",
    "title": "Responses | Trakt.NET",
    "keywords": "Responses Trakt.NET has a response system with four different response types. Response Types TraktNoContentResponse for Trakt responses without content (HTTP Code 20x) TraktResponse<TContentType> for Trakt responses that return only a single object, where TContentType is the type of that object TraktListResponse<TContentType> for Trakt responses that return a list of objects, where TContentType is the type of a list item object TraktPagedResponse<TContentType> for Trakt responses that return a list and pagination headers, where TContentType is the type of a list item object Response Properties bool IsSuccess, indicating whether a request was successful Exception Exception, containing the exception which was thrown on failure (only assigned, if client.Configuration.ThrowResponseExceptions is set to false TraktResponse<TContentType>, TraktListResponse<TContentType> and TraktPagedResponse<TContentType> also have the following properties: bool HasValue, indicating whether a response contains a value (single object or list of objects) TContentType Value, the actual response value (single object for TraktResponse<TContentType> and IList<TContentType> for TraktListResponse<TContentType> and TraktPagedResponse<TContentType>) Exceptions By default, the library throws an exception, when a request fails. This means, you should wrap each request in a try-catch-block. You can disable this behaviour. Response Headers Every response type, except TraktNoContentResponse, contains response headers returned by the Trakt API. Following headers are available in TraktResponse<TContentType>, TraktListResponse<TContentType> and TraktPagedResponse<TContentType>: Which of the following headers is set depends on the request. TraktSortBy SortBy TraktSortHow SortHow TraktSortBy AppliedSortBy TraktSortHow AppliedSortHow DateTime? StartDate DateTime? EndDate int? TrendingUserCount uint? Page uint? Limit bool? IsPrivateUser int? ItemId string ItemType string RateLimit int? RetryAfter string UpgradeURL bool? IsVIPUser int? AccountLimit Following headers are only available in TraktPagedResponse<TContentType>: int? ItemCount int? PageCount Example Usage Exceptions Enabled using TraktNet; using TraktNet.Exceptions; using TraktNet.Objects.Get.Shows; using TraktNet.Parameters; using TraktNet.Responses; var client = new TraktClient(\"client-id\"); try { TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync(new TraktExtendedInfo() { Full = true }, 1, 10); // implicit conversion to bool // check for success not really necessary since exceptions are enabled if (trendingShowsResponse) // IsSuccess == true && HasValue == true { Console.WriteLine($\"Current Page: {trendingShowsResponse.Page}\"); Console.WriteLine($\"Current Page Limit: {trendingShowsResponse.Limit}\"); Console.WriteLine($\"Page Count: {trendingShowsResponse.PageCount}\"); Console.WriteLine($\"Total Item Count: {trendingShowsResponse.ItemCount}\"); // TraktPagedResponse and TraktListResponse implement IEnumerable<TContentType> foreach (ITraktTrendingShow trendingShow in trendingShowsResponse) { Console.WriteLine($\"Show: {trendingShow.Title} / Watchers: {trendingShow.Watchers}\"); } List<ITraktTrendingShow> trendingShows = trendingShowsResponse; // implicit conversion } // Built in paging for paged responses if (trendingShowsResponse.HasNextPage) { trendingShowsResponse = await trendingShowsResponse.GetNextPageAsync(); // Get back to previous page trendingShowsResponse = await trendingShowsResponse.GetPreviousPageAsync(); } } catch (TraktException ex) { // ... } catch (Exception ex) { // ... } Exceptions Disabled using TraktNet; using TraktNet.Objects.Get.Shows; using TraktNet.Parameters; using TraktNet.Responses; var client = new TraktClient(\"client-id\"); client.Configuration.ThrowResponseExceptions = false; TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync(new TraktExtendedInfo() { Full = true }, 1, 10); // implicit conversion to bool if (trendingShowsResponse) // IsSuccess == true && HasValue == true { Console.WriteLine($\"Current Page: {trendingShowsResponse.Page}\"); Console.WriteLine($\"Current Page Limit: {trendingShowsResponse.Limit}\"); Console.WriteLine($\"Page Count: {trendingShowsResponse.PageCount}\"); Console.WriteLine($\"Total Item Count: {trendingShowsResponse.ItemCount}\"); // TraktPagedResponse and TraktListResponse implement IEnumerable<TContentType> foreach (ITraktTrendingShow trendingShow in trendingShowsResponse) { Console.WriteLine($\"Show: {trendingShow.Title} / Watchers: {trendingShow.Watchers}\"); } List<ITraktTrendingShow> trendingShows = trendingShowsResponse; // implicit conversion // Built in paging for paged responses if (trendingShowsResponse.HasNextPage) { trendingShowsResponse = await trendingShowsResponse.GetNextPageAsync(); if (trendingShowsResponse) { // Get back to previous page trendingShowsResponse = await trendingShowsResponse.GetPreviousPageAsync(); } } } else { // on failure, // get the exception from the response Console.WriteLine(trendingShowsResponse.Exception); }"
  },
  "docs/getstarted/basicsetup.html": {
    "href": "docs/getstarted/basicsetup.html",
    "title": "Basic Setup | Trakt.NET",
    "keywords": "Basic Setup The main entry point to the library is a TraktClient instance. There are three different ways to create a new instance of it and which way to choose depends on how you want to use the library. Key Points Client-ID is always necessary Client-Secret is optional, but necessary for authentication Authentication is the way to get an OAuth authorization Authorization is mostly necessary for user- and sync-related requests Note All library methods have documented, if OAuth authorization is necessary or optional. Client-ID If you just want to use requests, which do not require the OAuth authorization of Trakt.tv, you will only have to provide the Client-ID of your Trakt application: using TraktNet; var client = new TraktClient(\"Your Trakt Client Id\"); // or var client = new TraktClient { ClientId = \"Your Trakt Client Id\" }; The following snippet shows the status flags, when the client's Client-Secret is not set. Console.WriteLine($\"Requests without Authorization possible: {client.IsValidForUseWithoutAuthorization}\"); Console.WriteLine($\"Authentication possible: {client.IsValidForAuthenticationProcess}\"); Console.WriteLine($\"Requests with Authorization possible: {client.IsValidForUseWithAuthorization}\"); Output: Requests without Authorization possible: true Authentication possible: false Requests with Authorization possible: false Client-ID and Client-Secret If you also want to authenticate your application users, the Client-Secret of your Trakt application will also be needed additionally: using TraktNet; var client = new TraktClient(\"Your Trakt Client Id\", \"Your Trakt Client Secret\"); // or var client = new TraktClient { ClientId = \"Your Trakt Client Id\", ClientSecret = \"Your Trakt Client Secret\" }; The following snippet shows the status flags, when the client's Client-ID and Client-Secret are both set. Console.WriteLine($\"Requests without Authorization possible: {client.IsValidForUseWithoutAuthorization}\"); Console.WriteLine($\"Authentication possible: {client.IsValidForAuthenticationProcess}\"); Console.WriteLine($\"Requests with Authorization possible: {client.IsValidForUseWithAuthorization}\"); Output: Requests without Authorization possible: true Authentication possible: true Requests with Authorization possible: false Client-ID, Client-Secret and Authorization If you want to use requests, which do require OAuth authorization, you will also have to provide an OAuth access token. Read the Authentication section on how to get a new Trakt.tv OAuth authorization, including access token and refresh token, or provide an existing access token: using TraktNet; var client = new TraktClient(\"Your Trakt Client Id\", \"Your Trakt Client Secret\") { Authorization = TraktAuthorization.CreateWith(\"An existing access token\") }; // or var client = new TraktClient { ClientId = \"Your Trakt Client Id\", ClientSecret = \"Your Trakt Client Secret\", Authorization = TraktAuthorization.CreateWith(\"An existing access token\") }; The following snippet shows the status flags, when the client's Client-ID, Client-Secret and an authorization token are set. Console.WriteLine($\"Requests without Authorization possible: {client.IsValidForUseWithoutAuthorization}\"); Console.WriteLine($\"Authentication possible: {client.IsValidForAuthenticationProcess}\"); Console.WriteLine($\"Requests with Authorization possible: {client.IsValidForUseWithAuthorization}\"); Output: Requests without Authorization possible: true Authentication possible: true Requests with Authorization possible: true Note A Client-ID for your Trakt application will always be needed."
  },
  "docs/getstarted/configuration.html": {
    "href": "docs/getstarted/configuration.html",
    "title": "Configuration | Trakt.NET",
    "keywords": "Configuration The Trakt.NET library has some default behaviour, which you can configure to your needs. using TraktNet; var client = new TraktClient(\"ClientID\", \"ClientSecret\"); Sandbox Environment The library allows you to use the sandbox environment of the Trakt API, which is disabled by default. You can enable the usage of the sandbox environment with the following setting: client.Configuration.UseSandboxEnvironment = true; Important You can't use your Production-Client-ID and -Client-Secret in the Sandbox-Environment. For the Sandbox-Environment, you need to create an app on Staging Trakt.tv. Forced Authorization Some API requests support optional OAuth authorization. In most cases, this means that you can get more information if you provide an OAuth authorization. By default, the library calls these requests without OAuth authorization. But you can enforce the library to call these requests with OAuth authorization by enabling the following setting: client.Configuration.ForceAuthorization = true; Response Exceptions By default, the library throws exceptions when a request fails. See Exception Handling section for more information. You can toggle this behaviour with the following setting: client.Configuration.ThrowResponseExceptions = true; API Version The following property determines the used Trakt API version. The default value is currently 2. Console.WriteLine($\"API Version: {client.Configuration.ApiVersion}\");"
  },
  "docs/getstarted/installation.html": {
    "href": "docs/getstarted/installation.html",
    "title": "Installation | Trakt.NET",
    "keywords": "Installation The recommended way to install Trakt.NET is to use NuGet, but you can also directly link to a Trakt.NET.dll file or build the library from source code. NuGet Navigate to your project’s directory and install Trakt.NET with: dotnet add package Trakt.NET Or open your project / solution in Visual Studio and use the Visual Studio Package Management and search for \"Trakt.NET\". Build from Source You have also the option to build the library directly from source."
  },
  "docs/references/building.html": {
    "href": "docs/references/building.html",
    "title": "Build from Source | Trakt.NET",
    "keywords": "Build from Source Prerequisites Install Visual Studio 2022 (Community or higher) or Visual Studio Code and make sure you have the latest updates. Clone To clone and build it locally run the following git commands: > git clone https://github.com/henrikfroehling/Trakt.NET.git > cd Trakt.NET Build Run following commands in the projects root directory to build the complete solution: dotnet build Source/Trakt.NET.sln -c [Debug|Release] Running the tests: dotnet test Source/Trakt.NET.sln -c [Debug|Release] --no-build --no-restore Alternatively you can also open the solution <PROJECT_ROOT>/Source/Trakt.NET.sln in Visual Studio."
  },
  "docs/references/modules.html": {
    "href": "docs/references/modules.html",
    "title": "Modules | Trakt.NET",
    "keywords": "Modules The modules in the library represent each a section in the official Trakt API documentation. You can not create a new instance of any module. The only way to access a module is through a TraktClient instance. Authentication This module contains all methods, that are described in Trakt API Authentication - OAuth and in Trakt API Authentication - Devices sections. Access this module via TraktClient.Authentication. Calendar This module contains all methods, that are described in the Trakt API Calendar section. Access this module via TraktClient.Calendar. Certifications This module contains all methods, that are described in the Trakt API Certifications section. Access this module via TraktClient.Certifications. Checkins This module contains all methods, that are described in the Trakt API Checkin section. Access this module via TraktClient.Checkins. Comments This module contains all methods, that are described in the Trakt API Comments section. Access this module via TraktClient.Comments. Countries This module contains all methods, that are described in the Trakt API Countries section. Access this module via TraktClient.Countries. Genres This module contains all methods, that are described in the Trakt API Genres section. Access this module via TraktClient.Genres. Languages This module contains all methods, that are described in the Trakt API Languages section. Access this module via TraktClient.Languages. Lists This module contains all methods, that are described in the Trakt API Lists section. Access this module via TraktClient.Lists. Movies This module contains all methods, that are described in the Trakt API Movies section. Access this module via TraktClient.Movies. Networks This module contains all methods, that are described in the Trakt API Networks section. Access this module via TraktClient.Networks. Notes This module contains all methods, that are described in the Trakt API Notes section. Access this module via TraktClient.Notes. People This module contains all methods, that are described in the Trakt API People section. Access this module via TraktClient.People. Recommendations This module contains all methods, that are described in the Trakt API Recommendations section. Access this module via TraktClient.Recommendations. Scrobble This module contains all methods, that are described in the Trakt API Scrobble section. Access this module via TraktClient.Scrobble. Search This module contains all methods, that are described in the Trakt API Search section. Access this module via TraktClient.Search. Shows This module contains all methods, that are described in the Trakt API Shows section. Access this module via TraktClient.Shows. Seasons This module contains all methods, that are described in the Trakt API Seasons section. Access this module via TraktClient.Seasons. Episodes This module contains all methods, that are described in the Trakt API Episodes section. Access this module via TraktClient.Episodes. Sync This module contains all methods, that are described in the Trakt API Sync section. Access this module via TraktClient.Sync. Users This module contains all methods, that are described in the Trakt API Users section. Access this module via TraktClient.Users."
  },
  "docs/references/namespaces.html": {
    "href": "docs/references/namespaces.html",
    "title": "Namespaces | Trakt.NET",
    "keywords": "Namespaces This is an overview of all namespaces in the Trakt.NET library. Namespace Contents TraktNet Global namespace containing the TraktClient . TraktNet.Enums Contains all enumerations. TraktNet.Exceptions Contains all exceptions. TraktNet.Extensions Contains extension methods for DateTime, string, IEnumerables and IAsyncEnumerables. TraktNet.Modules Contains all library modules for accessing the Trakt API endpoints. TraktNet.Objects.Authentication Contains all classes, which represent JSON objects, that are mainly used by for authentication and authorization. TraktNet.Objects.Basic Contains all classes, which represent JSON objects, that are commonly used. TraktNet.Objects.Get.Calendars Contains all classes, which represent JSON objects, that are related to calendar methods. TraktNet.Objects.Get.Collections Contains all classes, which represent JSON objects, that are related to collections. TraktNet.Objects.Get.Episodes Contains all classes, which represent JSON objects, that are related to episodes. TraktNet.Objects.Get.History Contains all classes, which represent JSON objects, that are related to history methods. TraktNet.Objects.Get.Lists Contains all classes, which represent JSON objects, that are related to lists. TraktNet.Objects.Get.Movies Contains all classes, which represent JSON objects, that are related to movies. TraktNet.Objects.Get.People Contains all classes, which represent JSON objects, that are related to people. TraktNet.Objects.Get.Ratings Contains all classes, which represent JSON objects, that are related to ratings. TraktNet.Objects.Get.Recommendations Contains all classes, which represent JSON objects, that are related to recommendations. TraktNet.Objects.Get.Seasons Contains all classes, which represent JSON objects, that are related to seasons. TraktNet.Objects.Get.Shows Contains all classes, which represent JSON objects, that are returned by the Trakt API. TraktNet.Objects.Get.Activities TraktNet.Objects.Get.Playback Contains all classes, which represent JSON objects, that are related to activities and playback in the sync module. TraktNet.Objects.Get.Users Contains all classes, which represent JSON objects, that are related to users. TraktNet.Objects.Get.Watched Contains all classes, which represent JSON objects, that are related to watched shows and movies. TraktNet.Objects.Get.Watchlist Contains all classes, which represent JSON objects, that are related to watchlist methods. TraktNet.Objects.Post.Basic Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are commonly used. TraktNet.Objects.Post.Checkins Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to checkin requests. TraktNet.Objects.Post.Comments Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to comment requests. TraktNet.Objects.Post.Responses Contains commonly used response objects used by post requests. TraktNet.Objects.Post.Scrobbles Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to scrobble requests. TraktNet.Objects.Post.Shows Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to show watched requests. TraktNet.Objects.Post.Syncs.Collection, TraktNet.Objects.Post.Syncs.Favorites, TraktNet.Objects.Post.Syncs.History, TraktNet.Objects.Post.Syncs.Ratings, TraktNet.Objects.Post.Syncs.Responses, TraktNet.Objects.Post.Syncs.Watchlist Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to sync requests. TraktNet.Objects.Post.Users Contains all classes, which represent JSON objects, that can be sent to the Trakt API, that are related to user requests. TraktNet.Parameters Contains request parameters like TraktExtendedInfo, TraktPagedParameters and filters. TraktNet.PostBuilder Contains helper classes for building post objects, which are mainly used in the sync and the users module. TraktNet.Responses Contains response classes like TraktResponse, TraktListResponse and TraktPagedResponse. TraktNet.Services Contains Serialization-Service. TraktNet.Utils Contains the utility classes Pair and Range."
  },
  "docs/references/requestparameters.html": {
    "href": "docs/references/requestparameters.html",
    "title": "Request Parameters | Trakt.NET",
    "keywords": "Request Parameters Many methods in the modules accept extended info specifications, filters and / or collections with multiple object ids. Extended Info A TraktExtendedInfo instance can be created to specify, how much data should be retrieved for a request. It is possible to create just one instance of it and use it for each request or to create a new instance of it for every new request. To create an instance of TraktExtendedInfo, there are basically two ways. using TraktNet.Parameters; var extendedInfo = new TraktExtendedInfo { Full = true }; // or var extendedInfo = new TraktExtendedInfo().SetFull(); TraktExtendedInfo has several options you can set and also reset. Option Set Reset Limitations Metadata SetMetadata() or Metadata = true ResetMetadata() or Metadata = false Works only with TraktClient.Sync.GetCollectionMoviesAsync(), TraktClient.Sync.GetCollectionShowsAsync(), TraktClient.Users.GetCollectionMoviesAsync() and TraktClient.Users.GetCollectionShowsAsync(). Will be ignored otherwise. Full SetFull() or Full = true ResetFull() or Full = false None NoSeasons SetNoSeasons() or NoSeasons = true ResetNoSeasons() or NoSeasons = false Works only with TraktClient.Sync.GetWatchedMoviesAsync() and TraktClient.Users.GetWatchedShowsAsync(). Will be ignored otherwise. Episodes SetEpisodes() or Episodes = true ResetEpisodes() or Episodes = false Works only with TraktClient.Seasons.GetAllSeasonsAsync(). Will be ignored otherwise. GuestStars SetGuestStars() or GuestStars = true ResetGuestStars() or GuestStars = false Works only with TraktNet.Modules.TraktMoviesModule.GetMoviePeopleAsync(), TraktClient.Shows.GetShowPeopleAsync(), TraktClient.Seasons.GetSeasonPeopleAsync() and TraktClient.Episodes.GetEpisodePeopleAsync(). Will be ignored otherwise. Comments SetComments() or Comments = true ResetComments() or Comments = false Works only with requests which might return comments. Will be ignored otherwise. Vip SetVip() or Vip = true ResetVip() or Vip = false Works only with TraktNet.Modules.TraktUsersModule.GetUserProfileAsync() and TraktNet.Modules.TraktUsersModule.GetLikesAsync(). Will be ignored otherwise. With Reset<Option>() you can disable a single option and with Reset() you can disable all options. TraktExtendedInfo has a fluent interface which allows you to chain its method calls like in the following example. using TraktNet.Parameters; var extendedInfo = new TraktExtendedInfo().SetMetadata().SetFull().SetNoSeasons().SetEpisodes().Reset().SetNoSeasons().Reset(); Filters There are four different filters you can use. ITraktCalendarFilter for all methods in the TraktClient.Calendar module ITraktMovieFilter for some methods in the TraktClient.Movies module ITraktShowFilter for some methods in the TraktClient.Shows module ITraktSearcFilter for the GetTextQueryResultsAsync() method in the TraktClient.Search module For each filter exists a builder to create an instance of it. Filter Builder References ITraktCalendarFilter TraktFilter.NewCalendarFilter().Build() NewCalendarFilter(), .Build() ITraktMovieFilter TraktFilter.NewMovieFilter().Build() NewMovieFilter(), .Build() ITraktShowFilter TraktFilter.NewShowFilter().Build() NewShowFilter(), .Build() ITraktSearcFilter TraktFilter.NewSearchFilter().Build() NewSearchFilter(), .Build() Each filter is immutable. If you want to change one, just create a new instance. Filters are only creatable through their builder methods. In the following example, a ITraktCalendarFilter is created. using TraktNet.Parameters; ITraktCalendarFilter calendarFilter = TraktFilter.NewCalenderFilter() .WithQuery(\"calendar movie\") .WithYears(2020, 2022) .WithGenres(\"drama\", \"fantasy\") .WithLanguages(\"en\", \"de\") .WithCountries(\"us\") .WithRuntimes(30, 60) .WithRatings(80, 95) .Build(); Multiple Ids The methods TraktClient.Movies.GetMoviesStreamAsync() TraktClient.Shows.GetShowsStreamAsync() TraktClient.Seasons.GetSeasonsStreamAsync() TraktClient.Episodes.GetEpisodesStreamAsync() TraktClient.People.GetPersonsStreamAsync() TraktClient.Users.GetPersonalListsStreamAsync() TraktClient.Comments.GetCommentsStreamAsync() require each a collection of mutliple ids of objects, which you want to retrieve, as an argument. Method Collection TraktClient.Movies.GetMoviesStreamAsync() TraktMultipleObjectsQueryParams TraktClient.Shows.GetShowsStreamAsync() TraktMultipleObjectsQueryParams TraktClient.Seasons.GetSeasonsStreamAsync() TraktMultipleSeasonsQueryParams TraktClient.Episodes.GetEpisodesStreamAsync() TraktMultipleEpisodesQueryParams TraktClient.People.GetPersonsStreamAsync() TraktMultipleObjectsQueryParams TraktClient.Users.GetPersonalListsStreamAsync() TraktMultipleUserListsQueryParams TraktClient.Comments.GetCommentsStreamAsync() TraktMultipleCommentsQueryParams TraktMultipleObjectsQueryParams using TraktNet.Modules; using TraktNet.Parameters; var queryParams = new TraktMultipleObjectsQueryParams { // { id[, extended info] } \"id-1\", { \"id-2\", new TraktExtendedInfo { Full = true } }, \"id-3\" }; // or var queryParams = new TraktMultipleObjectsQueryParams(); queryParams.Add(\"id-1\"); queryParams.Add(\"id-2\", new TraktExtendedInfo { Full = true }); queryParams.Add(\"id-3\"); TraktMultipleSeasonsQueryParams using TraktNet.Modules; using TraktNet.Parameters; var queryParams = new TraktMultipleSeasonsQueryParams { // { show-id, seasonnumber[, extended info] } { \"show-id-1\", 1 }, { \"show-id-2\", 3, new TraktExtendedInfo { Full = true } }, { \"show-id-3\", 2 } }; // or var queryParams = new TraktMultipleSeasonsQueryParams(); queryParams.Add(\"show-id-1\", 1); queryParams.Add(\"show-id-2\", 3, new TraktExtendedInfo { Full = true }); queryParams.Add(\"show-id-3\", 2); TraktMultipleEpisodesQueryParams using TraktNet.Modules; using TraktNet.Parameters; var queryParams = new TraktMultipleEpisodesQueryParams { // { show-id, seasonnumber, episodenumber[, extended info] } { \"show-id-1\", 1, 1 }, { \"show-id-2\", 3, 5, new TraktExtendedInfo { Full = true } }, { \"show-id-3\", 2, 1 } }; // or var queryParams = new TraktMultipleEpisodesQueryParams(); queryParams.Add(\"show-id-1\", 1, 1); queryParams.Add(\"show-id-2\", 3, 5, new TraktExtendedInfo { Full = true }); queryParams.Add(\"show-id-3\", 2, 1); TraktMultipleUserListsQueryParams using TraktNet.Modules; using TraktNet.Parameters; var queryParams = new TraktMultipleUserListsQueryParams { // { username, list-id } { \"username-1\", \"list-id-1\" }, { \"username-2\", \"list-id-3\" }, { \"username-3\", \"list-id-5\" } }; // or var queryParams = new TraktMultipleUserListsQueryParams(); queryParams.Add(\"username-1\", \"list-id-1\"); queryParams.Add(\"username-2\", \"list-id-3\"); queryParams.Add(\"username-3\", \"list-id-5\"); TraktMultipleCommentsQueryParams using TraktNet.Modules; using TraktNet.Parameters; var queryParams = new TraktMultipleCommentsQueryParams { // { comment-id[, extended info] } 1, { 2, new TraktExtendedInfo { Full = true } }, 3 }; // or var queryParams = new TraktMultipleCommentsQueryParams(); queryParams.Add(1); queryParams.Add(2, new TraktExtendedInfo { Full = true }); queryParams.Add(3); Post Objects (Post Builder) There are several methods which require a post object. These are mostly required in the following modules: TraktClient.Checkins TraktClient.Comments TraktClient.Scrobble TraktClient.Sync TraktClient.Users Here is an overview of the post objects, its modules and its builder methods: Post Object Module Builder Where ITraktSyncCollectionPost TraktClient.Sync ITraktSyncCollectionPostBuilder TraktPost.NewSyncCollectionPost() ITraktSyncCollectionRemovePost TraktClient.Sync ITraktSyncCollectionRemovePostBuilder TraktPost.NewSyncCollectionRemovePost() ITraktSyncFavoritesPost TraktClient.Sync ITraktSyncFavoritesPostBuilder TraktPost.NewSyncFavoritesPost() ITraktSyncFavoritesRemovePost TraktClient.Sync ITraktSyncFavoritesRemovePostBuilder TraktPost.NewSyncFavoritesRemovePost() ITraktSyncHistoryPost TraktClient.Sync ITraktSyncHistoryPostBuilder TraktPost.NewSyncHistoryPost() ITraktSyncHistoryRemovePost TraktClient.Sync ITraktSyncHistoryRemovePostBuilder TraktPost.NewSyncHistoryRemovePost() ITraktSyncRatingsPost TraktClient.Sync ITraktSyncRatingsPostBuilder TraktPost.NewSyncRatingsPost() ITraktSyncRatingsRemovePost TraktClient.Sync ITraktSyncRatingsRemovePostBuilder TraktPost.NewSyncRatingsRemovePost() ITraktSyncWatchlistPost TraktClient.Sync ITraktSyncWatchlistPostBuilder TraktPost.NewSyncWatchlistPost() ITraktSyncWatchlistRemovePost TraktClient.Sync ITraktSyncWatchlistRemovePostBuilder TraktPost.NewSyncWatchlistRemovePost() ITraktUserHiddenItemsPost TraktClient.Users ITraktUserHiddenItemsPostBuilder TraktPost.NewUserHiddenItemsPost() ITraktUserHiddenItemsRemovePost TraktClient.Users ITraktUserHiddenItemsRemovePostBuilder TraktPost.NewUserHiddenItemsRemovePost() ITraktUserPersonalListItemsPost TraktClient.Users ITraktUserPersonalListItemsPostBuilder TraktPost.NewUserPersonalListItemsPost() ITraktUserPersonalListItemsRemovePost TraktClient.Users ITraktUserPersonalListItemsRemovePostBuilder TraktPost.NewUserPersonalListItemsRemovePost() ITraktMovieCommentPost TraktClient.Comments ITraktMovieCommentPostBuilder TraktPost.NewMovieCommentPost() ITraktShowCommentPost TraktClient.Comments ITraktShowCommentPostBuilder TraktPost.NewShowCommentPost() ITraktSeasonCommentPost TraktClient.Comments ITraktSeasonCommentPostBuilder TraktPost.NewSeasonCommentPost() ITraktEpisodeCommentPost TraktClient.Comments ITraktEpisodeCommentPostBuilder TraktPost.NewEpisodeCommentPost() ITraktListCommentPost TraktClient.Comments ITraktListCommentPostBuilder TraktPost.NewListCommentPost() ITraktMovieCheckinPost TraktClient.Checkins ITraktMovieCheckinPostBuilder TraktPost.NewMovieCheckinPost() ITraktEpisodeCheckinPost TraktClient.Checkins ITraktEpisodeCheckinPostBuilder TraktPost.NewEpisodeCheckinPost() ITraktMovieScrobblePost TraktClient.Scrobble ITraktMovieScrobblePostBuilder TraktPost.NewMovieScrobblePost() ITraktEpisodeScrobblePost TraktClient.Scrobble ITraktEpisodeScrobblePostBuilder TraktPost.NewEpisodeScrobblePost() You do not need to use the builder methods for creating instances of post objects. It is also possible to just create an instance, like this: ITraktSyncFavoritesPost favoritesPost = new TraktSyncFavoritesPost(); But it is recommended to use the builder methods. They check the added values for validity while creating an instance. The following example creates an ITraktSyncFavoritesPost instance which is required for the AddFavoriteItemsAsync() method in the TraktClient.Sync module. // Get shows and movies for this example. TraktPagedResponse<ITraktTrendingMovie> trendingMovies = await client.Movies.GetTrendingMoviesAsync(); TraktPagedResponse<ITraktTrendingShow> trendingShows = await client.Shows.GetTrendingShowsAsync(); // Create the post object with the queried shows and movies. ITraktSyncFavoritesPost favoritesPost = TraktPost.NewSyncFavoritesPost() .WithMovies(trendingMovies) .WithShows(trendingShows) .Build(); // Use the post object. TraktResponse<ITraktSyncFavoritesPostResponse> response = await client.Sync.AddFavoriteItemsAsync(favoritesPost);"
  },
  "docs/utilities/filterbuilder.html": {
    "href": "docs/utilities/filterbuilder.html",
    "title": "Filter Builder | Trakt.NET",
    "keywords": "Filter Builder Many requests provide the possibility to filter the results. Trakt.NET makes this easy by providing some helper classes which are used to create such filters. Filters are created with builder methods provided by TraktFilter. Filters are only creatable through their builder methods. Each filter instance is immutable. If you want to change one, just create a new instance. Example In this example a filter is used to get a filtered response of trending movies. using TraktNet; using TraktNet.Objects.Get.Movies; using TraktNet.Parameters; using TraktNet.Responses; // Create a filter. ITraktMovieFilter movieFilter = TraktFilter.NewMovieFilter() .WithYears(2020, 2022) // Only look for movies released in the years 2020, 2021 and 2022. .WithGenres(\"action\", \"fantasy\") // Only look for action and fantasy movies. .WithRuntimes(90, 120) // Each movie should have a runtime between 90 and 120 minutes. .WithRatings(80, 95) // Each movie should have a rating between 80 and 95. .Build(); // Create the filter with the given parameters. // Get trending movies with the specified filter. TraktPagedResponse<ITraktTrendingMovie> trendingMoviesResponse = await client.Movies.GetTrendingMoviesAsync(filter: movieFilter); An overview of all filters can be found in the references section."
  },
  "docs/utilities/postbuilder.html": {
    "href": "docs/utilities/postbuilder.html",
    "title": "Post Builder | Trakt.NET",
    "keywords": "Post Builder The Trakt.tv API has many requests which require the user to send data. These post objects can be filled manually with data like if you are creating a new object. But Trakt.NET also provides some helper classes for creating these post objects. Usage First, get some data which is used to add to the user's favorites. using TraktNet.Objects.Get.Movies; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; // Get some sample data. TraktPagedResponse<ITraktTrendingMovie> trendingMovies = await client.Movies.GetTrendingMoviesAsync(); TraktPagedResponse<ITraktTrendingShow> trendingShows = await client.Shows.GetTrendingShowsAsync(); Here is the approach for creating a new instance of a post object. using TraktNet.Objects.Post.Syncs.Favorites; ITraktSyncFavoritesPost favoritesPost = new TraktSyncFavoritesPost { Movies = trendingMovies.Select(movie => new TraktSyncFavoritesPostMovie { Ids = movie.Ids, Title = movie.Title, Year = movie.Year, Notes = \"A new favorite movie!\" }) .ToList<ITraktSyncFavoritesPostMovie>(), Shows = trendingShows.Select(show => new TraktSyncFavoritesPostShow { Ids = show.Ids, Title = show.Title, Year = show.Year, Notes = \"A new favorite show!\" }) .ToList<ITraktSyncFavoritesPostShow>() }; And now the same with the help of the post builder provided by the library. using TraktNet.PostBuilder; // Create the favorites post by using its post builder. ITraktSyncFavoritesPost favoritesPost = TraktPost.NewSyncFavoritesPost() // Add all movies. .WithMoviesWithNotes(trendingMovies.Select(movie => new MovieWithNotes(movie, \"A new favorite movie!\"))) // Add all shows. .WithShowsWithNotes(trendingShows.Select(show => new ShowWithNotes(show, \"A new favorite show!\"))) // Creates the favorites post with the added movies and shows. .Build(); And now actually posting the data to Trakt.tv. using TraktNet.Objects.Post.Syncs.Favorites.Responses; // Using the post in the request. // NOTE: This call needs a valid authorization, which is not set in this example. TraktResponse<ITraktSyncFavoritesPostResponse> response = await client.Sync.AddFavoriteItemsAsync(favoritesPost); An overview of all post builders can be found in the references section."
  },
  "docs/utilities/serialization.html": {
    "href": "docs/utilities/serialization.html",
    "title": "Serialization | Trakt.NET",
    "keywords": "Serialization The TraktSerializationService provides methods for serializing and deserializing Trakt.NET objects. Objects will be serialized as a JSON string. Serialize The serialized JSON string can optionally be indented by setting the parameter indentation to true. Indentation is disabled by default. Single JSON Object using System; using TraktNet; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; using TraktNet.Services; var client = new TraktClient(\"Your Trakt Client ID\"); // Get basic info about a show TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(\"the-last-of-us\"); // Serialize the show object as JSON string with indentation string showJson = await TraktSerializationService.SerializeAsync(showResponse.Value, indentation: true); Console.WriteLine(showJson); Collection of JSON Objects using System; using TraktNet; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; using TraktNet.Services; var client = new TraktClient(\"Your Trakt Client ID\"); // Get first page of trending shows TraktPagedResponse<ITraktTrendingShow> trendingShowResponse = await client.Shows.GetTrendingShowsAsync(); // Serialize the trending shows as JSON string with indentation string trendingShowsJson = await TraktSerializationService.SerializeCollectionAsync(trendingShowResponse, indentation: true); Console.WriteLine(trendingShowsJson); Deserialize Single JSON Object using TraktNet; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; using TraktNet.Services; // NOTE: Using the serialized JSON from the previous section. // Serialize a show object from a JSON string ITraktShow = await TraktSerializationService.DeserializeAsync<ITraktShow>(showJson); Collection of JSON Objects using TraktNet; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; using TraktNet.Services; // NOTE: Using the serialized JSON from the previous section. // Serialize trending shows from a JSON string IList<ITraktTrendingShow> trendingShows = await TraktSerializationService.DeserializeCollectionAsync<ITraktTrendingShow>(trendingShowsJson); // Since ITraktTrendingShow and ITraktShow share some properties, // this is also possible: IList<ITraktShow> shows = await TraktSerializationService.DeserializeCollectionAsync<ITraktShow>(trendingShowsJson);"
  },
  "docs/utilities/streams.html": {
    "href": "docs/utilities/streams.html",
    "title": "Streams | Trakt.NET",
    "keywords": "Streams Streams provide a way to get multiple single objects, like movies, shows, etc. in a \"single\" requests. \"Single\" request means that under the hood the library makes a single request for each object, but the user only has to make one library request. Each object request is stored in a collection which is then passed into the library. The library requests the data for each object from the API and returns an IAsyncEnumerable with the responses for each object. Example using TraktNet.Parameters; var extendedInfo = new TraktExtendedInfo { Full = true }; // Store the ids of each object in a collection. var parameters = new TraktMultipleObjectsQueryParams { \"game-of-thrones\", // For this show we want only the minimal information. // The following shows will have full information. { \"breaking-bad\", extendedInfo }, { \"the-last-of-us\", extendedInfo } }; // Get the responses for each show in an async stream. // NOTE: DO NOT \"await\" here. IAsyncEnumerable<TraktResponse<ITraktShow>> mutlipleShowsResponse = client.Shows.GetShowsStreamAsync(parameters); // NOTE: Instead \"await\" the loop. await foreach (TraktResponse<ITraktShow> showResponse in mutlipleShowsResponse) { // Do something with the response. } This feature depends heavily on multiple object parameters. An overview of all can be found in the references section."
  },
  "examples/auth/device-authentication.html": {
    "href": "examples/auth/device-authentication.html",
    "title": "Device Authentication | Trakt.NET",
    "keywords": "Device Authentication In this example we authenticate our Trakt.NET client with the Device Authentication method to get Trakt authorization, which is required for OAuth requests. For authentication and authorization requests the Client-ID and Client-Secret are both required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); Console.WriteLine(\"Please enter your Trakt Client-Secret:\"); string? clientSecret = Console.ReadLine(); var client = new TraktClient(clientID, clientSecret); We can now request authorization by authenticating with the Device Authentication method. The following lines show the steps which are required to get an authorization. Create a new device TraktResponse<ITraktDevice> deviceResponse = await client.Authentication.GenerateDeviceAsync(); ITraktDevice device = deviceResponse.Value; The created device has a verification URL Console.WriteLine($\"Please visit the following webpage: {device.VerificationUrl}\"); // Verification website which the user needs to visit. Secondly, the created device has a user code Console.WriteLine($\"Sign in or sign up on that webpage and enter the following code: {device.UserCode}\"); // User code needs to be entered on the verification website which the user needs to enter on the verification website. The user needs to visit the verification website and enter the user code. Console.WriteLine(\"You have to authenticate this application.\"); Console.WriteLine($\"Please visit the following webpage: {device.VerificationUrl}\"); // Verification website Console.WriteLine($\"Sign in or sign up on that webpage and enter the following code: {device.UserCode}\"); // User code needs to be entered on the verification website Poll for Authorization We poll for authorization. TraktResponse<ITraktAuthorization> authorizationResponse = await client.Authentication.PollForAuthorizationAsync(); // NOTE: We do not need to explicitly set the authorization in the client. // This is not necessary, since it's automatically set. // client.Authorization = authorizationResponse.Value; ITraktAuthorization authorization = authorizationResponse.Value; // or // ITraktAuthorization authorization = client.Authorization; if (authorization.IsValid) { Console.WriteLine(\"-------------- Authentication successful --------------\"); authorization.WriteAuthorizationInformation(); Console.WriteLine(\"-------------------------------------------------------\"); } else { Console.WriteLine(\"-------------- Authentication failed --------------\"); } The time window is a few minutes long before the polling fails. Console.WriteLine($\"Device Interval: {device.IntervalInSeconds} seconds\"); There are some additional steps in this example, which are not required for authenticating. They only show the usage in the context of this example. Refresh Authorization Refreshing an already existing authorization Console.WriteLine(\"Do you want to refresh the current authorization? [y/n]:\"); string? yesNo = Console.ReadLine(); if (yesNo != null && yesNo.Equals(\"y\", StringComparison.OrdinalIgnoreCase)) { TraktResponse<ITraktAuthorization> newAuthorizationResponse = await client.Authentication.RefreshAuthorizationAsync(); ITraktAuthorization newAuthorization = newAuthorizationResponse.Value; if (newAuthorization.IsValid) { Console.WriteLine(\"-------------- Authorization refreshed successfully --------------\"); newAuthorization.WriteAuthorizationInformation(); Console.WriteLine(\"-------------------------------------------------------\"); } else { Console.WriteLine(\"-------------- Refreshing Authorization failed --------------\"); } } Revoke Authorization Revoking an already existing authorization Console.WriteLine(\"Do you want to revoke your authorization? [y/n]:\"); yesNo = Console.ReadLine(); if (yesNo != null && yesNo.Equals(\"y\", StringComparison.OrdinalIgnoreCase)) { TraktNoContentResponse response = await client.Authentication.RevokeAuthorizationAsync(); // If no exception was thrown, revoking was successfull Console.WriteLine(\"-----------------------------------\"); Console.WriteLine(\"Authorization revoked successfully\"); Console.WriteLine(\"-----------------------------------\"); } The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/auth/DeviceAuthenticationExample.cs"
  },
  "examples/auth/oauth-authentication.html": {
    "href": "examples/auth/oauth-authentication.html",
    "title": "OAuth Authentication | Trakt.NET",
    "keywords": "OAuth Authentication In this example we authenticate our Trakt.NET client with the OAuth Authentication method to get Trakt authorization, which is required for OAuth requests. For authentication and authorization requests the Client-ID and Client-Secret are both required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); Console.WriteLine(\"Please enter your Trakt Client-Secret:\"); string? clientSecret = Console.ReadLine(); var client = new TraktClient(clientID, clientSecret); We can now request authorization by authenticating with the OAuth Authentication method. The following lines show the steps which are required to get an authorization. Create Authorization URL Create an authorization URL: string authorizationUrl = client.Authentication.CreateAuthorizationUrl(); The user needs to visit the authorization URL website Console.WriteLine(\"You have to authenticate this application.\"); Console.WriteLine(\"Please visit the following webpage:\"); Console.WriteLine($\"{authorizationUrl}\\n\"); Console.WriteLine(\"Enter the PIN code from Trakt.tv:\"); string? code = Console.ReadLine(); Get Authorization Trakt.tv returns a code which is needed to get the Trakt authorization TraktResponse<ITraktAuthorization> authorizationResponse = await client.Authentication.GetAuthorizationAsync(code); // NOTE: We do not need to explicitly set the authorization in the client. // This is not necessary, since it's automatically set. // client.Authorization = authorizationResponse.Value; ITraktAuthorization authorization = authorizationResponse.Value; // or // ITraktAuthorization authorization = client.Authorization; if (authorization.IsValid) { Console.WriteLine(\"-------------- Authentication successful --------------\"); authorization.WriteAuthorizationInformation(); Console.WriteLine(\"-------------------------------------------------------\"); } else { Console.WriteLine(\"-------------- Authentication failed --------------\"); } There are some additional steps in this example, which are not required for authenticating. They only show the usage in the context of this example. Refresh Authorization Refreshing an already existing authorization Console.WriteLine(\"Do you want to refresh the current authorization? [y/n]:\"); string? yesNo = Console.ReadLine(); if (yesNo != null && yesNo.Equals(\"y\", StringComparison.OrdinalIgnoreCase)) { TraktResponse<ITraktAuthorization> newAuthorizationResponse = await client.Authentication.RefreshAuthorizationAsync(); ITraktAuthorization newAuthorization = newAuthorizationResponse.Value; if (newAuthorization.IsValid) { Console.WriteLine(\"-------------- Authorization refreshed successfully --------------\"); newAuthorization.WriteAuthorizationInformation(); Console.WriteLine(\"-------------------------------------------------------\"); } else { Console.WriteLine(\"-------------- Refreshing Authorization failed --------------\"); } } Revoke Authorization Revoking an already existing authorization Console.WriteLine(\"Do you want to revoke your authorization? [y/n]:\"); yesNo = Console.ReadLine(); if (yesNo != null && yesNo.Equals(\"y\", StringComparison.OrdinalIgnoreCase)) { TraktNoContentResponse response = await client.Authentication.RevokeAuthorizationAsync(); // If no exception was thrown, revoking was successfull Console.WriteLine(\"-----------------------------------\"); Console.WriteLine(\"Authorization revoked successfully\"); Console.WriteLine(\"-----------------------------------\"); } The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/auth/OAuthAuthenticationExample.cs"
  },
  "examples/index.html": {
    "href": "examples/index.html",
    "title": "Trakt.NET Examples | Trakt.NET",
    "keywords": "Trakt.NET Examples This page contains examples for different Trakt.NET library features. Each example only highlights important snippets. The complete code for each example can be found at: Trakt.NET/docs/codesnippets/examples"
  },
  "examples/modules/shows/get-shows-stream.html": {
    "href": "examples/modules/shows/get-shows-stream.html",
    "title": "Get Details For Multiple Single Shows | Trakt.NET",
    "keywords": "Get Details For Multiple Single Shows In this example we get the details of multiple single shows simultaneously. Since we do not need authentication or authorization for this example, only the Client-ID is required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); var client = new TraktClient(clientID); Set the Trakt-IDs or -Slugs for the shows. Console.WriteLine(\"Enter the Trakt-Id or -Slug of Show 1:\"); string? showIdOrSlug1 = Console.ReadLine(); Console.WriteLine(\"Enter the Trakt-Id or -Slug of Show 2:\"); string? showIdOrSlug2 = Console.ReadLine(); Console.WriteLine(\"Enter the Trakt-Id or -Slug of Show 3:\"); string? showIdOrSlug3 = Console.ReadLine(); // Default fallback slugs. showIdOrSlug1 = string.IsNullOrEmpty(showIdOrSlug1) ? \"game-of-thrones\" : showIdOrSlug1; showIdOrSlug2 = string.IsNullOrEmpty(showIdOrSlug2) ? \"mr-robot\" : showIdOrSlug2; showIdOrSlug3 = string.IsNullOrEmpty(showIdOrSlug3) ? \"breaking-bad\" : showIdOrSlug3; The following lines show how we can get the details of multiple shows in one library call. We create a TraktMultipleObjectsQueryParams instance, which holds the ids of the shows. var extendedInfo = new TraktExtendedInfo { Full = true }; var parameters = new TraktMultipleObjectsQueryParams { showIdOrSlug1, // For this show we want only the minimal information. // The following shows will have full information. { showIdOrSlug2, extendedInfo }, { showIdOrSlug3, extendedInfo } }; We use the TraktMultipleObjectsQueryParams for the request. IAsyncEnumerable<TraktResponse<ITraktShow>> mutlipleShowsResponse = client.Shows.GetShowsStreamAsync(parameters); await foreach (TraktResponse<ITraktShow> showResponse in mutlipleShowsResponse) { ITraktShow show = showResponse.Value; Console.WriteLine(\"-------------------------------------------------------------------------\"); Console.WriteLine($\"Title: {show.Title}\"); Console.WriteLine($\"Year: {show.Year ?? 0}\"); ITraktShowIds ids = show.Ids; if (ids != null) { Console.WriteLine($\"Trakt-Id: {ids.Trakt}\"); Console.WriteLine($\"Slug: {ids.Slug}\"); Console.WriteLine($\"ImDB-Id: {ids.Imdb}\"); Console.WriteLine($\"TmDB-Id: {ids.Tmdb ?? 0}\"); Console.WriteLine($\"TVDB-Id: {ids.Tvdb ?? 0}\"); Console.WriteLine($\"TVRage-Id: {ids.TvRage ?? 0}\"); } Console.WriteLine($\"Overview: {show.Overview}\"); if (show.FirstAired.HasValue) { Console.WriteLine($\"First Aired (UTC): {show.FirstAired.Value}\"); } ITraktShowAirs airs = show.Airs; if (airs != null) { Console.WriteLine($\"Airs on: {airs.Day}\"); Console.WriteLine($\"Airs at: {airs.Time}\"); Console.WriteLine($\"Airs in: {airs.TimeZoneId}\"); } Console.WriteLine($\"Runtime: {show.Runtime ?? 0} Minutes\"); if (show.Genres != null) { Console.WriteLine($\"Genres: {string.Join(\", \", show.Genres)}\"); } Console.WriteLine($\"Certification: {show.Certification}\"); Console.WriteLine($\"Network: {show.Network}\"); Console.WriteLine($\"Aired Episodes: {show.AiredEpisodes ?? 0}\"); if (show.Status != null) { Console.WriteLine($\"Status: {show.Status.DisplayName}\"); } Console.WriteLine($\"Rating: {show.Rating ?? 0.0f}\"); Console.WriteLine($\"Votes: {show.Votes ?? 0}\"); Console.WriteLine($\"Country Code: {show.CountryCode}\"); Console.WriteLine($\"Language Code: {show.LanguageCode}\"); if (show.UpdatedAt.HasValue) { Console.WriteLine($\"Updated At (UTC): {show.UpdatedAt.Value}\"); } if (show.AvailableTranslationLanguageCodes != null) { Console.WriteLine($\"Available Translation Languages: {string.Join(\", \", show.AvailableTranslationLanguageCodes)}\"); } Console.WriteLine($\"Trailer: {show.Trailer}\"); Console.WriteLine($\"Homepage: {show.Homepage}\"); } The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/modules/shows/GetShowsStreamExample.cs"
  },
  "examples/modules/shows/get-single-show.html": {
    "href": "examples/modules/shows/get-single-show.html",
    "title": "Get Show Details | Trakt.NET",
    "keywords": "Get Show Details In this example we get the details of a single show. Since we do not need authentication or authorization for this example, only the Client-ID is required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); var client = new TraktClient(clientID); Set the Trakt-ID or -Slug for the show. Console.WriteLine(\"Enter the Trakt-Id or -Slug of the Show:\"); string? showIdOrSlug = Console.ReadLine(); showIdOrSlug = string.IsNullOrEmpty(showIdOrSlug) ? \"game-of-thrones\" : showIdOrSlug; // Game of Thrones as fallback The following lines show how to get minimal information about a show. TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(showIdOrSlug); ITraktShow show = showResponse.Value; Console.WriteLine($\"Title: {show.Title}\"); Console.WriteLine($\"Year: {show.Year ?? 0}\"); ITraktShowIds ids = show.Ids; if (ids != null) { Console.WriteLine($\"Trakt-Id: {ids.Trakt}\"); Console.WriteLine($\"Slug: {ids.Slug}\"); Console.WriteLine($\"ImDB-Id: {ids.Imdb}\"); Console.WriteLine($\"TmDB-Id: {ids.Tmdb ?? 0}\"); Console.WriteLine($\"TVDB-Id: {ids.Tvdb ?? 0}\"); Console.WriteLine($\"TVRage-Id: {ids.TvRage ?? 0}\"); } The following lines show how to get full information about a show. The only difference to the previous example is the new TraktExtendedInfo().SetFull() in line 10. TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(showIdOrSlug, new TraktExtendedInfo().SetFull()); ITraktShow show = showResponse.Value; Console.WriteLine($\"Title: {show.Title}\"); Console.WriteLine($\"Year: {show.Year ?? 0}\"); ITraktShowIds ids = show.Ids; if (ids != null) { Console.WriteLine($\"Trakt-Id: {ids.Trakt}\"); Console.WriteLine($\"Slug: {ids.Slug}\"); Console.WriteLine($\"ImDB-Id: {ids.Imdb}\"); Console.WriteLine($\"TmDB-Id: {ids.Tmdb ?? 0}\"); Console.WriteLine($\"TVDB-Id: {ids.Tvdb ?? 0}\"); Console.WriteLine($\"TVRage-Id: {ids.TvRage ?? 0}\"); } Here are the complete codes. Single Show without extended info: Trakt.NET/docs/codesnippets/examples/modules/shows/SingleShowExample.cs Single Show with extended info: Trakt.NET/docs/codesnippets/examples/modules/shows/SingleShowExtendedExample.cs"
  },
  "examples/modules/shows/get-trending-shows.html": {
    "href": "examples/modules/shows/get-trending-shows.html",
    "title": "Get Trending Shows | Trakt.NET",
    "keywords": "Get Trending Shows In this example we get the first two pages of trending shows. Since we do not need authentication or authorization for this example, only the Client-ID is required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); var client = new TraktClient(clientID); The following lines show how to get the first page of trending shows. If no TraktPagedParameters are given, the default page is the first page and the default limit per page is 10 items. TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync(new TraktExtendedInfo { Full = true }); foreach (ITraktTrendingShow trendingShow in trendingShowsResponse) { Console.WriteLine($\"Watchers: {trendingShow.Watchers}, Title: {trendingShow.Title}, Year: {trendingShow.Year}, Rating: {trendingShow.Rating}\"); } For getting the second page, we use the TraktPagedParameters for setting the page we want to get. var pagedParameters = new TraktPagedParameters { Page = 2 }; TraktPagedResponse<ITraktTrendingShow> trendingShowsResponse = await client.Shows.GetTrendingShowsAsync( new TraktExtendedInfo { Full = true }, pagedParameters: pagedParameters ); foreach (ITraktTrendingShow trendingShow in trendingShowsResponse) { Console.WriteLine($\"Watchers: {trendingShow.Watchers}, Title: {trendingShow.Title}, Year: {trendingShow.Year}, Rating: {trendingShow.Rating}\"); } Here are the complete codes. Trending Shows with default first page: Trakt.NET/docs/codesnippets/examples/modules/shows/TrendingShowsExample.cs Trending Shows with second page: Trakt.NET/docs/codesnippets/examples/modules/shows/TrendingShowsPagedExample.cs"
  },
  "examples/parameters/filter/calendar-filter.html": {
    "href": "examples/parameters/filter/calendar-filter.html",
    "title": "Calendar Filter | Trakt.NET",
    "keywords": "Calendar Filter In this example we create a calendar filter to filter all new calendar shows. Since we do not need authentication or authorization for this example, only the Client-ID is required. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); var client = new TraktClient(clientID); The following lines create a new calendar filter, which filters the request for specific genres, runtimes and year. ITraktCalendarFilter calendarFilter = TraktFilter.NewCalendarFilter() .WithGenres(\"action\", \"drama\") // We want only \"Action\" and \"Drama\" shows. // Note: These should be official Trakt genre slugs. .WithRuntimes(30, 60) // Shows with a runtime between 30 and 60 minutes. .WithYear(2022) // Shows which were released in the year 2022. // Also possible: //.WithCountries(\"de\", \"us\") //.WithLanguages(\"en\", \"de\") //.WithRatings(70, 90) //.WithQuery(\"game\") //.WithStudios(\"HBO\", \"Showtine\") //.WithVotes(7000, 9000) .Build(); // Finally, create the filter with the above given parameters. Get all new calendar shows filtered with the above created filter. TraktListResponse<ITraktCalendarShow> calendarShowsResponse = await client.Calendar.GetAllNewShowsAsync( filter: calendarFilter, // The above created calendar filter. extendedInfo: new TraktExtendedInfo { Full = true } // We like to get full information about the shows. ); ITraktCalendarShow calendarShow = calendarShowsResponse.Value.First(); Console.WriteLine($\"Title: {calendarShow.Title}\"); Console.WriteLine($\"Year: {calendarShow.Year}\"); Console.WriteLine($\"Rating: {calendarShow.Rating}\"); Console.WriteLine($\"First Aired: {calendarShow.FirstAiredInCalendar}\"); The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/parameters/filter/CalendarFilterExample.cs"
  },
  "examples/parameters/postbuilder/favorites-post-builder.html": {
    "href": "examples/parameters/postbuilder/favorites-post-builder.html",
    "title": "Favorites Post Builder | Trakt.NET",
    "keywords": "Favorites Post Builder In this example we use the post builder methods to create a ITraktSyncFavoritesPost. First, we create a new Trakt.NET client. Console.WriteLine(\"Please enter your Trakt Client-ID:\"); string? clientID = Console.ReadLine(); Console.WriteLine(\"Please enter your Trakt Client-Secret:\"); string? clientSecret = Console.ReadLine(); var client = new TraktClient(clientID, clientSecret); // For this example we do not want to manipulate the production API client.Configuration.UseSandboxEnvironment = true; The following lines show how to create a favorites post with its post builder. We get some sample data. TraktPagedResponse<ITraktTrendingMovie> trendingMovies = await client.Movies.GetTrendingMoviesAsync(); TraktPagedResponse<ITraktTrendingShow> trendingShows = await client.Shows.GetTrendingShowsAsync(); We use the post builder to create a favorites post. ITraktSyncFavoritesPost favoritesPost = TraktPost.NewSyncFavoritesPost() .WithMovies(trendingMovies) // Add all movies. .WithShows(trendingShows) // Add all shows. .Build(); // Creates the favorites post with the added movies and shows. Then we use the created favorites post in a request. TraktResponse<ITraktSyncFavoritesPostResponse> response = await client.Sync.AddFavoriteItemsAsync(favoritesPost); The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/parameters/postbuilder/FavoritesPostBuilderExample.cs"
  },
  "examples/serialization/serialize-authorization.html": {
    "href": "examples/serialization/serialize-authorization.html",
    "title": "Serialize Authorization | Trakt.NET",
    "keywords": "Serialize Authorization This example shows how we can serialize a given authorization as JSON data and deserialize the JSON data back to an authorization. For this example we simply create a fake authorization. ITraktAuthorization fakeAuthorization = TraktAuthorization.CreateWith(DateTime.Now, 90 * 24 * 3600, \"FakeAccessToken\", \"FakeRefreshToken\"); We use the TraktSerializationService to serialize the previously created authorization as JSON data. string fakeAuthorizationJson = await TraktSerializationService.SerializeAsync(fakeAuthorization, indentation: true); Console.WriteLine(\"Serialized Fake Authorization:\"); Console.WriteLine(fakeAuthorizationJson); Then, we use the TraktSerializationService to deserialize the JSON data back to an authorization object. ITraktAuthorization deserializedFakeAuthorization = await TraktSerializationService.DeserializeAsync(fakeAuthorizationJson); if (deserializedFakeAuthorization != null) { Console.WriteLine(\"Deserialized Fake Authorization:\"); Console.WriteLine($\"Created (UTC): {deserializedFakeAuthorization.CreatedAt}\"); Console.WriteLine($\"Access Scope: {deserializedFakeAuthorization.Scope.DisplayName}\"); Console.WriteLine($\"Refresh Possible: {deserializedFakeAuthorization.IsRefreshPossible}\"); Console.WriteLine($\"Valid: {deserializedFakeAuthorization.IsValid}\"); Console.WriteLine($\"Token Type: {deserializedFakeAuthorization.TokenType.DisplayName}\"); Console.WriteLine($\"Access Token: {deserializedFakeAuthorization.AccessToken}\"); Console.WriteLine($\"Refresh Token: {deserializedFakeAuthorization.RefreshToken}\"); Console.WriteLine($\"Token Expired: {deserializedFakeAuthorization.IsExpired}\"); Console.WriteLine($\"Expires in {deserializedFakeAuthorization.ExpiresInSeconds / 3600 / 24} days\"); } The complete code for this example can be found at: Trakt.NET/docs/codesnippets/examples/serialization/SerializationExample.cs"
  },
  "index.html": {
    "href": "index.html",
    "title": "Quick Start | Trakt.NET",
    "keywords": "Quick Start This is a .NET wrapper library with which developers can build .NET applications that integrate with the Trakt.tv API and access its features and data. Install latest Trakt.NET package dotnet add package Trakt.NET Get basic info about the show \"The Last of Us\" using System; using TraktNet; using TraktNet.Exceptions; using TraktNet.Objects.Get.Shows; using TraktNet.Responses; using TraktNet.Services; var client = new TraktClient(\"Your Trakt Client ID\"); try { TraktResponse<ITraktShow> showResponse = await client.Shows.GetShowAsync(\"the-last-of-us\"); ITraktShow show = showResponse.Value; Console.WriteLine($\"Title: {show.Title}\"); Console.WriteLine($\"Year: {show.Year}\"); Console.WriteLine(); string json = await TraktSerializationService.SerializeAsync(show, indentation: true); Console.WriteLine(json); } catch (TraktException ex) { Console.WriteLine(ex); } Output: Title: The Last of Us Year: 2023 { \"title\": \"The Last of Us\", \"year\": 2023, \"ids\": { \"trakt\": 158947, \"slug\": \"the-last-of-us\", \"tvdb\": 392256, \"imdb\": \"tt3581920\", \"tmdb\": 100088 } } What can I do with this library? Some examples that Trakt.NET can be used for include: Retrieve information about movies and TV shows, including details such as titles, descriptions, ratings and release dates Tracking what TV shows and movies a user is watching, has watched or wants to watch Providing recommendations for TV shows and movies based on a user's watch history Building custom TV show and movie lists To use Trakt.NET, you will need to obtain an API key from Trakt and follow the guidelines for using the API. Features Full Trakt.tv API Coverage (As of August 2023) Authentication and Authorization Support (OAuth 2.0 and Device) Completely asynchronous API Environments (Production and Sandbox) Serialization Service Supported Platforms .NET >= 5 .NET Core >= 2.0 .NET Framework >= 4.6.1 .NET MAUI Xamarin.iOS >= 10.14 Xamarin.Mac >= 3.8 Xamarin.Android >= 8.0 Windows UWP >= 10.0.16299 Mono >= 5.4"
  }
}